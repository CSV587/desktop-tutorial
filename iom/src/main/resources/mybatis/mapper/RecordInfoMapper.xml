<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.iom.mapper.oracle.RecordInfoMapper">

    <select id="getRecordInfoById" resultType="com.hy.iom.entities.RecordInfo">
        SELECT *
        FROM T_IOM_RECORDINFO_TMP
        WHERE id = #{id}

        union all

        SELECT *
        FROM T_IOM_RECORDINFO
        WHERE id = #{id}
    </select>

    <select id="getRecordInfoByUUID" resultType="com.hy.iom.entities.RecordInfo">
        SELECT *
        FROM T_IOM_RECORDINFO_TMP
        WHERE UUID = #{uuid}

        union

        SELECT *
        FROM T_IOM_RECORDINFO
        WHERE UUID = #{uuid}
    </select>

    <select id="selectByErrorTypeTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = #{type}
    </select>

    <select id="selectByErrorType" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = #{type}

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = #{type}
    </select>

    <select id="selectByErrorTypeCount" resultType="int">
        select count(1) from(
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = #{type}

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = #{type}
        )
    </select>

    <select id="selectConnectTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'connect'
    </select>

    <select id="selectConnect" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'connect'

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'connect'
    </select>

    <select id="selectConnectCount" resultType="int">
        select count(1) from(
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'connect'

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'connect'
        )
    </select>

    <select id="selectUnconnectTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'unconnect'
    </select>

    <select id="selectUnconnect" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'unconnect'

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'unconnect'
    </select>

    <select id="selectUnconnectCount" resultType="int">
        select count(1) from(
        select * from T_IOM_RECORDINFO_TMP r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'unconnect'

        union

        select * from T_IOM_RECORDINFO r
        where r.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and r.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        and r.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and r.callState = 'connectSuccess' and r.onState = 'unconnect'
        )
    </select>

    <select id="getRecordEndNodeCntByDate" resultType="com.hy.iom.entities.RecordEndNodeCntInfo">
        select endNodeName,recordDate,cnt from
        (SELECT finalNodeName as endNodeName,TO_CHAR(RECORDSTARTTIME,'YYYY-MM-DD') as recordDate,count(1) as cnt FROM
        T_IOM_RECORDINFO_TMP
        where projectId=#{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and RECORDSTARTTIME between to_date(#{recordStartTime} || ' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND
        to_date(#{recordEndTime} || ' 23:59:59','yyyy-mm-dd hh24:mi:ss')
        and finalNodeName is not null
        GROUP BY finalNodeName,TO_CHAR(RECORDSTARTTIME,'YYYY-MM-DD')

        union

        SELECT finalNodeName as endNodeName,TO_CHAR(RECORDSTARTTIME,'YYYY-MM-DD') as recordDate,count(1) as cnt FROM
        T_IOM_RECORDINFO
        where projectId=#{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ruleId=#{ruleId}
        </if>
        and RECORDSTARTTIME between to_date(#{recordStartTime} || ' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND
        to_date(#{recordEndTime} || ' 23:59:59','yyyy-mm-dd hh24:mi:ss')
        and finalNodeName is not null
        GROUP BY finalNodeName,TO_CHAR(RECORDSTARTTIME,'YYYY-MM-DD')
        )ORDER BY recordDate desc
    </select>

    <select id="selectTradeStatisticsTmp" resultType="com.hy.iom.reporting.page.TradeInfoPage">
        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd') as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd')
    </select>

    <select id="selectTradeStatistics" resultType="com.hy.iom.reporting.page.TradeInfoPage">
        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd') as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd')

        union

        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd') as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd')
    </select>

    <select id="selectTradeStatisticsCount" resultType="int">
        select count(1) from(
        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd') as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd')

        union

        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd') as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,to_char(ri.RECORDSTARTTIME,'yyyy-MM-dd')
        )
    </select>

    <select id="selectTimeSectionTradeStatisticsTmp" resultType="com.hy.iom.reporting.page.TradeInfoPage">
        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24') as hiddenDate,
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24'),
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00'
        order by to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' desc
    </select>

    <select id="selectTimeSectionTradeStatistics" resultType="com.hy.iom.reporting.page.TradeInfoPage">
        select projectId,ruleId,hiddenDate,callDate,connectCount,unconnectCount,successCount,failCount,
        successRate,failRate from
        (select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24') as hiddenDate,
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24'),
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00'

        union

        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24') as hiddenDate,
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24'),
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00'
        )order by callDate desc
    </select>

    <select id="selectTimeSectionTradeStatisticsCount" resultType="int">
        select count(1) from
        (select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24') as hiddenDate,
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO_TMP ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24'),
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00'

        union

        select #{projectId} as projectId,
        ri.ruleId as ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24') as hiddenDate,
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00' as callDate,
        sum(case when ri.ONSTATE = 'connect' THEN 1 ELSE 0 END) as connectCount,sum(case when ri.ONSTATE = 'unconnect'
        THEN 1 ELSE 0 END) as unconnectCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END) as successCount,sum(case when ri.tradeState is null THEN
        1 ELSE 0 END) as failCount,
        sum(case when ri.tradeState is null THEN 0 ELSE 1 END)/count(1) as successRate, sum(case when ri.tradeState is
        null THEN 1 ELSE 0 END)/count(1) as failRate
        from T_IOM_RECORDINFO ri
        where ri.projectId = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and ri.ruleId=#{ruleId}
        </if>
        and ri.RECORDSTARTTIME <![CDATA[>=]]> #{recordStartTime}
        and ri.RECORDENDTIME <![CDATA[<=]]> #{recordEndTime}
        group by ri.ruleId,
        to_char(ri.RECORDSTARTTIME, 'yyyy-MM-dd hh24'),
        to_char(ri.RECORDSTARTTIME, 'hh24') || ':00:00-' ||
        to_char(ri.RECORDSTARTTIME + 1 / 24, 'hh24') || ':00:00'
        )
    </select>

    <select id="selectPassNodeRateByDayTmp" resultType="java.util.LinkedHashMap">
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        TO_CHAR(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        order by day desc
    </select>

    <select id="selectPassNodeRateByDay" resultType="java.util.LinkedHashMap">
        select day,projectId,flowId,ruleId,sumCount,nodeNames,nodeCounts from
        (select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        TO_CHAR(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        AND t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND t.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        TO_CHAR(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        AND t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND t.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )order by day desc
    </select>

    <select id="selectPassNodeRateByDayCount" resultType="int">
        select count(1) from
        (select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        TO_CHAR(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        AND t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND t.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        TO_CHAR(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        AND t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND t.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )
    </select>

    <select id="selectPassNodeRateByWeekTmp" resultType="java.util.LinkedHashMap">
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        order by day desc
    </select>

    <select id="selectPassNodeRateByWeek" resultType="java.util.LinkedHashMap">
        select day,projectId,flowId,ruleId,sumCount,nodeNames,nodeCounts from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )order by day desc
    </select>

    <select id="selectPassNodeRateByWeekCount" resultType="int">
        select count(1) from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )
    </select>

    <select id="selectPassNodeRateByMonthTmp" resultType="java.util.LinkedHashMap">
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        order by day desc
    </select>

    <select id="selectPassNodeRateByMonth" resultType="java.util.LinkedHashMap">
        select day,projectId,flowId,ruleId,sumCount,nodeNames,nodeCounts from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )order by day desc
    </select>

    <select id="selectPassNodeRateByMonthCount" resultType="int">
        select count(1) from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy-MM') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )
    </select>

    <select id="selectPassNodeRateByYearTmp" resultType="java.util.LinkedHashMap">
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        order by day desc
    </select>

    <select id="selectPassNodeRateByYear" resultType="java.util.LinkedHashMap">
        select day,projectId,flowId,ruleId,sumCount,nodeNames,nodeCounts from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )order by day desc
    </select>

    <select id="selectPassNodeRateByYearCount" resultType="int">
        select count(1) from(
        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO_TMP t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO_TMP
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount

        union

        select day,
        projectId,
        flowId,
        ruleId,
        sumCount,
        to_char(xmlagg(xmlparse(content nodeName || ',' wellformed) order by nodeCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content nodeCount || ',' wellformed) order by nodeCount desc).getclobval()) as nodeCounts
        from (select t4.day as day,
        t4.PROJECTID as projectId,
        t4.FLOWID as flowId,
        t4.RULEID as ruleId,
        t4.NODENAME as nodeName,
        t4.nodeCount as nodeCount,
        t5.sumCount as sumCount
        from (select t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID, t3.NODENAME, count(*) as nodeCount
        from (select distinct t2.UUID, t2.NODENAME,
        to_char(t1.RECORDSTARTTIME, 'yyyy') as day,
        t1.RULEID, t1.FLOWID, t1.PROJECTID
        from (select *
        from T_IOM_RECORDINFO t
        where t.PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and t.RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and t.FLOWID = #{flowId}
        </if>
        and t.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and t.RECORDENDTIME <![CDATA[<=]]> #{endTime}) t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts' and t2.NODENAME not like '%ttscallBack'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        ) t3
        group by t3.NODENAME, t3.day, t3.PROJECTID, t3.RULEID, t3.FLOWID) t4
        left join (select
        to_char(RECORDSTARTTIME, 'yyyy') as day,
        projectId,
        flowId, ruleId,
        count(*) as sumCount
        from T_IOM_RECORDINFO
        where PROJECTID = #{projectId}
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        and RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        and RECORDENDTIME <![CDATA[<=]]> #{endTime}
        group by to_char(RECORDSTARTTIME, 'yyyy'), projectId, flowId, ruleId) t5 on t4.day = t5.day
        and t4.projectId = t5.projectId
        and t4.flowId = t5.flowId
        and t4.ruleId = t5.ruleId)
        group by day, projectId, flowId, ruleId, sumCount
        )
    </select>

    <select id="selectCallContentDetailByUuid" resultType="java.util.LinkedHashMap">
        select UUID, CALLCONTENT, CUSTOMINFO
        from T_IOM_CALLCONTENTDETAIL_TMP
        where uuid = #{uuid}

        union

        select UUID, CALLCONTENT, CUSTOMINFO
        from T_IOM_CALLCONTENTDETAIL
        where uuid = #{uuid}
    </select>

    <select id="selectHangupNodeByDayTmp" resultType="java.util.LinkedHashMap">
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        TO_CHAR(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        order by t1.day desc
    </select>

    <select id="selectHangupNodeByDay" resultType="java.util.LinkedHashMap">
        select day,FLOWID,PROJECTID,sumCount,nodeNames,nodeCounts from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        TO_CHAR(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        TO_CHAR(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )order by day desc
    </select>

    <select id="selectHangupNodeByDayCount" resultType="int">
        select count(1) from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        TO_CHAR(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        TO_CHAR(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM-dd') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM-dd'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )
    </select>

    <select id="selectHangupNodeByWeekTmp" resultType="java.util.LinkedHashMap">
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID order by t1.day desc
    </select>

    <select id="selectHangupNodeByWeek" resultType="java.util.LinkedHashMap">
        select day,FLOWID,PROJECTID,sumCount,nodeNames,nodeCounts from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )order by day desc
    </select>

    <select id="selectHangupNodeByWeekCount" resultType="int">
        select count(1) from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as nodeCounts
        from (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'iyyy-iw') || '周' as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'iyyy-iw') || '周', PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )
    </select>

    <select id="selectHangupNodeByMonthTmp" resultType="java.util.LinkedHashMap">
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID order by t1.day desc
    </select>

    <select id="selectHangupNodeByMonth" resultType="java.util.LinkedHashMap">
        select day,FLOWID,PROJECTID,sumCount,nodeNames,nodeCounts from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )order by t1.day desc
    </select>

    <select id="selectHangupNodeByMonthCount" resultType="int">
        select count(1) from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy-MM') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy-MM'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )
    </select>

    <select id="selectHangupNodeByYearTmp" resultType="java.util.LinkedHashMap">
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        order by t1.day desc
    </select>

    <select id="selectHangupNodeByYear" resultType="java.util.LinkedHashMap">
        select day,FLOWID,PROJECTID,sumCount,nodeNames,nodeCounts from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )order by day desc
    </select>

    <select id="selectHangupNodeByYearCount" resultType="int">
        select count(1) from
        (
        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID

        union

        select t1.day, t1.FLOWID, t1.PROJECTID, t2.sumCount, t1.nodeNames, t1.nodeCounts
        from (select day,
        FLOWID,
        PROJECTID,
        to_char(xmlagg(xmlparse(content endNodeName || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeNames,
        to_char(xmlagg(xmlparse(content recordCount || ',' wellformed) order by recordCount desc).getclobval()) as
        nodeCounts
        from (select to_char(RECORDSTARTTIME, 'yyyy') as day,
        FLOWID,
        PROJECTID,
        ENDNODENAME as endNodeName,
        count(*) as recordCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ENDNODENAME is not null
        group by to_char(RECORDSTARTTIME, 'yyyy'), FLOWID, PROJECTID, ENDNODENAME)
        group by day, PROJECTID, FLOWID) t1
        left join (select to_char(RECORDSTARTTIME, 'yyyy') as day, PROJECTID, FLOWID, count(*) sumCount
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        and ONSTATE = 'connect'
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="taskId!=null and taskId!=''">
            and TASKID = #{taskId}
        </if>
        group by to_char(RECORDSTARTTIME, 'yyyy'), PROJECTID, FLOWID) t2
        on t1.day = t2.day and t1.FLOWID = t2.FLOWID and t1.PROJECTID = t2.PROJECTID
        )
    </select>

    <select id="selectPassNodeRateDetailTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select distinct t1.*
        from (select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        )t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
    </select>

    <select id="selectPassNodeRateDetail" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select distinct t1.*
        from (select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        )t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>

        union

        select distinct t1.*
        from (select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO
        where 1 = 1
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        )t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
    </select>

    <select id="selectPassNodeRateDetailCount" resultType="int">
        select count(1) from(
        select distinct t1.*
        from (select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        )t1
        left join T_IOM_CALLCONTENT_TMP t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>

        union

        select distinct t1.*
        from (select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO
        where 1 = 1
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        )t1
        left join T_IOM_CALLCONTENT t2 on t1.UUID = t2.UUID
        where 1 = 1
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='robot'">
            and t2.TYPE = 'tts'
        </if>
        <if test="statisticalDirection!=null and statisticalDirection!='' and statisticalDirection=='customer'">
            and t2.TYPE = 'matchSucess'
        </if>
        <if test="nodeName!=null and nodeName!=''">
            and t2.NODENAME = #{nodeName}
        </if>
        )
    </select>

    <select id="selectHangupNodeDetailTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ONSTATE = 'connect'
    </select>

    <select id="selectHangupNodeDetail" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ONSTATE = 'connect'

        union

        select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO
        where 1 = 1
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ONSTATE = 'connect'
    </select>

    <select id="selectHangupNodeDetailCount" resultType="int">
        select count(1) from(
        select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ONSTATE = 'connect'

        union

        select id,
        uuid,
        callNumber,
        projectId,
        ruleId,
        to_char(RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        duration,
        callCount,
        onState,
        turnCount,
        endNodeName,
        finalNodeName
        from T_IOM_RECORDINFO
        where 1 = 1
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM-dd')
            and RECORDSTARTTIME <![CDATA[<=]]> to_date(#{date}, 'yyyy-MM-dd') + 1
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            and RECORDSTARTTIME <![CDATA[>=]]> iso_week_to_date(#{date})
            and RECORDSTARTTIME <![CDATA[<=]]> iso_week_to_date(#{date}) + 7
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}, 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}, 'yyyy-MM'), 1)
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            and RECORDSTARTTIME <![CDATA[>=]]> to_date(#{date}||'-01', 'yyyy-MM')
            and RECORDSTARTTIME <![CDATA[<=]]> add_months(to_date(#{date}||'-01', 'yyyy-MM'), 12)
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        and ONSTATE = 'connect'
        )
    </select>

    <select id="selectSceneThroughDeatilTmp" resultType="java.util.LinkedHashMap">
        select t1.UUID,
        t1.CALLNUMBER as customerId,
        to_char(t1.RECORDSTARTTIME,'yyyy-MM-dd hh24:mi:ss') as startTime,
        to_char(t1.RECORDENDTIME,'yyyy-MM-dd hh24:mi:ss') as endTime,
        t1.DURATION,
        t1.ONSTATE,
        t1.PROJECTID,
        t1.RULEID,
        t1.FLOWID,
        t1.TASKID,
        t2.nodeNames,
        t2.sceneNames,
        t3.CONTENTS
        from (select CALLNUMBER,RECORDSTARTTIME,RECORDENDTIME,DURATION,ONSTATE,UUID,PROJECTID,RULEID,FLOWID,TASKID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ) t1
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content NODENAME || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content THROUGHFLAG || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as sceneNames
        from T_IOM_SCENETHROUGHDETAIL_TMP
        where 1 = 1
        <if test="sceneName!=null and sceneName!=''">
            and NODENAME = #{sceneName}
        </if>
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        )
        group by uuid) t2 on t1.UUID = t2.UUID
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content CONTENT || '\n' wellformed) order by SEQ
        ASC).getclobval()) as CONTENTS
        from (
        select
        UUID,
        seq,
        (CASE WHEN TYPE = 'tts' THEN 'A:' || CONTENT ELSE 'B:' || CONTENT END) as CONTENT
        from T_IOM_CALLCONTENT_TMP t
        where 1 = 1
        and (TYPE = 'tts'
        or TYPE = 'speechSuccess')
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ))
        group by UUID) t3 on t1.UUID = t3.UUID
        where t2.UUID is not null
    </select>

    <select id="selectSceneThroughDeatil" resultType="java.util.LinkedHashMap">
        select t1.UUID,
        t1.CALLNUMBER as customerId,
        to_char(t1.RECORDSTARTTIME,'yyyy-MM-dd hh24:mi:ss') as startTime,
        to_char(t1.RECORDENDTIME,'yyyy-MM-dd hh24:mi:ss') as endTime,
        t1.DURATION,
        t1.ONSTATE,
        t1.PROJECTID,
        t1.RULEID,
        t1.FLOWID,
        t1.TASKID,
        t2.nodeNames,
        t2.sceneNames,
        t3.CONTENTS
        from (select CALLNUMBER,RECORDSTARTTIME,RECORDENDTIME,DURATION,ONSTATE,UUID,PROJECTID,RULEID,FLOWID,TASKID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ) t1
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content NODENAME || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content THROUGHFLAG || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as sceneNames
        from T_IOM_SCENETHROUGHDETAIL_TMP
        where 1 = 1
        <if test="sceneName!=null and sceneName!=''">
            and NODENAME = #{sceneName}
        </if>
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        )
        group by uuid) t2 on t1.UUID = t2.UUID
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content CONTENT || '\n' wellformed) order by SEQ
        ASC).getclobval()) as CONTENTS
        from (
        select
        UUID,
        seq,
        (CASE WHEN TYPE = 'tts' THEN 'A:' || CONTENT ELSE 'B:' || CONTENT END) as CONTENT
        from T_IOM_CALLCONTENT_TMP t
        where 1 = 1
        and (TYPE = 'tts'
        or TYPE = 'speechSuccess')
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ))
        group by UUID) t3 on t1.UUID = t3.UUID
        where t2.UUID is not null

        union

        select t1.UUID,
        t1.CALLNUMBER as customerId,
        to_char(t1.RECORDSTARTTIME,'yyyy-MM-dd hh24:mi:ss') as startTime,
        to_char(t1.RECORDENDTIME,'yyyy-MM-dd hh24:mi:ss') as endTime,
        t1.DURATION,
        t1.ONSTATE,
        t1.PROJECTID,
        t1.RULEID,
        t1.FLOWID,
        t1.TASKID,
        t2.nodeNames,
        t2.sceneNames,
        t3.CONTENTS
        from (select CALLNUMBER,RECORDSTARTTIME,RECORDENDTIME,DURATION,ONSTATE,UUID,PROJECTID,RULEID,FLOWID,TASKID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ) t1
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content NODENAME || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content THROUGHFLAG || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as sceneNames
        from T_IOM_SCENETHROUGHDETAIL
        where 1 = 1
        <if test="sceneName!=null and sceneName!=''">
            and NODENAME = #{sceneName}
        </if>
        and UUID in (select UUID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        )
        group by uuid) t2 on t1.UUID = t2.UUID
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content CONTENT || '\n' wellformed) order by SEQ
        ASC).getclobval()) as CONTENTS
        from (
        select
        UUID,
        seq,
        (CASE WHEN TYPE = 'tts' THEN 'A:' || CONTENT ELSE 'B:' || CONTENT END) as CONTENT
        from T_IOM_CALLCONTENT t
        where 1 = 1
        and (TYPE = 'tts'
        or TYPE = 'speechSuccess')
        and UUID in (select UUID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ))
        group by UUID) t3 on t1.UUID = t3.UUID
        where t2.UUID is not null
    </select>

    <select id="selectSceneThroughDeatilCount" resultType="int">
        select count(1) from(
        select t1.UUID,
        t1.CALLNUMBER as customerId,
        to_char(t1.RECORDSTARTTIME,'yyyy-MM-dd hh24:mi:ss') as startTime,
        to_char(t1.RECORDENDTIME,'yyyy-MM-dd hh24:mi:ss') as endTime,
        t1.DURATION,
        t1.ONSTATE,
        t1.PROJECTID,
        t1.RULEID,
        t1.FLOWID,
        t1.TASKID,
        t2.nodeNames,
        t2.sceneNames,
        t3.CONTENTS
        from (select CALLNUMBER,RECORDSTARTTIME,RECORDENDTIME,DURATION,ONSTATE,UUID,PROJECTID,RULEID,FLOWID,TASKID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ) t1
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content NODENAME || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content THROUGHFLAG || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as sceneNames
        from T_IOM_SCENETHROUGHDETAIL_TMP
        where 1 = 1
        <if test="sceneName!=null and sceneName!=''">
            and NODENAME = #{sceneName}
        </if>
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        )
        group by uuid) t2 on t1.UUID = t2.UUID
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content CONTENT || '\n' wellformed) order by SEQ
        ASC).getclobval()) as CONTENTS
        from (
        select
        UUID,
        seq,
        (CASE WHEN TYPE = 'tts' THEN 'A:' || CONTENT ELSE 'B:' || CONTENT END) as CONTENT
        from T_IOM_CALLCONTENT_TMP t
        where 1 = 1
        and (TYPE = 'tts'
        or TYPE = 'speechSuccess')
        and UUID in (select UUID
        from T_IOM_RECORDINFO_TMP
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ))
        group by UUID) t3 on t1.UUID = t3.UUID
        where t2.UUID is not null

        union

        select t1.UUID,
        t1.CALLNUMBER as customerId,
        to_char(t1.RECORDSTARTTIME,'yyyy-MM-dd hh24:mi:ss') as startTime,
        to_char(t1.RECORDENDTIME,'yyyy-MM-dd hh24:mi:ss') as endTime,
        t1.DURATION,
        t1.ONSTATE,
        t1.PROJECTID,
        t1.RULEID,
        t1.FLOWID,
        t1.TASKID,
        t2.nodeNames,
        t2.sceneNames,
        t3.CONTENTS
        from (select CALLNUMBER,RECORDSTARTTIME,RECORDENDTIME,DURATION,ONSTATE,UUID,PROJECTID,RULEID,FLOWID,TASKID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ) t1
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content NODENAME || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as nodeNames,
        TO_CHAR(xmlagg(xmlparse(content THROUGHFLAG || ',' wellformed) order by THROUGHFLAG
        desc).getclobval()) as sceneNames
        from T_IOM_SCENETHROUGHDETAIL
        where 1 = 1
        <if test="sceneName!=null and sceneName!=''">
            and NODENAME = #{sceneName}
        </if>
        and UUID in (select UUID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        )
        group by uuid) t2 on t1.UUID = t2.UUID
        left join (select UUID,
        TO_CHAR(xmlagg(xmlparse(content CONTENT || '\n' wellformed) order by SEQ
        ASC).getclobval()) as CONTENTS
        from (
        select
        UUID,
        seq,
        (CASE WHEN TYPE = 'tts' THEN 'A:' || CONTENT ELSE 'B:' || CONTENT END) as CONTENT
        from T_IOM_CALLCONTENT t
        where 1 = 1
        and (TYPE = 'tts'
        or TYPE = 'speechSuccess')
        and UUID in (select UUID
        from T_IOM_RECORDINFO
        where 1 = 1
        AND RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        <if test="projectId!=null and projectId!=''">
            and PROJECTID = #{projectId}
        </if>
        <if test="flowId!=null and flowId!=''">
            and FLOWID = #{flowId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            and RULEID = #{ruleId}
        </if>
        <if test="customerId!=null and customerId!=''">
            and CALLNUMBER = #{customerId}
        </if>
        <if test="onState!=null and onState!=''">
            and ONSTATE = #{onState}
        </if>
        ))
        group by UUID) t3 on t1.UUID = t3.UUID
        where t2.UUID is not null
        )
    </select>

    <!-- 接通率查询sql start  -->

    <select id="selectConnectionRateByYearTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID ORDER BY T1.DAY DESC
    </select>

    <!-- 按年查询 -->
    <select id="selectConnectionRateByYear" resultType="java.util.LinkedHashMap">
        select DAY,PROJECTID,RULEID,TIMES,TIMECOUNTS,COUNTS FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )ORDER BY DAY DESC
    </select>

    <select id="selectConnectionRateByYearCount" resultType="int">
        select count(1) FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectConnectionRateByMonthTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID ORDER BY T1.DAY DESC
    </select>

    <!-- 按月查询 -->
    <select id="selectConnectionRateByMonth" resultType="java.util.LinkedHashMap">
        select DAY,PROJECTID,RULEID,TIMES,TIMECOUNTS,COUNTS FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )ORDER BY DAY DESC
    </select>

    <select id="selectConnectionRateByMonthCount" resultType="int">
        select count(1) FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS
        DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectConnectionRateByWeekTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') ||
        '周' AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID ORDER BY T1.DAY DESC
    </select>

    <!-- 按周来查询 -->
    <select id="selectConnectionRateByWeek" resultType="java.util.LinkedHashMap">
        select DAY,PROJECTID,RULEID,TIMES,TIMECOUNTS,COUNTS FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') ||
        '周' AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') ||
        '周' AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )ORDER BY DAY DESC
    </select>

    <select id="selectConnectionRateByWeekCount" resultType="int">
        select count(1) FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') ||
        '周' AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') ||
        '周' AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周',T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectConnectionRateByDayTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd')
        AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID ORDER BY T1.DAY DESC
    </select>

    <!-- 按日来查询 -->
    <select id="selectConnectionRateByDay" resultType="java.util.LinkedHashMap">
        select DAY,PROJECTID,RULEID,TIMES,TIMECOUNTS,COUNTS FROM
        (
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd')
        AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd')
        AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )ORDER BY DAY DESC
    </select>
    <!-- 接通率查询sql end  -->

    <select id="selectConnectionRateByDayCount" resultType="int">
        select count(1) FROM(
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd')
        AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T1.TIMES,T1.TIMECOUNTS,T2.COUNTS FROM
        (
        SELECT DAY,PROJECTID,RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT TIME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS TIMECOUNTS
        FROM
        (SELECT T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'hh24') AS TIME,TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd')
        AS DAY,COUNT(*) AS COUNT
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'hh24'),TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID)
        GROUP BY DAY,PROJECTID,RULEID) T1
        LEFT JOIN
        (SELECT TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') AS DAY,T.PROJECTID,T.RULEID,COUNT(*) AS COUNTS
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="validStartTime!=null and validStartTime!=''">
            AND TO_CHAR(T.RECORDSTARTTIME,'HH24:mi:ss') <![CDATA[>=]]> #{validStartTime}
        </if>
        <if test="validEndTime!=null and validEndTime!=''">
            AND TO_CHAR(T.RECORDENDTIME,'HH24:mi:ss') <![CDATA[<=]]> #{validEndTime}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> TO_DATE(#{startTime}, 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> TO_DATE(#{endTime}, 'yyyy-mm-dd') + 1
        GROUP BY TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd'),T.PROJECTID,T.RULEID) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectConnectionRateDetailTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        AND TO_CHAR(T.RECORDSTARTTIME,'hh24') = SUBSTR(#{time},0,2)
        AND ONSTATE = 'connect'
    </select>

    <!-- 接通率明细查询sql -->
    <select id="selectConnectionRateDetail" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        AND TO_CHAR(T.RECORDSTARTTIME,'hh24') = SUBSTR(#{time},0,2)
        AND ONSTATE = 'connect'

        union

        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        AND TO_CHAR(T.RECORDSTARTTIME,'hh24') = SUBSTR(#{time},0,2)
        AND ONSTATE = 'connect'
    </select>
    <!-- 挂机率查询 SQL start -->

    <select id="selectConnectionRateDetailCount" resultType="int">
        select count(1) from(
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        AND TO_CHAR(T.RECORDSTARTTIME,'hh24') = SUBSTR(#{time},0,2)
        AND ONSTATE = 'connect'

        union

        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO T
        WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        AND TO_CHAR(T.RECORDSTARTTIME,'hh24') = SUBSTR(#{time},0,2)
        AND ONSTATE = 'connect'
        )
    </select>

    <select id="selectHangupRateByDayTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND T.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> #{startTime}
        AND T.RECORDSTARTTIME <![CDATA[<=]]> #{endTime}
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <!-- 按日查询  -->
    <select id="selectHangupRateByDay" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <select id="selectHangupRateByDayCount" resultType="int">
        select count(1) from(
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM-DD') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectHangupRateByWeekTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <!-- 按周查询 -->
    <select id="selectHangupRateByWeek" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <select id="selectHangupRateByWeekCount" resultType="int">
        select count(1) from(
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectHangupRateByMonthTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <!-- 按月查询 -->
    <select id="selectHangupRateByMonth" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <select id="selectHangupRateByMonthCount" resultType="int">
        select count(1) from(
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY-MM') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectHangupRateByYearTmp" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>

    <!-- 按年查询 -->
    <select id="selectHangupRateByYear" resultType="java.util.LinkedHashMap">
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
    </select>
    <!-- 挂机率查询 SQL end -->

    <select id="selectHangupRateByYearCount" resultType="int">
        select count(1) from(
        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID

        union

        SELECT T1.DAY,T1.PROJECTID,T1.RULEID,T2.COUNTS,T1.NODENAMES,T1.NODECOUNTS FROM
        (SELECT DAY,PROJECTID, RULEID,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT NODENAME || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODENAMES,
        TO_CHAR(XMLAGG(XMLPARSE(CONTENT COUNT || ',' WELLFORMED) ORDER BY COUNT DESC).GETCLOBVAL()) AS NODECOUNTS
        FROM (
        SELECT RECORDSTARTTIME DAY,PROJECTID,RULEID,NODENAME,COUNT(*) COUNT
        FROM (
        SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0) )
        NODENAME
        FROM (
        SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK
        FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB
        LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC)
        GROUP BY RECORDSTARTTIME,NODENAME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC,NODENAME DESC)
        GROUP BY DAY ,PROJECTID, RULEID ) T1
        LEFT JOIN
        (SELECT RECORDSTARTTIME day,PROJECTID,RULEID,COUNT(*) COUNTS FROM
        (SELECT TO_CHAR(TC.RECORDSTARTTIME,'YYYY') RECORDSTARTTIME,TC.PROJECTID,TC.RULEID,
        TC.ENDNODENAME || '-' ||
        NVL(SUBSTR(TC.CONTENT,INSTR(TC.CONTENT,'[',1,2)+1,INSTR(TC.CONTENT,']',1,2)-INSTR(TC.CONTENT,'[',1,2)-1),0)
        NODECOUNT FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        <if test="endNodeName!=null and endNodeName!=''">
            and ENDNODENAME = #{endNodeName}
        </if>
        AND T.ONSTATE = 'connect'
        AND T.RECORDSTARTTIME <![CDATA[>=]]> to_date(to_char(#{startTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        AND T.RECORDSTARTTIME <![CDATA[<=]]> to_date(to_char(#{endTime}, 'yyyy-MM-dd'), 'yyyy-mm-dd')
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME ASC)
        GROUP BY RECORDSTARTTIME,PROJECTID,RULEID ORDER BY RECORDSTARTTIME DESC) T2
        ON T1.DAY = T2.DAY AND T1.PROJECTID = T2.PROJECTID AND T1.RULEID = T2.RULEID
        )
    </select>

    <select id="selectHangupRateDetailTmp" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        RIGHT JOIN
        (SELECT
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-mm-dd') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-MM') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy') RECORDSTARTTIME,
        </if>
        TC.PROJECTID,TC.RULEID,TC.UUID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0)
        )NODENAME FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        AND T.ONSTATE = 'connect'
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC) TD
        ON T.UUID = TD.UUID
        WHERE TD.RECORDSTARTTIME = #{date} AND TD.NODENAME = #{endNodeName}
    </select>

    <!-- 挂机率明细查询 -->
    <select id="selectHangupRateDetail" resultType="com.hy.iom.reporting.page.RecordInfoPage">
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        RIGHT JOIN
        (SELECT
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-mm-dd') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-MM') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy') RECORDSTARTTIME,
        </if>
        TC.PROJECTID,TC.RULEID,TC.UUID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0)
        )NODENAME FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        AND T.ONSTATE = 'connect'
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC) TD
        ON T.UUID = TD.UUID
        WHERE TD.RECORDSTARTTIME = #{date} AND TD.NODENAME = #{endNodeName}

        union

        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO T
        RIGHT JOIN
        (SELECT
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-mm-dd') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-MM') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy') RECORDSTARTTIME,
        </if>
        TC.PROJECTID,TC.RULEID,TC.UUID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0)
        )NODENAME FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        AND T.ONSTATE = 'connect'
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC) TD
        ON T.UUID = TD.UUID
        WHERE TD.RECORDSTARTTIME = #{date} AND TD.NODENAME = #{endNodeName}
    </select>

    <select id="selectHangupRateDetailCount" resultType="int">
        select count(uuid) from (
        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO_TMP T
        RIGHT JOIN
        (SELECT
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-mm-dd') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-MM') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy') RECORDSTARTTIME,
        </if>
        TC.PROJECTID,TC.RULEID,TC.UUID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0)
        )NODENAME FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO_TMP T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        AND T.ONSTATE = 'connect'
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        ) TB LEFT JOIN T_IOM_CALLCONTENT_TMP A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC) TD
        ON T.UUID = TD.UUID
        WHERE TD.RECORDSTARTTIME = #{date} AND TD.NODENAME = #{endNodeName}

        union

        SELECT T.ID,T.UUID,T.CALLNUMBER,T.PROJECTID,T.RULEID,TO_CHAR(T.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDSTARTTIME,
        TO_CHAR(RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') AS
        RECORDENDTIME,T.DURATION,T.CALLCOUNT,T.ONSTATE,T.TURNCOUNT,T.TASKID,
        T.ENDNODENAME,T.FINALNODENAME
        FROM T_IOM_RECORDINFO T
        RIGHT JOIN
        (SELECT
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-mm-dd') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            TO_CHAR(TC.RECORDSTARTTIME,'iyyy-iw') || '周' RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy-MM') RECORDSTARTTIME,
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            TO_CHAR(TC.RECORDSTARTTIME,'yyyy') RECORDSTARTTIME,
        </if>
        TC.PROJECTID,TC.RULEID,TC.UUID,
        TO_CHAR(TC.ENDNODENAME || '-' ||
        NVL(substr(TC.CONTENT,instr(TC.CONTENT,'[',1,2)+1,instr(TC.CONTENT,']',1,2)-instr(TC.CONTENT,'[',1,2)-1),0)
        )NODENAME FROM
        (SELECT TB.UUID,TB.PROJECTID,TB.RULEID,TB.ENDNODENAME,TB.RECORDSTARTTIME,A.CONTENT,A.SEQ,row_number()
        over(partition by TB.UUID order by A.SEQ DESC) RANK FROM (
        SELECT * FROM T_IOM_RECORDINFO T WHERE 1=1
        <if test="projectId!=null and projectId!=''">
            AND T.PROJECTID = #{projectId}
        </if>
        <if test="ruleId!=null and ruleId!=''">
            AND T.RULEID = #{ruleId}
        </if>
        <if test="taskId!=null and taskId!=''">
            AND T.TASKID = #{taskId}
        </if>
        AND T.ONSTATE = 'connect'
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='day'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-mm-dd') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='week'">
            AND TO_CHAR(T.RECORDSTARTTIME,'iyyy-iw') || '周' = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='month'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy-MM') = #{date}
        </if>
        <if test="statisticalDimension!=null and statisticalDimension!='' and statisticalDimension=='year'">
            AND TO_CHAR(T.RECORDSTARTTIME,'yyyy') = #{date}
        </if>
        ) TB LEFT JOIN T_IOM_CALLCONTENT A ON TB.UUID = A.UUID AND A.NODENAME LIKE
        REGEXP_REPLACE(TB.ENDNODENAME, '[a-zA-Z]+', '')|| 'calculate' AND TYPE = 'calculate') TC WHERE TC.RANK = 1 ORDER
        BY TC.RECORDSTARTTIME DESC) TD
        ON T.UUID = TD.UUID
        WHERE TD.RECORDSTARTTIME = #{date} AND TD.NODENAME = #{endNodeName}
        )
    </select>

    <select id="queryAverageTime" resultType="com.hy.iom.quality.averagetime.page.AverageTimePage">
        select id,
        dimensionname,
        projectId as projectName,
        advancedwarning,
        middlewarning,
        lowwarning,
        fst,
        lmt,
        fsu,
        lmu
        from T_IOM_QUALITY
        where QUATYPE = 'AverageTime'
        <if test="dimensionName!=null and dimensionName!=''">
            AND dimensionname = #{dimensionName}
        </if>
        <if test="projectName!=null and projectName!=''">
            AND projectId = #{projectName}
        </if>
        order by dimensionname
    </select>

    <select id="queryConnectionRate" resultType="com.hy.iom.quality.connectionrate.page.ConnectionRatePage">
        select id,
        dimensionname,
        projectId as projectName,
        advancedwarning,
        middlewarning,
        lowwarning,
        fst,
        lmt,
        fsu,
        lmu
        from T_IOM_QUALITY
        where QUATYPE = 'ConnectionRate'
        <if test="dimensionName!=null and dimensionName!=''">
            AND dimensionname = #{dimensionName}
        </if>
        <if test="projectName!=null and projectName!=''">
            AND projectId = #{projectName}
        </if>
        order by dimensionname
    </select>

    <insert id="addAverageTime" parameterType="com.hy.iom.quality.averagetime.page.AverageTimePage">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(sys_guid(), '-', '') as id from DUAL
        </selectKey>
        insert into T_IOM_QUALITY(ID,DIMENSIONNAME,
        ADVANCEDWARNING,MIDDLEWARNING,LOWWARNING,PROJECTID,QUATYPE,FST,LMT,FSU,LMU)
        select
        #{id},#{dimensionName},#{advancedWarning},#{middleWarning},#{lowWarning},#{projectName},'AverageTime',sysdate,
        sysdate,#{fsu},#{lmu} from dual
        where not exists (select 1 from T_IOM_QUALITY where QUATYPE = 'AverageTime' and dimensionname =
        #{dimensionName} and projectId =
        #{projectName})
    </insert>

    <insert id="addConnectionRate" parameterType="com.hy.iom.quality.connectionrate.page.ConnectionRatePage">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(sys_guid(), '-', '') as id from DUAL
        </selectKey>
        insert into T_IOM_QUALITY(ID,DIMENSIONNAME,
        ADVANCEDWARNING,MIDDLEWARNING,LOWWARNING,PROJECTID,QUATYPE,FST,LMT,FSU,LMU)
        select
        #{id},#{dimensionName},#{advancedWarning},#{middleWarning},#{lowWarning},#{projectName},'ConnectionRate',sysdate,
        sysdate,#{fsu},#{lmu} from DUAL
        where not exists (select 1 from T_IOM_QUALITY where QUATYPE = 'ConnectionRate' and DIMENSIONNAME =
        #{dimensionName} and PROJECTID = #{projectName})
    </insert>

    <update id="editQuality" parameterType="com.hy.iom.quality.basepage.QualityPage">
       update T_IOM_QUALITY
        set ADVANCEDWARNING = #{advancedWarning},
            MIDDLEWARNING   = #{middleWarning},
            LOWWARNING      = #{lowWarning},
            LMT             = sysdate,
            LMU             = #{lmu}
        where ID = #{id}
    </update>


    <delete id="delQuality" parameterType="com.hy.iom.quality.basepage.QualityPage">
       delete T_IOM_QUALITY where ID = #{id}
    </delete>

    <select id="selectByConditionTmp" resultType="java.util.LinkedHashMap">
        select ri.id,
        ri.uuid,
        ri.callNumber,
        ri.ruleId,
        ri.projectId,
        to_char(ri.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(ri.RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        ri.duration,
        ri.callCount,
        ri.onState,
        ri.turnCount,
        ri.endNodeName,
        ri.finalNodeName,
        ti.tagid
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_RECORDINFOTAG ti on ri.id = ti.uuid where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO_TMP
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>
        order by ri.recordStartTime desc
    </select>

    <select id="selectByCondition" resultType="java.util.LinkedHashMap">
        select id,uuid,callNumber,ruleId,projectId,RECORDSTARTTIME,RECORDENDTIME,
        duration,callCount,onState,turnCount,endNodeName,finalNodeName,tagid from
        (select ri.id,
        ri.uuid,
        ri.callNumber,
        ri.ruleId,
        ri.projectId,
        to_char(ri.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(ri.RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        ri.duration,
        ri.callCount,
        ri.onState,
        ri.turnCount,
        ri.endNodeName,
        ri.finalNodeName,
        ti.tagid
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_RECORDINFOTAG ti on ri.id = ti.uuid where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO_TMP
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>

        union all

        select ri.id,
        ri.uuid,
        ri.callNumber,
        ri.ruleId,
        ri.projectId,
        to_char(ri.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(ri.RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        ri.duration,
        ri.callCount,
        ri.onState,
        ri.turnCount,
        ri.endNodeName,
        ri.finalNodeName,
        ti.tagid
        from T_IOM_RECORDINFO ri
        left join T_IOM_RECORDINFOTAG ti on ri.id = ti.uuid where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>
        )
        order by RECORDSTARTTIME desc
    </select>

    <select id="selectByConditionCount" resultType="int">
        select count(1) from
        (select ri.id,
        ri.uuid,
        ri.callNumber,
        ri.ruleId,
        ri.projectId,
        to_char(ri.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(ri.RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        ri.duration,
        ri.callCount,
        ri.onState,
        ri.turnCount,
        ri.endNodeName,
        ri.finalNodeName,
        ti.tagid
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_RECORDINFOTAG ti on ri.id = ti.uuid where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO_TMP
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>

        union all

        select ri.id,
        ri.uuid,
        ri.callNumber,
        ri.ruleId,
        ri.projectId,
        to_char(ri.RECORDSTARTTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDSTARTTIME,
        to_char(ri.RECORDENDTIME,'YYYY-MM-DD HH24:mi:ss') as RECORDENDTIME,
        ri.duration,
        ri.callCount,
        ri.onState,
        ri.turnCount,
        ri.endNodeName,
        ri.finalNodeName,
        ti.tagid
        from T_IOM_RECORDINFO ri
        left join T_IOM_RECORDINFOTAG ti on ri.id = ti.uuid where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>
        )
    </select>

    <select id="selectCallContentDetailByConditionTmp" resultType="java.util.LinkedHashMap">
        select ri.uuid as uuid,
        ri.recordPath as recordPath,
        ri.callNumber as callNumber,
        ri.recordStartTime as recordStartTime,
        cd.callContent as callContent,
        cd.customInfo as customInfo
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_CALLCONTENTDETAIL_TMP cd on cd.uuid = ri.uuid
        where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO_TMP
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>
    </select>

    <select id="selectCallContentDetailByCondition" resultType="java.util.LinkedHashMap">
        select ri.uuid as uuid,
        ri.recordPath as recordPath,
        ri.callNumber as callNumber,
        ri.recordStartTime as recordStartTime,
        cd.callContent as callContent,
        cd.customInfo as customInfo
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_CALLCONTENTDETAIL_TMP cd on cd.uuid = ri.uuid
        where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO_TMP
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>

        union all

        select ri.uuid as uuid,
        ri.recordPath as recordPath,
        ri.callNumber as callNumber,
        ri.recordStartTime as recordStartTime,
        cd.callContent as callContent,
        cd.customInfo as customInfo
        from T_IOM_RECORDINFO ri
        left join T_IOM_CALLCONTENTDETAIL cd on cd.uuid = ri.uuid
        where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise >
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise >
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                    and exists(select 1 from T_IOM_CUSTOMERINFO tci where tci.name = #{index}
                    and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                    and tci.uuid in (select uuid
                    from T_IOM_RECORDINFO
                    where 1 = 1
                    <if test="rec.projectId!=null and rec.projectId!=''">
                        and projectId = #{rec.projectId}
                    </if>
                    <if test="rec.taskId!=null and rec.taskId!=''">
                        and taskId = #{rec.taskId}
                    </if>
                    <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                        and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                        and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                    </if>
                    <if test="rec.callNumber!=null and rec.callNumber!=''">
                        and callNumber = #{rec.callNumber}
                    </if>
                    <if test="rec.onState!=null and rec.onState!=''">
                        and onState = #{rec.onState}
                    </if>
                    <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                        and blackListFlag = #{rec.blackListFlag}
                    </if>
                    <if test="rec.callCount >= 1">
                        <choose>
                            <when test="rec.callCount == 1">
                                and callCount = 1
                            </when>
                            <otherwise>
                                and callCount <![CDATA[>]]> 1
                            </otherwise>
                        </choose>
                    </if>
                    <if test="rec.durationStart >= 0">
                        and duration <![CDATA[>=]]> #{rec.durationStart}
                    </if>
                    <if test="rec.durationEnd >= 0">
                        and duration <![CDATA[<=]]> #{rec.durationEnd}
                    </if>
                    <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                        and endNodeName in
                        <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.ruleId!=null and rec.ruleId!=''">
                        and ruleId = #{rec.ruleId}
                    </if>
                    <if test="rec.callResult!=null and rec.callResult!=''">
                        and finalNodeName in
                        <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeState!=null and rec.tradeState!=''">
                        and tradeState in
                        <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                    <if test="rec.tradeType!=null and rec.tradeType!=''">
                        <choose>
                            <when test="rec.tradeType=='success'">
                                and tradeState is not null
                            </when>
                            <when test="rec.tradeType=='fail'">
                                and tradeState is null
                            </when>
                        </choose>
                    </if>
                    )
                    )
                    </if>
                </foreach>
            </if>
        </if>
    </select>

    <select id="selectCallContentCountByCondition" resultType="int">
        select count(1) from(
        select ri.uuid as uuid,
        ri.recordPath as recordPath,
        ri.callNumber as callNumber,
        ri.recordStartTime as recordStartTime,
        cd.callContent as callContent,
        cd.customInfo as customInfo
        from T_IOM_RECORDINFO_TMP ri
        left join T_IOM_CALLCONTENTDETAIL_TMP cd on cd.uuid = ri.uuid
        where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO_TMP
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>

        union all

        select ri.uuid as uuid,
        ri.recordPath as recordPath,
        ri.callNumber as callNumber,
        ri.recordStartTime as recordStartTime,
        cd.callContent as callContent,
        cd.customInfo as customInfo
        from T_IOM_RECORDINFO ri
        left join T_IOM_CALLCONTENTDETAIL cd on cd.uuid = ri.uuid
        where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>
        )
    </select>

    <select id="countByCondition" resultType="java.util.LinkedHashMap">
        select count(1) as count from(
        T_IOM_RECORDINFO ri where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>

        union all

        T_IOM_RECORDINFO_TMP ri where 1=1
        <if test="rec!=null">
            <if test="rec.projectId!=null and rec.projectId!=''">
                and ri.projectId = #{rec.projectId}
            </if>
            <if test="rec.taskId!=null and rec.taskId!=''">
                and ri.taskId = #{rec.taskId}
            </if>
            <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                and ri.recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                and ri.recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
            </if>
            <if test="rec.callNumber!=null and rec.callNumber!=''">
                and ri.callNumber = #{rec.callNumber}
            </if>
            <if test="rec.onState!=null and rec.onState!=''">
                and ri.onState = #{rec.onState}
            </if>
            <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                and ri.blackListFlag = #{rec.blackListFlag}
            </if>
            <if test="rec.callCount >= 1">
                <choose>
                    <when test="rec.callCount == 1">
                        and ri.callCount = 1
                    </when>
                    <otherwise>
                        and ri.callCount <![CDATA[>]]> 1
                    </otherwise>
                </choose>
            </if>
            <if test="rec.durationStart >= 0">
                and ri.duration <![CDATA[>=]]> #{rec.durationStart}
            </if>
            <if test="rec.durationEnd >= 0">
                and ri.duration <![CDATA[<=]]> #{rec.durationEnd}
            </if>
            <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                and ri.endNodeName in
                <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.ruleId!=null and rec.ruleId!=''">
                and ri.ruleId = #{rec.ruleId}
            </if>
            <if test="rec.callResult!=null and rec.callResult!=''">
                and ri.finalNodeName in
                <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeState!=null and rec.tradeState!=''">
                and ri.tradeState in
                <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="rec.tradeType!=null and rec.tradeType!=''">
                <choose>
                    <when test="rec.tradeType=='success'">
                        and ri.tradeState is not null
                    </when>
                    <when test="rec.tradeType=='fail'">
                        and ri.tradeState is null
                    </when>
                </choose>
            </if>
            <if test="rec.callNodeName!=null and rec.callNodeName!=''">
                and exists(select 1 from T_IOM_CALLCONTENT_TMP t where t.uuid = ri.uuid and t.type not in
                ('matchError','match_Start','match_End')
                and t.nodeName in
                <foreach collection="rec.callNodeNameList" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                and t.uuid in (select uuid
                from T_IOM_RECORDINFO_TMP
                where 1 = 1
                <if test="rec.projectId!=null and rec.projectId!=''">
                    and projectId = #{rec.projectId}
                </if>
                <if test="rec.taskId!=null and rec.taskId!=''">
                    and taskId = #{rec.taskId}
                </if>
                <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                    and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                    and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                </if>
                <if test="rec.callNumber!=null and rec.callNumber!=''">
                    and callNumber = #{rec.callNumber}
                </if>
                <if test="rec.onState!=null and rec.onState!=''">
                    and onState = #{rec.onState}
                </if>
                <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                    and blackListFlag = #{rec.blackListFlag}
                </if>
                <if test="rec.callCount >= 1">
                    <choose>
                        <when test="rec.callCount == 1">
                            and callCount = 1
                        </when>
                        <otherwise>
                            and callCount <![CDATA[>]]> 1
                        </otherwise>
                    </choose>
                </if>
                <if test="rec.durationStart >= 0">
                    and duration <![CDATA[>=]]> #{rec.durationStart}
                </if>
                <if test="rec.durationEnd >= 0">
                    and duration <![CDATA[<=]]> #{rec.durationEnd}
                </if>
                <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                    and endNodeName in
                    <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.ruleId!=null and rec.ruleId!=''">
                    and ruleId = #{rec.ruleId}
                </if>
                <if test="rec.callResult!=null and rec.callResult!=''">
                    and finalNodeName in
                    <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeState!=null and rec.tradeState!=''">
                    and tradeState in
                    <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="rec.tradeType!=null and rec.tradeType!=''">
                    <choose>
                        <when test="rec.tradeType=='success'">
                            and tradeState is not null
                        </when>
                        <when test="rec.tradeType=='fail'">
                            and tradeState is null
                        </when>
                    </choose>
                </if>
                )
                )
            </if>
            <if test="rec.dynamicQuery!=null and rec.dynamicQuery!=''">
                <foreach collection="rec.dynamicQueryMap" index="index" item="item">
                    <if test="item!=null and item!=''">
                        and exists(select 1 from T_IOM_CUSTOMERINFO_TMP tci where tci.name = #{index}
                        and to_char(tci.value) = #{item} and tci.uuid = ri.uuid
                        and tci.uuid in (select uuid
                        from T_IOM_RECORDINFO_TMP
                        where 1 = 1
                        <if test="rec.projectId!=null and rec.projectId!=''">
                            and projectId = #{rec.projectId}
                        </if>
                        <if test="rec.taskId!=null and rec.taskId!=''">
                            and taskId = #{rec.taskId}
                        </if>
                        <if test="rec.recordStartTime!=null and rec.recordStartTime!=''">
                            and recordStartTime <![CDATA[>=]]> to_date(#{rec.recordStartTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.recordEndTime!=null and rec.recordEndTime!=''">
                            and recordEndTime <![CDATA[<=]]> to_date(#{rec.recordEndTime},'yyyy-mm-dd hh24:mi:ss')
                        </if>
                        <if test="rec.callNumber!=null and rec.callNumber!=''">
                            and callNumber = #{rec.callNumber}
                        </if>
                        <if test="rec.onState!=null and rec.onState!=''">
                            and onState = #{rec.onState}
                        </if>
                        <if test="rec.blackListFlag!=null and rec.blackListFlag!=''">
                            and blackListFlag = #{rec.blackListFlag}
                        </if>
                        <if test="rec.callCount >= 1">
                            <choose>
                                <when test="rec.callCount == 1">
                                    and callCount = 1
                                </when>
                                <otherwise>
                                    and callCount <![CDATA[>]]> 1
                                </otherwise>
                            </choose>
                        </if>
                        <if test="rec.durationStart >= 0">
                            and duration <![CDATA[>=]]> #{rec.durationStart}
                        </if>
                        <if test="rec.durationEnd >= 0">
                            and duration <![CDATA[<=]]> #{rec.durationEnd}
                        </if>
                        <if test="rec.endNodeName!=null and rec.endNodeName!=''">
                            and endNodeName in
                            <foreach collection="rec.endNodeNameList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.ruleId!=null and rec.ruleId!=''">
                            and ruleId = #{rec.ruleId}
                        </if>
                        <if test="rec.callResult!=null and rec.callResult!=''">
                            and finalNodeName in
                            <foreach collection="rec.callResultList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeState!=null and rec.tradeState!=''">
                            and tradeState in
                            <foreach collection="rec.tradeStateList" item="item" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
                        <if test="rec.tradeType!=null and rec.tradeType!=''">
                            <choose>
                                <when test="rec.tradeType=='success'">
                                    and tradeState is not null
                                </when>
                                <when test="rec.tradeType=='fail'">
                                    and tradeState is null
                                </when>
                            </choose>
                        </if>
                        )
                        )
                    </if>
                </foreach>
            </if>
        </if>
        )
    </select>
</mapper>