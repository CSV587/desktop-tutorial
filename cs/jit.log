<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='23380' time_ms='1569751895233'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.211-b12
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.211-b12) for windows-amd64 JRE (1.8.0_211-b12), built on Apr  1 2019 20:53:26 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:D:\JetBrains\IntelliJ IDEA 2018.2.5\lib\idea_rt.jar=65243:D:\JetBrains\IntelliJ IDEA 2018.2.5\bin -Dfile.encoding=UTF-8 
</args>
<command>
cs.JitTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.211-b12
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Java\jre1.8.0_211\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Java\jre1.8.0_211\lib\endorsed
sun.boot.library.path=D:\Java\jre1.8.0_211\bin
java.library.path=D:\Java\jre1.8.0_211\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Python37\Scripts\;D:\Python37\;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Git\cmd;&quot;D:\Java\jdk1.8.0_211\bin;D:\Java\jdk1.8.0_211\jre\bin&quot;;D:\instantclient_19_3;D:\JetBrains\IntelliJ IDEA 2018.2.5\jre64;C:\Users\cs\AppData\Local\Microsoft\WindowsApps;;D:\JetBrains\PyCharm 2019.1.3\bin;;D:\JetBrains\WebStorm 2019.1.3\bin;;.
java.home=D:\Java\jre1.8.0_211
java.class.path=D:\Java\jre1.8.0_211\lib\charsets.jar;D:\Java\jre1.8.0_211\lib\deploy.jar;D:\Java\jre1.8.0_211\lib\ext\access-bridge-64.jar;D:\Java\jre1.8.0_211\lib\ext\cldrdata.jar;D:\Java\jre1.8.0_211\lib\ext\dnsns.jar;D:\Java\jre1.8.0_211\lib\ext\jaccess.jar;D:\Java\jre1.8.0_211\lib\ext\jfxrt.jar;D:\Java\jre1.8.0_211\lib\ext\localedata.jar;D:\Java\jre1.8.0_211\lib\ext\nashorn.jar;D:\Java\jre1.8.0_211\lib\ext\sunec.jar;D:\Java\jre1.8.0_211\lib\ext\sunjce_provider.jar;D:\Java\jre1.8.0_211\lib\ext\sunmscapi.jar;D:\Java\jre1.8.0_211\lib\ext\sunpkcs11.jar;D:\Java\jre1.8.0_211\lib\ext\zipfs.jar;D:\Java\jre1.8.0_211\lib\javaws.jar;D:\Java\jre1.8.0_211\lib\jce.jar;D:\Java\jre1.8.0_211\lib\jfr.jar;D:\Java\jre1.8.0_211\lib\jfxswt.jar;D:\Java\jre1.8.0_211\lib\jsse.jar;D:\Java\jre1.8.0_211\lib\management-agent.jar;D:\Java\jre1.8.0_211\lib\plugin.jar;D:\Java\jre1.8.0_211\lib\resources.jar;D:\Java\jre1.8.0_211\lib\rt.jar;E:\Projects\cs\target\classes;C:\Users\cs\.m2\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;C:\Users\cs\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.0.4.RELEASE\spring-boot-starter-web-2.0.4.RELEASE.jar;C:\Users\cs\.m2\repository\org\springframework\boot\spring-boot-starter\2.0.4.RELEASE\spring-boot-starter-2.0.4.RELEASE.jar;C:\Users\cs\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.0.4.RELEASE\spring-boot-starter-logging-2.0.4.RELEASE.jar;C:\Users\cs\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\cs\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\cs\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;C:\Users\cs\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\cs\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\cs\.m2\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;C:\Users\cs\.m2\repository\org\sprin
sun.boot.class.path=D:\Java\jre1.8.0_211\lib\resources.jar;D:\Java\jre1.8.0_211\lib\rt.jar;D:\Java\jre1.8.0_211\lib\sunrsasign.jar;D:\Java\jre1.8.0_211\lib\jsse.jar;D:\Java\jre1.8.0_211\lib\jce.jar;D:\Java\jre1.8.0_211\lib\charsets.jar;D:\Java\jre1.8.0_211\lib\jfr.jar;D:\Java\jre1.8.0_211\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=cs.JitTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='18132'/>
<thread_logfile thread='18132' filename='C:\Users\cs\AppData\Local\Temp\\hs_c18132_pid23380.log'/>
<writer thread='26752'/>
<thread_logfile thread='26752' filename='C:\Users\cs\AppData\Local\Temp\\hs_c26752_pid23380.log'/>
<writer thread='53160'/>
<thread_logfile thread='53160' filename='C:\Users\cs\AppData\Local\Temp\\hs_c53160_pid23380.log'/>
<writer thread='49028'/>
<task_queued compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='5376' iicount='5376' level='3' stamp='0.384' comment='tiered' hot_count='5376'/>
<task_queued compile_id='2' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1792' iicount='1792' level='3' stamp='0.385' comment='tiered' hot_count='1792'/>
<writer thread='53160'/>
Loaded disassembler from D:\Java\jre1.8.0_211\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002b03050:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b031a0: mov    %eax,-0x6000(%rsp)
  0x0000000002b031a7: push   %rbp
  0x0000000002b031a8: sub    $0x30,%rsp
  0x0000000002b031ac: movabs $0x1b770f78,%rax   ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b031b6: mov    0xdc(%rax),%esi
  0x0000000002b031bc: add    $0x8,%esi
  0x0000000002b031bf: mov    %esi,0xdc(%rax)
  0x0000000002b031c5: movabs $0x1b67d668,%rax   ;   {metadata({method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b031cf: and    $0x1ff8,%esi
  0x0000000002b031d5: cmp    $0x0,%esi
  0x0000000002b031d8: je     0x0000000002b0323e  ;*iload_0
                                                ; - java.lang.Math::min@0

  0x0000000002b031de: cmp    %r8d,%edx
  0x0000000002b031e1: movabs $0x1b770f78,%rax   ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b031eb: movabs $0x108,%rsi
  0x0000000002b031f5: jg     0x0000000002b03205
  0x0000000002b031fb: movabs $0x118,%rsi
  0x0000000002b03205: mov    (%rax,%rsi,1),%rdi
  0x0000000002b03209: lea    0x1(%rdi),%rdi
  0x0000000002b0320d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b03211: jg     0x0000000002b0322c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2

  0x0000000002b03217: movabs $0x1b770f78,%rax   ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b03221: incl   0x128(%rax)
  0x0000000002b03227: jmpq   0x0000000002b0322f  ;*goto
                                                ; - java.lang.Math::min@6

  0x0000000002b0322c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10

  0x0000000002b0322f: mov    %rdx,%rax
  0x0000000002b03232: add    $0x30,%rsp
  0x0000000002b03236: pop    %rbp
  0x0000000002b03237: test   %eax,-0x1f1313d(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0323d: retq   
  0x0000000002b0323e: mov    %rax,0x8(%rsp)
  0x0000000002b03243: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b0324b: callq  0x0000000002b01ae0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ;   {runtime_call}
  0x0000000002b03250: jmp    0x0000000002b031de
  0x0000000002b03252: nop
  0x0000000002b03253: nop
  0x0000000002b03254: mov    0x2a8(%r15),%rax
  0x0000000002b0325b: movabs $0x0,%r10
  0x0000000002b03265: mov    %r10,0x2a8(%r15)
  0x0000000002b0326c: movabs $0x0,%r10
  0x0000000002b03276: mov    %r10,0x2b0(%r15)
  0x0000000002b0327d: add    $0x30,%rsp
  0x0000000002b03281: pop    %rbp
  0x0000000002b03282: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b03287: hlt    
  0x0000000002b03288: hlt    
  0x0000000002b03289: hlt    
  0x0000000002b0328a: hlt    
  0x0000000002b0328b: hlt    
  0x0000000002b0328c: hlt    
  0x0000000002b0328d: hlt    
  0x0000000002b0328e: hlt    
  0x0000000002b0328f: hlt    
  0x0000000002b03290: hlt    
  0x0000000002b03291: hlt    
  0x0000000002b03292: hlt    
  0x0000000002b03293: hlt    
  0x0000000002b03294: hlt    
  0x0000000002b03295: hlt    
  0x0000000002b03296: hlt    
  0x0000000002b03297: hlt    
  0x0000000002b03298: hlt    
  0x0000000002b03299: hlt    
  0x0000000002b0329a: hlt    
  0x0000000002b0329b: hlt    
  0x0000000002b0329c: hlt    
  0x0000000002b0329d: hlt    
  0x0000000002b0329e: hlt    
  0x0000000002b0329f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b032a0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b032a5: mov    %rsp,-0x28(%rsp)
  0x0000000002b032aa: sub    $0x80,%rsp
  0x0000000002b032b1: mov    %rax,0x78(%rsp)
  0x0000000002b032b6: mov    %rcx,0x70(%rsp)
  0x0000000002b032bb: mov    %rdx,0x68(%rsp)
  0x0000000002b032c0: mov    %rbx,0x60(%rsp)
  0x0000000002b032c5: mov    %rbp,0x50(%rsp)
  0x0000000002b032ca: mov    %rsi,0x48(%rsp)
  0x0000000002b032cf: mov    %rdi,0x40(%rsp)
  0x0000000002b032d4: mov    %r8,0x38(%rsp)
  0x0000000002b032d9: mov    %r9,0x30(%rsp)
  0x0000000002b032de: mov    %r10,0x28(%rsp)
  0x0000000002b032e3: mov    %r11,0x20(%rsp)
  0x0000000002b032e8: mov    %r12,0x18(%rsp)
  0x0000000002b032ed: mov    %r13,0x10(%rsp)
  0x0000000002b032f2: mov    %r14,0x8(%rsp)
  0x0000000002b032f7: mov    %r15,(%rsp)
  0x0000000002b032fb: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b03305: movabs $0x2b032a5,%rdx    ;   {internal_word}
  0x0000000002b0330f: mov    %rsp,%r8
  0x0000000002b03312: and    $0xfffffffffffffff0,%rsp
  0x0000000002b03316: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b0331b: hlt    
[Deopt Handler Code]
  0x0000000002b0331c: movabs $0x2b0331c,%r10    ;   {section_word}
  0x0000000002b03326: push   %r10
  0x0000000002b03328: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0332d: hlt    
  0x0000000002b0332e: hlt    
  0x0000000002b0332f: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x0000000002b031a0' size='904' address='0x0000000002b03050' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' method='java/lang/Math min (II)I' bytes='11' count='5381' iicount='5381' stamp='0.392'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='53496'/>
<task_queued compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2176' backedge_count='3350' iicount='2176' level='3' stamp='0.393' comment='tiered' hot_count='2176'/>
<task_queued compile_id='4' method='java/lang/String charAt (I)C' bytes='29' count='158720' iicount='158720' stamp='0.393' comment='tiered' hot_count='158720'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b03c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002b03e20: mov    0x8(%rdx),%r10d
  0x0000000002b03e24: shl    $0x3,%r10
  0x0000000002b03e28: cmp    %rax,%r10
  0x0000000002b03e2b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b03e31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b03e3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b03e40: mov    %eax,-0x6000(%rsp)
  0x0000000002b03e47: push   %rbp
  0x0000000002b03e48: sub    $0xe0,%rsp
  0x0000000002b03e4f: mov    %rdx,0xb8(%rsp)
  0x0000000002b03e57: movabs $0x1b784c68,%rsi   ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03e61: mov    0xdc(%rsi),%edi
  0x0000000002b03e67: add    $0x8,%edi
  0x0000000002b03e6a: mov    %edi,0xdc(%rsi)
  0x0000000002b03e70: movabs $0x1b601058,%rsi   ;   {metadata({method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03e7a: and    $0x1ff8,%edi
  0x0000000002b03e80: cmp    $0x0,%edi
  0x0000000002b03e83: je     0x0000000002b043c3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0

  0x0000000002b03e89: cmp    $0x0,%r8
  0x0000000002b03e8d: movabs $0x1b784c68,%rsi   ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03e97: movabs $0x108,%rdi
  0x0000000002b03ea1: jne    0x0000000002b03eb1
  0x0000000002b03ea7: movabs $0x118,%rdi
  0x0000000002b03eb1: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b03eb5: lea    0x1(%rbx),%rbx
  0x0000000002b03eb9: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b03ebd: je     0x0000000002b04393  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1

  0x0000000002b03ec3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ; implicit exception: dispatches to 0x0000000002b043da
  0x0000000002b03ec6: mov    %r8,%rsi
  0x0000000002b03ec9: movabs $0x1b784c68,%rdi   ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03ed3: mov    0x8(%rsi),%esi
  0x0000000002b03ed6: shl    $0x3,%rsi
  0x0000000002b03eda: cmp    0x140(%rdi),%rsi
  0x0000000002b03ee1: jne    0x0000000002b03ef0
  0x0000000002b03ee3: addq   $0x1,0x148(%rdi)
  0x0000000002b03eeb: jmpq   0x0000000002b03f56
  0x0000000002b03ef0: cmp    0x150(%rdi),%rsi
  0x0000000002b03ef7: jne    0x0000000002b03f06
  0x0000000002b03ef9: addq   $0x1,0x158(%rdi)
  0x0000000002b03f01: jmpq   0x0000000002b03f56
  0x0000000002b03f06: cmpq   $0x0,0x140(%rdi)
  0x0000000002b03f11: jne    0x0000000002b03f2a
  0x0000000002b03f13: mov    %rsi,0x140(%rdi)
  0x0000000002b03f1a: movq   $0x1,0x148(%rdi)
  0x0000000002b03f25: jmpq   0x0000000002b03f56
  0x0000000002b03f2a: cmpq   $0x0,0x150(%rdi)
  0x0000000002b03f35: jne    0x0000000002b03f4e
  0x0000000002b03f37: mov    %rsi,0x150(%rdi)
  0x0000000002b03f3e: movq   $0x1,0x158(%rdi)
  0x0000000002b03f49: jmpq   0x0000000002b03f56
  0x0000000002b03f4e: addq   $0x1,0x138(%rdi)
  0x0000000002b03f56: movabs $0x1b6b9d58,%rsi   ;   {metadata(method data for {method} {0x000000001b593ab8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b03f60: mov    0xdc(%rsi),%edi
  0x0000000002b03f66: add    $0x8,%edi
  0x0000000002b03f69: mov    %edi,0xdc(%rsi)
  0x0000000002b03f6f: movabs $0x1b593ab0,%rsi   ;   {metadata({method} {0x000000001b593ab8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b03f79: and    $0x7ffff8,%edi
  0x0000000002b03f7f: cmp    $0x0,%edi
  0x0000000002b03f82: je     0x0000000002b043df
  0x0000000002b03f88: mov    0xc(%r8),%esi
  0x0000000002b03f8c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1
                                                ; - java.lang.AbstractStringBuilder::append@10

  0x0000000002b03f90: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ; implicit exception: dispatches to 0x0000000002b043f6
  0x0000000002b03f93: mov    %esi,0xac(%rsp)
  0x0000000002b03f9a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16

  0x0000000002b03f9d: add    %esi,%edi
  0x0000000002b03f9f: mov    %rdx,%rbx
  0x0000000002b03fa2: movabs $0x1b784c68,%rax   ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03fac: addq   $0x1,0x168(%rax)
  0x0000000002b03fb4: movabs $0x1b784050,%rbx   ;   {metadata(method data for {method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03fbe: mov    0xdc(%rbx),%eax
  0x0000000002b03fc4: add    $0x8,%eax
  0x0000000002b03fc7: mov    %eax,0xdc(%rbx)
  0x0000000002b03fcd: movabs $0x1b600770,%rbx   ;   {metadata({method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b03fd7: and    $0x7ffff8,%eax
  0x0000000002b03fdd: cmp    $0x0,%eax
  0x0000000002b03fe0: je     0x0000000002b043fb
  0x0000000002b03fe6: mov    0x10(%rdx),%ebx
  0x0000000002b03fe9: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b03fed: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ; implicit exception: dispatches to 0x0000000002b04412
  0x0000000002b03ff0: mov    %rdi,%rcx
  0x0000000002b03ff3: sub    %eax,%ecx
  0x0000000002b03ff5: cmp    $0x0,%ecx
  0x0000000002b03ff8: movabs $0x1b784050,%rcx   ;   {metadata(method data for {method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b04002: movabs $0x108,%r9
  0x0000000002b0400c: jle    0x0000000002b0401c
  0x0000000002b04012: movabs $0x118,%r9
  0x0000000002b0401c: mov    (%rcx,%r9,1),%r11
  0x0000000002b04020: lea    0x1(%r11),%r11
  0x0000000002b04024: mov    %r11,(%rcx,%r9,1)
  0x0000000002b04028: jg     0x0000000002b0403b  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b0402e: mov    %r8,0xc0(%rsp)
  0x0000000002b04036: jmpq   0x0000000002b042ad  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b0403b: mov    %eax,0xa8(%rsp)
  0x0000000002b04042: mov    %rbx,0xb0(%rsp)
  0x0000000002b0404a: mov    %r8,0xc0(%rsp)
  0x0000000002b04052: mov    %rdx,%rcx
  0x0000000002b04055: movabs $0x1b784050,%r9    ;   {metadata(method data for {method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b0405f: addq   $0x1,0x128(%r9)
  0x0000000002b04067: mov    %rdi,%r8
  0x0000000002b0406a: mov    %rdx,%rdi
  0x0000000002b0406d: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b04070: nop
  0x0000000002b04071: nop
  0x0000000002b04072: nop
  0x0000000002b04073: nop
  0x0000000002b04074: nop
  0x0000000002b04075: nop
  0x0000000002b04076: nop
  0x0000000002b04077: callq  0x0000000002a461a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {optimized virtual_call}
  0x0000000002b0407c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b0407f: movabs $0x1b784050,%rbx   ;   {metadata(method data for {method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b04089: addq   $0x1,0x138(%rbx)
  0x0000000002b04091: movabs $0x1b7b7458,%rbx   ;   {metadata(method data for {method} {0x000000001b6a0a10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b0409b: mov    0xdc(%rbx),%edx
  0x0000000002b040a1: add    $0x8,%edx
  0x0000000002b040a4: mov    %edx,0xdc(%rbx)
  0x0000000002b040aa: movabs $0x1b6a0a08,%rbx   ;   {metadata({method} {0x000000001b6a0a10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b040b4: and    $0x7ffff8,%edx
  0x0000000002b040ba: cmp    $0x0,%edx
  0x0000000002b040bd: je     0x0000000002b04417
  0x0000000002b040c3: mov    %r8,%rbx
  0x0000000002b040c6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b040d0: movslq %ebx,%rbx
  0x0000000002b040d3: mov    %rbx,%rdi
  0x0000000002b040d6: cmp    $0xffffff,%rbx
  0x0000000002b040dd: ja     0x0000000002b0442e
  0x0000000002b040e3: movabs $0x17,%rsi
  0x0000000002b040ed: lea    (%rsi,%rbx,2),%rsi
  0x0000000002b040f1: and    $0xfffffffffffffff8,%rsi
  0x0000000002b040f5: mov    0x60(%r15),%rax
  0x0000000002b040f9: lea    (%rax,%rsi,1),%rsi
  0x0000000002b040fd: cmp    0x70(%r15),%rsi
  0x0000000002b04101: ja     0x0000000002b0442e
  0x0000000002b04107: mov    %rsi,0x60(%r15)
  0x0000000002b0410b: sub    %rax,%rsi
  0x0000000002b0410e: movq   $0x1,(%rax)
  0x0000000002b04115: mov    %rdx,%rcx
  0x0000000002b04118: shr    $0x3,%rcx
  0x0000000002b0411c: mov    %ecx,0x8(%rax)
  0x0000000002b0411f: mov    %ebx,0xc(%rax)
  0x0000000002b04122: sub    $0x10,%rsi
  0x0000000002b04126: je     0x0000000002b0413d
  0x0000000002b0412c: xor    %rbx,%rbx
  0x0000000002b0412f: shr    $0x3,%rsi
  0x0000000002b04133: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002b04138: dec    %rsi
  0x0000000002b0413b: jne    0x0000000002b04133  ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b0413d: movabs $0x1b7b7458,%rdx   ;   {metadata(method data for {method} {0x000000001b6a0a10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b04147: addq   $0x1,0x108(%rdx)
  0x0000000002b0414f: movabs $0x1b770f78,%rdx   ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b04159: mov    0xdc(%rdx),%r9d
  0x0000000002b04160: add    $0x8,%r9d
  0x0000000002b04164: mov    %r9d,0xdc(%rdx)
  0x0000000002b0416b: movabs $0x1b67d668,%rdx   ;   {metadata({method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b04175: and    $0x7ffff8,%r9d
  0x0000000002b0417c: cmp    $0x0,%r9d
  0x0000000002b04180: je     0x0000000002b04438
  0x0000000002b04186: mov    0xa8(%rsp),%edx
  0x0000000002b0418d: cmp    %r8d,%edx
  0x0000000002b04190: movabs $0x1b770f78,%r9    ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b0419a: movabs $0x108,%rdi
  0x0000000002b041a4: jg     0x0000000002b041b4
  0x0000000002b041aa: movabs $0x118,%rdi
  0x0000000002b041b4: mov    (%r9,%rdi,1),%rsi
  0x0000000002b041b8: lea    0x1(%rsi),%rsi
  0x0000000002b041bc: mov    %rsi,(%r9,%rdi,1)
  0x0000000002b041c0: jg     0x0000000002b041df  ;*if_icmpgt
                                                ; - java.lang.Math::min@2
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b041c6: movabs $0x1b770f78,%r8    ;   {metadata(method data for {method} {0x000000001b67d670} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002b041d0: incl   0x128(%r8)
  0x0000000002b041d7: mov    %rdx,%rsi
  0x0000000002b041da: jmpq   0x0000000002b041e2  ;*goto
                                                ; - java.lang.Math::min@6
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b041df: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b041e2: mov    0xb0(%rsp),%rbx
  0x0000000002b041ea: movabs $0x1b7b7458,%rdx   ;   {metadata(method data for {method} {0x000000001b6a0a10} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002b041f4: addq   $0x1,0x118(%rdx)
  0x0000000002b041fc: mov    %rbx,%rdx
  0x0000000002b041ff: mov    $0x0,%r8d
  0x0000000002b04205: mov    %rax,%r9
  0x0000000002b04208: mov    $0x0,%edi
  0x0000000002b0420d: mov    %rax,0xc8(%rsp)
  0x0000000002b04215: lea    (%r8,%rsi,1),%rcx
  0x0000000002b04219: cmp    0xc(%rdx),%ecx
  0x0000000002b0421c: ja     0x0000000002b0444f
  0x0000000002b04222: lea    (%rdi,%rsi,1),%rcx
  0x0000000002b04226: cmp    0xc(%r9),%ecx
  0x0000000002b0422a: ja     0x0000000002b0444f
  0x0000000002b04230: test   %esi,%esi
  0x0000000002b04232: jl     0x0000000002b0444f
  0x0000000002b04238: je     0x0000000002b0427c
  0x0000000002b0423e: movslq %r8d,%r8
  0x0000000002b04241: movslq %edi,%rdi
  0x0000000002b04244: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002b04249: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002b0424e: mov    %rsi,%r8
  0x0000000002b04251: sub    $0x20,%rsp
  0x0000000002b04255: test   $0xf,%esp
  0x0000000002b0425b: je     0x0000000002b04273
  0x0000000002b04261: sub    $0x8,%rsp
  0x0000000002b04265: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002b0426a: add    $0x8,%rsp
  0x0000000002b0426e: jmpq   0x0000000002b04278
  0x0000000002b04273: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002b04278: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b0427c: mov    0xc8(%rsp),%rax
  0x0000000002b04284: mov    0xb8(%rsp),%rdx
  0x0000000002b0428c: mov    %rax,%r10
  0x0000000002b0428f: shr    $0x3,%r10
  0x0000000002b04293: mov    %r10d,0x10(%rdx)
  0x0000000002b04297: mov    %rdx,%r8
  0x0000000002b0429a: shr    $0x9,%r8
  0x0000000002b0429e: movabs $0xe7a5000,%r9
  0x0000000002b042a8: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b042ad: mov    0xac(%rsp),%esi
  0x0000000002b042b4: mov    0xc0(%rsp),%rbx
  0x0000000002b042bc: mov    0x10(%rdx),%edi
  0x0000000002b042bf: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28

  0x0000000002b042c3: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32

  0x0000000002b042c6: mov    %rbx,%r8
  0x0000000002b042c9: movabs $0x1b784c68,%r9    ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b042d3: mov    0x8(%r8),%r8d
  0x0000000002b042d7: shl    $0x3,%r8
  0x0000000002b042db: cmp    0x180(%r9),%r8
  0x0000000002b042e2: jne    0x0000000002b042f1
  0x0000000002b042e4: addq   $0x1,0x188(%r9)
  0x0000000002b042ec: jmpq   0x0000000002b04357
  0x0000000002b042f1: cmp    0x190(%r9),%r8
  0x0000000002b042f8: jne    0x0000000002b04307
  0x0000000002b042fa: addq   $0x1,0x198(%r9)
  0x0000000002b04302: jmpq   0x0000000002b04357
  0x0000000002b04307: cmpq   $0x0,0x180(%r9)
  0x0000000002b04312: jne    0x0000000002b0432b
  0x0000000002b04314: mov    %r8,0x180(%r9)
  0x0000000002b0431b: movq   $0x1,0x188(%r9)
  0x0000000002b04326: jmpq   0x0000000002b04357
  0x0000000002b0432b: cmpq   $0x0,0x190(%r9)
  0x0000000002b04336: jne    0x0000000002b0434f
  0x0000000002b04338: mov    %r8,0x190(%r9)
  0x0000000002b0433f: movq   $0x1,0x198(%r9)
  0x0000000002b0434a: jmpq   0x0000000002b04357
  0x0000000002b0434f: addq   $0x1,0x178(%r9)
  0x0000000002b04357: mov    $0x0,%r8d
  0x0000000002b0435d: mov    %rsi,%r9
  0x0000000002b04360: mov    %rax,%rsi
  0x0000000002b04363: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35

  0x0000000002b04366: nop
  0x0000000002b04367: callq  0x0000000002a461a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35
                                                ;   {optimized virtual_call}
  0x0000000002b0436c: mov    0xb8(%rsp),%rdx
  0x0000000002b04374: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40

  0x0000000002b04377: add    0xac(%rsp),%eax
  0x0000000002b0437e: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45

  0x0000000002b04381: mov    %rdx,%rax
  0x0000000002b04384: add    $0xe0,%rsp
  0x0000000002b0438b: pop    %rbp
  0x0000000002b0438c: test   %eax,-0x1f14292(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b04392: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49

  0x0000000002b04393: mov    %rdx,%rsi
  0x0000000002b04396: movabs $0x1b784c68,%rdi   ;   {metadata(method data for {method} {0x000000001b601060} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002b043a0: addq   $0x1,0x128(%rdi)
  0x0000000002b043a8: nop
  0x0000000002b043a9: nop
  0x0000000002b043aa: nop
  0x0000000002b043ab: nop
  0x0000000002b043ac: nop
  0x0000000002b043ad: nop
  0x0000000002b043ae: nop
  0x0000000002b043af: callq  0x0000000002a461a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5
                                                ;   {optimized virtual_call}
  0x0000000002b043b4: add    $0xe0,%rsp
  0x0000000002b043bb: pop    %rbp
  0x0000000002b043bc: test   %eax,-0x1f142c2(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b043c2: retq   
  0x0000000002b043c3: mov    %rsi,0x8(%rsp)
  0x0000000002b043c8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b043d0: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1
                                                ;   {runtime_call}
  0x0000000002b043d5: jmpq   0x0000000002b03e89
  0x0000000002b043da: callq  0x0000000002afc580  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x0000000002b043df: mov    %rsi,0x8(%rsp)
  0x0000000002b043e4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b043ec: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x0000000002b043f1: jmpq   0x0000000002b03f88
  0x0000000002b043f6: callq  0x0000000002afc580  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x0000000002b043fb: mov    %rbx,0x8(%rsp)
  0x0000000002b04400: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b04408: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x0000000002b0440d: jmpq   0x0000000002b03fe6
  0x0000000002b04412: callq  0x0000000002afc580  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x0000000002b04417: mov    %rbx,0x8(%rsp)
  0x0000000002b0441c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b04424: callq  0x0000000002b01ae0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x0000000002b04429: jmpq   0x0000000002b040c3
  0x0000000002b0442e: callq  0x0000000002afd640  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x0000000002b04433: jmpq   0x0000000002b0413d
  0x0000000002b04438: mov    %rdx,0x8(%rsp)
  0x0000000002b0443d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b04445: callq  0x0000000002b01ae0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x0000000002b0444a: jmpq   0x0000000002b04186
  0x0000000002b0444f: callq  0x0000000002a46620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {static_call}
  0x0000000002b04454: jmpq   0x0000000002b0427c
  0x0000000002b04459: nop
  0x0000000002b0445a: nop
  0x0000000002b0445b: mov    0x2a8(%r15),%rax
  0x0000000002b04462: movabs $0x0,%r10
  0x0000000002b0446c: mov    %r10,0x2a8(%r15)
  0x0000000002b04473: movabs $0x0,%r10
  0x0000000002b0447d: mov    %r10,0x2b0(%r15)
  0x0000000002b04484: add    $0xe0,%rsp
  0x0000000002b0448b: pop    %rbp
  0x0000000002b0448c: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b04491: hlt    
  0x0000000002b04492: hlt    
  0x0000000002b04493: hlt    
  0x0000000002b04494: hlt    
  0x0000000002b04495: hlt    
  0x0000000002b04496: hlt    
  0x0000000002b04497: hlt    
  0x0000000002b04498: hlt    
  0x0000000002b04499: hlt    
  0x0000000002b0449a: hlt    
  0x0000000002b0449b: hlt    
  0x0000000002b0449c: hlt    
  0x0000000002b0449d: hlt    
  0x0000000002b0449e: hlt    
  0x0000000002b0449f: hlt    
[Stub Code]
  0x0000000002b044a0: nop                       ;   {no_reloc}
  0x0000000002b044a1: nop
  0x0000000002b044a2: nop
  0x0000000002b044a3: nop
  0x0000000002b044a4: nop
  0x0000000002b044a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b044af: jmpq   0x0000000002b044af  ;   {runtime_call}
  0x0000000002b044b4: nop
  0x0000000002b044b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b044bf: jmpq   0x0000000002b044bf  ;   {runtime_call}
  0x0000000002b044c4: nop
  0x0000000002b044c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b044cf: jmpq   0x0000000002b044cf  ;   {runtime_call}
  0x0000000002b044d4: nop
  0x0000000002b044d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b044df: jmpq   0x0000000002b044df  ;   {runtime_call}
[Exception Handler]
  0x0000000002b044e4: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b044e9: mov    %rsp,-0x28(%rsp)
  0x0000000002b044ee: sub    $0x80,%rsp
  0x0000000002b044f5: mov    %rax,0x78(%rsp)
  0x0000000002b044fa: mov    %rcx,0x70(%rsp)
  0x0000000002b044ff: mov    %rdx,0x68(%rsp)
  0x0000000002b04504: mov    %rbx,0x60(%rsp)
  0x0000000002b04509: mov    %rbp,0x50(%rsp)
  0x0000000002b0450e: mov    %rsi,0x48(%rsp)
  0x0000000002b04513: mov    %rdi,0x40(%rsp)
  0x0000000002b04518: mov    %r8,0x38(%rsp)
  0x0000000002b0451d: mov    %r9,0x30(%rsp)
  0x0000000002b04522: mov    %r10,0x28(%rsp)
  0x0000000002b04527: mov    %r11,0x20(%rsp)
  0x0000000002b0452c: mov    %r12,0x18(%rsp)
  0x0000000002b04531: mov    %r13,0x10(%rsp)
  0x0000000002b04536: mov    %r14,0x8(%rsp)
  0x0000000002b0453b: mov    %r15,(%rsp)
  0x0000000002b0453f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b04549: movabs $0x2b044e9,%rdx    ;   {internal_word}
  0x0000000002b04553: mov    %rsp,%r8
  0x0000000002b04556: and    $0xfffffffffffffff0,%rsp
  0x0000000002b0455a: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b0455f: hlt    
[Deopt Handler Code]
  0x0000000002b04560: movabs $0x2b04560,%r10    ;   {section_word}
  0x0000000002b0456a: push   %r10
  0x0000000002b0456c: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b04571: hlt    
  0x0000000002b04572: hlt    
  0x0000000002b04573: hlt    
  0x0000000002b04574: hlt    
  0x0000000002b04575: hlt    
  0x0000000002b04576: hlt    
  0x0000000002b04577: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x0000000002b03e20' size='3456' address='0x0000000002b03c50' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1809' iicount='1809' stamp='0.409'/>
Decoding compiled method 0x0000000002b05c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b05e20: mov    0x8(%rdx),%r10d
  0x0000000002b05e24: shl    $0x3,%r10
  0x0000000002b05e28: cmp    %rax,%r10
  0x0000000002b05e2b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b05e31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b05e3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b05e40: mov    %eax,-0x6000(%rsp)
  0x0000000002b05e47: push   %rbp
  0x0000000002b05e48: sub    $0x30,%rsp
  0x0000000002b05e4c: movabs $0x1b7a6d00,%rax   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05e56: mov    0xdc(%rax),%esi
  0x0000000002b05e5c: add    $0x8,%esi
  0x0000000002b05e5f: mov    %esi,0xdc(%rax)
  0x0000000002b05e65: movabs $0x1b5943e0,%rax   ;   {metadata({method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05e6f: and    $0x1ff8,%esi
  0x0000000002b05e75: cmp    $0x0,%esi
  0x0000000002b05e78: je     0x0000000002b0624e  ;*aload_0
                                                ; - java.lang.String::equals@0

  0x0000000002b05e7e: cmp    %r8,%rdx
  0x0000000002b05e81: movabs $0x1b7a6d00,%rax   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05e8b: movabs $0x108,%rsi
  0x0000000002b05e95: jne    0x0000000002b05ea5
  0x0000000002b05e9b: movabs $0x118,%rsi
  0x0000000002b05ea5: mov    (%rax,%rsi,1),%rdi
  0x0000000002b05ea9: lea    0x1(%rdi),%rdi
  0x0000000002b05ead: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b05eb1: je     0x0000000002b0623d  ;*if_acmpne
                                                ; - java.lang.String::equals@2

  0x0000000002b05eb7: cmp    $0x0,%r8
  0x0000000002b05ebb: jne    0x0000000002b05ed6
  0x0000000002b05ebd: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05ec7: orl    $0x100,0x120(%rdi)
  0x0000000002b05ed1: jmpq   0x0000000002b05f98
  0x0000000002b05ed6: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002b05ee0: mov    0x8(%r8),%esi
  0x0000000002b05ee4: shl    $0x3,%rsi
  0x0000000002b05ee8: cmp    %rsi,%rbx
  0x0000000002b05eeb: jne    0x0000000002b05f7c
  0x0000000002b05ef1: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05efb: mov    0x8(%r8),%ebx
  0x0000000002b05eff: shl    $0x3,%rbx
  0x0000000002b05f03: cmp    0x130(%rdi),%rbx
  0x0000000002b05f0a: jne    0x0000000002b05f19
  0x0000000002b05f0c: addq   $0x1,0x138(%rdi)
  0x0000000002b05f14: jmpq   0x0000000002b05f9d
  0x0000000002b05f19: cmp    0x140(%rdi),%rbx
  0x0000000002b05f20: jne    0x0000000002b05f2f
  0x0000000002b05f22: addq   $0x1,0x148(%rdi)
  0x0000000002b05f2a: jmpq   0x0000000002b05f9d
  0x0000000002b05f2f: cmpq   $0x0,0x130(%rdi)
  0x0000000002b05f3a: jne    0x0000000002b05f53
  0x0000000002b05f3c: mov    %rbx,0x130(%rdi)
  0x0000000002b05f43: movq   $0x1,0x138(%rdi)
  0x0000000002b05f4e: jmpq   0x0000000002b05f9d
  0x0000000002b05f53: cmpq   $0x0,0x140(%rdi)
  0x0000000002b05f5e: jne    0x0000000002b05f77
  0x0000000002b05f60: mov    %rbx,0x140(%rdi)
  0x0000000002b05f67: movq   $0x1,0x148(%rdi)
  0x0000000002b05f72: jmpq   0x0000000002b05f9d
  0x0000000002b05f77: jmpq   0x0000000002b05f9d
  0x0000000002b05f7c: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05f86: subq   $0x1,0x128(%rdi)
  0x0000000002b05f8e: jmpq   0x0000000002b05f98
  0x0000000002b05f93: jmpq   0x0000000002b05f9d
  0x0000000002b05f98: xor    %rax,%rax
  0x0000000002b05f9b: jmp    0x0000000002b05fa7
  0x0000000002b05f9d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8

  0x0000000002b05fa7: cmp    $0x0,%eax
  0x0000000002b05faa: movabs $0x1b7a6d00,%rax   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05fb4: movabs $0x158,%rsi
  0x0000000002b05fbe: je     0x0000000002b05fce
  0x0000000002b05fc4: movabs $0x168,%rsi
  0x0000000002b05fce: mov    (%rax,%rsi,1),%rdi
  0x0000000002b05fd2: lea    0x1(%rdi),%rdi
  0x0000000002b05fd6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b05fda: je     0x0000000002b0622c  ;*ifeq
                                                ; - java.lang.String::equals@11

  0x0000000002b05fe0: cmp    $0x0,%r8
  0x0000000002b05fe4: jne    0x0000000002b05fff
  0x0000000002b05fe6: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b05ff0: orl    $0x100,0x170(%rdi)
  0x0000000002b05ffa: jmpq   0x0000000002b060c1
  0x0000000002b05fff: movabs $0x7c00016d0,%rbx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002b06009: mov    0x8(%r8),%esi
  0x0000000002b0600d: shl    $0x3,%rsi
  0x0000000002b06011: cmp    %rsi,%rbx
  0x0000000002b06014: jne    0x0000000002b060a5
  0x0000000002b0601a: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b06024: mov    0x8(%r8),%ebx
  0x0000000002b06028: shl    $0x3,%rbx
  0x0000000002b0602c: cmp    0x180(%rdi),%rbx
  0x0000000002b06033: jne    0x0000000002b06042
  0x0000000002b06035: addq   $0x1,0x188(%rdi)
  0x0000000002b0603d: jmpq   0x0000000002b060c1
  0x0000000002b06042: cmp    0x190(%rdi),%rbx
  0x0000000002b06049: jne    0x0000000002b06058
  0x0000000002b0604b: addq   $0x1,0x198(%rdi)
  0x0000000002b06053: jmpq   0x0000000002b060c1
  0x0000000002b06058: cmpq   $0x0,0x180(%rdi)
  0x0000000002b06063: jne    0x0000000002b0607c
  0x0000000002b06065: mov    %rbx,0x180(%rdi)
  0x0000000002b0606c: movq   $0x1,0x188(%rdi)
  0x0000000002b06077: jmpq   0x0000000002b060c1
  0x0000000002b0607c: cmpq   $0x0,0x190(%rdi)
  0x0000000002b06087: jne    0x0000000002b060a0
  0x0000000002b06089: mov    %rbx,0x190(%rdi)
  0x0000000002b06090: movq   $0x1,0x198(%rdi)
  0x0000000002b0609b: jmpq   0x0000000002b060c1
  0x0000000002b060a0: jmpq   0x0000000002b060c1
  0x0000000002b060a5: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b060af: subq   $0x1,0x178(%rdi)
  0x0000000002b060b7: jmpq   0x0000000002b06265
  0x0000000002b060bc: jmpq   0x0000000002b060c1
  0x0000000002b060c1: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15

  0x0000000002b060c4: mov    0xc(%rdx),%esi
  0x0000000002b060c7: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20

  0x0000000002b060cb: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23
                                                ; implicit exception: dispatches to 0x0000000002b0626e
  0x0000000002b060ce: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002b06273
  0x0000000002b060d1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27

  0x0000000002b060d5: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30
                                                ; implicit exception: dispatches to 0x0000000002b06278
  0x0000000002b060d8: cmp    %ebx,%edi
  0x0000000002b060da: movabs $0x1b7a6d00,%rbx   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b060e4: movabs $0x1a8,%rdx
  0x0000000002b060ee: jne    0x0000000002b060fe
  0x0000000002b060f4: movabs $0x1b8,%rdx
  0x0000000002b060fe: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b06102: lea    0x1(%rcx),%rcx
  0x0000000002b06106: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b0610a: jne    0x0000000002b0622c  ;*if_icmpne
                                                ; - java.lang.String::equals@31

  0x0000000002b06110: mov    $0x0,%ebx
  0x0000000002b06115: jmpq   0x0000000002b061c7  ;*iload_3
                                                ; - java.lang.String::equals@49

  0x0000000002b0611a: nopw   0x0(%rax,%rax,1)
  0x0000000002b06120: movslq %ebx,%rdi
  0x0000000002b06123: cmp    0xc(%rsi),%ebx
  0x0000000002b06126: jae    0x0000000002b0627d
  0x0000000002b0612c: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60

  0x0000000002b06131: movslq %ebx,%rcx
  0x0000000002b06134: cmp    0xc(%rax),%ebx
  0x0000000002b06137: jae    0x0000000002b06286
  0x0000000002b0613d: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65

  0x0000000002b06142: cmp    %ecx,%edi
  0x0000000002b06144: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0614e: movabs $0x1e8,%rcx
  0x0000000002b06158: je     0x0000000002b06168
  0x0000000002b0615e: movabs $0x1f8,%rcx
  0x0000000002b06168: mov    (%rdi,%rcx,1),%r8
  0x0000000002b0616c: lea    0x1(%r8),%r8
  0x0000000002b06170: mov    %r8,(%rdi,%rcx,1)
  0x0000000002b06174: jne    0x0000000002b0620a  ;*if_icmpeq
                                                ; - java.lang.String::equals@66

  0x0000000002b0617a: inc    %ebx
  0x0000000002b0617c: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b06186: mov    0xe0(%rdi),%ecx
  0x0000000002b0618c: add    $0x8,%ecx
  0x0000000002b0618f: mov    %ecx,0xe0(%rdi)
  0x0000000002b06195: movabs $0x1b5943e0,%rdi   ;   {metadata({method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0619f: and    $0xfff8,%ecx
  0x0000000002b061a5: cmp    $0x0,%ecx
  0x0000000002b061a8: je     0x0000000002b0628f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74

  0x0000000002b061ae: test   %eax,-0x1f160b4(%rip)        # 0x0000000000bf0100
                                                ;   {poll}
  0x0000000002b061b4: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b061be: incl   0x208(%rdi)
  0x0000000002b061c4: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74

  0x0000000002b061c7: mov    %rdi,%rdx
  0x0000000002b061ca: dec    %edx
  0x0000000002b061cc: cmp    $0x0,%edi
  0x0000000002b061cf: movabs $0x1b7a6d00,%rdi   ;   {metadata(method data for {method} {0x000000001b5943e8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b061d9: movabs $0x1c8,%rcx
  0x0000000002b061e3: je     0x0000000002b061f3
  0x0000000002b061e9: movabs $0x1d8,%rcx
  0x0000000002b061f3: mov    (%rdi,%rcx,1),%r8
  0x0000000002b061f7: lea    0x1(%r8),%r8
  0x0000000002b061fb: mov    %r8,(%rdi,%rcx,1)
  0x0000000002b061ff: je     0x0000000002b0621b
  0x0000000002b06205: jmpq   0x0000000002b06120  ;*ifeq
                                                ; - java.lang.String::equals@53

  0x0000000002b0620a: mov    $0x0,%eax
  0x0000000002b0620f: add    $0x30,%rsp
  0x0000000002b06213: pop    %rbp
  0x0000000002b06214: test   %eax,-0x1f1611a(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0621a: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70

  0x0000000002b0621b: mov    $0x1,%eax
  0x0000000002b06220: add    $0x30,%rsp
  0x0000000002b06224: pop    %rbp
  0x0000000002b06225: test   %eax,-0x1f1612b(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0622b: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78

  0x0000000002b0622c: mov    $0x0,%eax
  0x0000000002b06231: add    $0x30,%rsp
  0x0000000002b06235: pop    %rbp
  0x0000000002b06236: test   %eax,-0x1f1613c(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0623c: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80

  0x0000000002b0623d: mov    $0x1,%eax
  0x0000000002b06242: add    $0x30,%rsp
  0x0000000002b06246: pop    %rbp
  0x0000000002b06247: test   %eax,-0x1f1614d(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0624d: retq   
  0x0000000002b0624e: mov    %rax,0x8(%rsp)
  0x0000000002b06253: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b0625b: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1
                                                ;   {runtime_call}
  0x0000000002b06260: jmpq   0x0000000002b05e7e
  0x0000000002b06265: mov    %r8,(%rsp)
  0x0000000002b06269: callq  0x0000000002afe880  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15
                                                ;   {runtime_call}
  0x0000000002b0626e: callq  0x0000000002afc580  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23
                                                ;   {runtime_call}
  0x0000000002b06273: callq  0x0000000002afc580  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27
                                                ;   {runtime_call}
  0x0000000002b06278: callq  0x0000000002afc580  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30
                                                ;   {runtime_call}
  0x0000000002b0627d: mov    %rbx,(%rsp)
  0x0000000002b06281: callq  0x0000000002a6eb00  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60
                                                ;   {runtime_call}
  0x0000000002b06286: mov    %rbx,(%rsp)
  0x0000000002b0628a: callq  0x0000000002a6eb00  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65
                                                ;   {runtime_call}
  0x0000000002b0628f: mov    %rdi,0x8(%rsp)
  0x0000000002b06294: movq   $0x4a,(%rsp)
  0x0000000002b0629c: callq  0x0000000002b01ae0  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74
                                                ;   {runtime_call}
  0x0000000002b062a1: jmpq   0x0000000002b061ae
  0x0000000002b062a6: nop
  0x0000000002b062a7: nop
  0x0000000002b062a8: mov    0x2a8(%r15),%rax
  0x0000000002b062af: movabs $0x0,%r10
  0x0000000002b062b9: mov    %r10,0x2a8(%r15)
  0x0000000002b062c0: movabs $0x0,%r10
  0x0000000002b062ca: mov    %r10,0x2b0(%r15)
  0x0000000002b062d1: add    $0x30,%rsp
  0x0000000002b062d5: pop    %rbp
  0x0000000002b062d6: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b062db: hlt    
  0x0000000002b062dc: hlt    
  0x0000000002b062dd: hlt    
  0x0000000002b062de: hlt    
  0x0000000002b062df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b062e0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b062e5: mov    %rsp,-0x28(%rsp)
  0x0000000002b062ea: sub    $0x80,%rsp
  0x0000000002b062f1: mov    %rax,0x78(%rsp)
  0x0000000002b062f6: mov    %rcx,0x70(%rsp)
  0x0000000002b062fb: mov    %rdx,0x68(%rsp)
  0x0000000002b06300: mov    %rbx,0x60(%rsp)
  0x0000000002b06305: mov    %rbp,0x50(%rsp)
  0x0000000002b0630a: mov    %rsi,0x48(%rsp)
  0x0000000002b0630f: mov    %rdi,0x40(%rsp)
  0x0000000002b06314: mov    %r8,0x38(%rsp)
  0x0000000002b06319: mov    %r9,0x30(%rsp)
  0x0000000002b0631e: mov    %r10,0x28(%rsp)
  0x0000000002b06323: mov    %r11,0x20(%rsp)
  0x0000000002b06328: mov    %r12,0x18(%rsp)
  0x0000000002b0632d: mov    %r13,0x10(%rsp)
  0x0000000002b06332: mov    %r14,0x8(%rsp)
  0x0000000002b06337: mov    %r15,(%rsp)
  0x0000000002b0633b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b06345: movabs $0x2b062e5,%rdx    ;   {internal_word}
  0x0000000002b0634f: mov    %rsp,%r8
  0x0000000002b06352: and    $0xfffffffffffffff0,%rsp
  0x0000000002b06356: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b0635b: hlt    
[Deopt Handler Code]
  0x0000000002b0635c: movabs $0x2b0635c,%r10    ;   {section_word}
  0x0000000002b06366: push   %r10
  0x0000000002b06368: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0636d: hlt    
  0x0000000002b0636e: hlt    
  0x0000000002b0636f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002b05e20' size='2504' address='0x0000000002b05c90' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2211' backedge_count='3523' iicount='2211' stamp='0.419'/>
<writer thread='53496'/>
<task_queued compile_id='5' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='16000' iicount='16000' stamp='0.419' comment='tiered' hot_count='16000'/>
<task_queued compile_id='6' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='16000' iicount='16000' stamp='0.419' comment='tiered' hot_count='16000'/>
<writer thread='49028'/>
<task_queued compile_id='7' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10752' iicount='10752' stamp='0.420' comment='tiered' hot_count='10752'/>
<writer thread='53496'/>
<task_queued compile_id='8' method='java/lang/String hashCode ()I' bytes='55' count='2120' backedge_count='53248' iicount='2120' stamp='0.420' comment='tiered' hot_count='2120'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b039d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b7559c8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002b03b00: mov    0x8(%rdx),%r10d
  0x0000000002b03b04: shl    $0x3,%r10
  0x0000000002b03b08: cmp    %r10,%rax
  0x0000000002b03b0b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b03b11: data16 xchg %ax,%ax
  0x0000000002b03b14: nopl   0x0(%rax,%rax,1)
  0x0000000002b03b1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b03b20: mov    %eax,-0x6000(%rsp)
  0x0000000002b03b27: push   %rbp
  0x0000000002b03b28: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1

  0x0000000002b03b2c: movzwl %r8w,%r8d          ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1

  0x0000000002b03b30: cmp    $0x100,%r8d
  0x0000000002b03b37: jae    0x0000000002b03b54
  0x0000000002b03b39: movabs $0x76bd91190,%r10  ;   {oop([I)}
  0x0000000002b03b43: mov    0x10(%r10,%r8,4),%eax
  0x0000000002b03b48: add    $0x10,%rsp
  0x0000000002b03b4c: pop    %rbp
  0x0000000002b03b4d: test   %eax,-0x1f13b53(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b03b53: retq   
  0x0000000002b03b54: mov    $0xffffffe4,%edx
  0x0000000002b03b59: mov    %r8d,%ebp
  0x0000000002b03b5c: data16 xchg %ax,%ax
  0x0000000002b03b5f: callq  0x0000000002a457a0  ; OopMap{off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ;   {runtime_call}
  0x0000000002b03b64: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7

  0x0000000002b03b65: hlt    
  0x0000000002b03b66: hlt    
  0x0000000002b03b67: hlt    
  0x0000000002b03b68: hlt    
  0x0000000002b03b69: hlt    
  0x0000000002b03b6a: hlt    
  0x0000000002b03b6b: hlt    
  0x0000000002b03b6c: hlt    
  0x0000000002b03b6d: hlt    
  0x0000000002b03b6e: hlt    
  0x0000000002b03b6f: hlt    
  0x0000000002b03b70: hlt    
  0x0000000002b03b71: hlt    
  0x0000000002b03b72: hlt    
  0x0000000002b03b73: hlt    
  0x0000000002b03b74: hlt    
  0x0000000002b03b75: hlt    
  0x0000000002b03b76: hlt    
  0x0000000002b03b77: hlt    
  0x0000000002b03b78: hlt    
  0x0000000002b03b79: hlt    
  0x0000000002b03b7a: hlt    
  0x0000000002b03b7b: hlt    
  0x0000000002b03b7c: hlt    
  0x0000000002b03b7d: hlt    
  0x0000000002b03b7e: hlt    
  0x0000000002b03b7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b03b80: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b03b85: callq  0x0000000002b03b8a
  0x0000000002b03b8a: subq   $0x5,(%rsp)
  0x0000000002b03b8f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b03b94: hlt    
  0x0000000002b03b95: hlt    
  0x0000000002b03b96: hlt    
  0x0000000002b03b97: hlt    
<nmethod compile_id='6' compiler='C2' level='4' entry='0x0000000002b03b00' size='616' address='0x0000000002b039d0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='512' dependencies_offset='608' oops_offset='456' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='16053' iicount='16053' stamp='0.423'/>
<writer thread='49028'/>
<task_queued compile_id='9' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.423' comment='tiered' hot_count='128'/>
<writer thread='53496'/>
<task_queued compile_id='10' method='java/io/File exists ()Z' bytes='43' count='256' iicount='256' level='3' stamp='0.423' comment='tiered' hot_count='256'/>
<task_queued compile_id='11' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='642' backedge_count='22528' iicount='642' level='3' stamp='0.423' comment='tiered' hot_count='642'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b036d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b777fa0} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b03820: mov    0x8(%rdx),%r10d
  0x0000000002b03824: shl    $0x3,%r10
  0x0000000002b03828: cmp    %rax,%r10
  0x0000000002b0382b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b03831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b0383c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b03840: mov    %eax,-0x6000(%rsp)
  0x0000000002b03847: push   %rbp
  0x0000000002b03848: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0

  0x0000000002b0384c: mov    0x10(%rdx),%eax
  0x0000000002b0384f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1

  0x0000000002b03853: add    $0x30,%rsp
  0x0000000002b03857: pop    %rbp
  0x0000000002b03858: test   %eax,-0x1f1375e(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0385e: retq   
  0x0000000002b0385f: nop
  0x0000000002b03860: nop
  0x0000000002b03861: mov    0x2a8(%r15),%rax
  0x0000000002b03868: movabs $0x0,%r10
  0x0000000002b03872: mov    %r10,0x2a8(%r15)
  0x0000000002b03879: movabs $0x0,%r10
  0x0000000002b03883: mov    %r10,0x2b0(%r15)
  0x0000000002b0388a: add    $0x30,%rsp
  0x0000000002b0388e: pop    %rbp
  0x0000000002b0388f: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b03894: hlt    
  0x0000000002b03895: hlt    
  0x0000000002b03896: hlt    
  0x0000000002b03897: hlt    
  0x0000000002b03898: hlt    
  0x0000000002b03899: hlt    
  0x0000000002b0389a: hlt    
  0x0000000002b0389b: hlt    
  0x0000000002b0389c: hlt    
  0x0000000002b0389d: hlt    
  0x0000000002b0389e: hlt    
  0x0000000002b0389f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b038a0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b038a5: mov    %rsp,-0x28(%rsp)
  0x0000000002b038aa: sub    $0x80,%rsp
  0x0000000002b038b1: mov    %rax,0x78(%rsp)
  0x0000000002b038b6: mov    %rcx,0x70(%rsp)
  0x0000000002b038bb: mov    %rdx,0x68(%rsp)
  0x0000000002b038c0: mov    %rbx,0x60(%rsp)
  0x0000000002b038c5: mov    %rbp,0x50(%rsp)
  0x0000000002b038ca: mov    %rsi,0x48(%rsp)
  0x0000000002b038cf: mov    %rdi,0x40(%rsp)
  0x0000000002b038d4: mov    %r8,0x38(%rsp)
  0x0000000002b038d9: mov    %r9,0x30(%rsp)
  0x0000000002b038de: mov    %r10,0x28(%rsp)
  0x0000000002b038e3: mov    %r11,0x20(%rsp)
  0x0000000002b038e8: mov    %r12,0x18(%rsp)
  0x0000000002b038ed: mov    %r13,0x10(%rsp)
  0x0000000002b038f2: mov    %r14,0x8(%rsp)
  0x0000000002b038f7: mov    %r15,(%rsp)
  0x0000000002b038fb: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b03905: movabs $0x2b038a5,%rdx    ;   {internal_word}
  0x0000000002b0390f: mov    %rsp,%r8
  0x0000000002b03912: and    $0xfffffffffffffff0,%rsp
  0x0000000002b03916: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b0391b: hlt    
[Deopt Handler Code]
  0x0000000002b0391c: movabs $0x2b0391c,%r10    ;   {section_word}
  0x0000000002b03926: push   %r10
  0x0000000002b03928: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0392d: hlt    
  0x0000000002b0392e: hlt    
  0x0000000002b0392f: hlt    
<nmethod compile_id='9' compiler='C1' level='1' entry='0x0000000002b03820' size='704' address='0x0000000002b036d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' stamp='0.426'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b0e690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b755328} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002b0e7c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b0e7c7: push   %rbp
  0x0000000002b0e7c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1

  0x0000000002b0e7cc: mov    %edx,%r11d
  0x0000000002b0e7cf: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3

  0x0000000002b0e7d3: test   %r11d,%r11d
  0x0000000002b0e7d6: jne    0x0000000002b0e7ee  ;*ifne
                                                ; - java.lang.CharacterData::of@4

  0x0000000002b0e7d8: movabs $0x76bd91180,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002b0e7e2: add    $0x20,%rsp
  0x0000000002b0e7e6: pop    %rbp
  0x0000000002b0e7e7: test   %eax,-0x1f1e7ed(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b0e7ed: retq   
  0x0000000002b0e7ee: mov    %edx,%ebp
  0x0000000002b0e7f0: mov    %r11d,(%rsp)
  0x0000000002b0e7f4: mov    $0xffffff65,%edx
  0x0000000002b0e7f9: xchg   %ax,%ax
  0x0000000002b0e7fb: callq  0x0000000002a457a0  ; OopMap{off=64}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4
                                                ;   {runtime_call}
  0x0000000002b0e800: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4

  0x0000000002b0e801: hlt    
  0x0000000002b0e802: hlt    
  0x0000000002b0e803: hlt    
  0x0000000002b0e804: hlt    
  0x0000000002b0e805: hlt    
  0x0000000002b0e806: hlt    
  0x0000000002b0e807: hlt    
  0x0000000002b0e808: hlt    
  0x0000000002b0e809: hlt    
  0x0000000002b0e80a: hlt    
  0x0000000002b0e80b: hlt    
  0x0000000002b0e80c: hlt    
  0x0000000002b0e80d: hlt    
  0x0000000002b0e80e: hlt    
  0x0000000002b0e80f: hlt    
  0x0000000002b0e810: hlt    
  0x0000000002b0e811: hlt    
  0x0000000002b0e812: hlt    
  0x0000000002b0e813: hlt    
  0x0000000002b0e814: hlt    
  0x0000000002b0e815: hlt    
  0x0000000002b0e816: hlt    
  0x0000000002b0e817: hlt    
  0x0000000002b0e818: hlt    
  0x0000000002b0e819: hlt    
  0x0000000002b0e81a: hlt    
  0x0000000002b0e81b: hlt    
  0x0000000002b0e81c: hlt    
  0x0000000002b0e81d: hlt    
  0x0000000002b0e81e: hlt    
  0x0000000002b0e81f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b0e820: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b0e825: callq  0x0000000002b0e82a
  0x0000000002b0e82a: subq   $0x5,(%rsp)
  0x0000000002b0e82f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0e834: hlt    
  0x0000000002b0e835: hlt    
  0x0000000002b0e836: hlt    
  0x0000000002b0e837: hlt    
<nmethod compile_id='5' compiler='C2' level='4' entry='0x0000000002b0e7c0' size='600' address='0x0000000002b0e690' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='448' scopes_pcs_offset='480' dependencies_offset='592' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='16053' iicount='16053' stamp='0.428'/>
<writer thread='53496'/>
<task_queued compile_id='12' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='512' iicount='512' level='3' stamp='0.428' comment='tiered' hot_count='512'/>
<writer thread='18132'/>
Decoding compiled method 0x0000000002b05790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594d30} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002b058c0: mov    0x8(%rdx),%r10d
  0x0000000002b058c4: shl    $0x3,%r10
  0x0000000002b058c8: cmp    %r10,%rax
  0x0000000002b058cb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b058d1: data16 xchg %ax,%ax
  0x0000000002b058d4: nopl   0x0(%rax,%rax,1)
  0x0000000002b058dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b058e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b058e7: push   %rbp
  0x0000000002b058e8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x0000000002b058ec: mov    %rdx,%rbx
  0x0000000002b058ef: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1

  0x0000000002b058f2: test   %eax,%eax
  0x0000000002b058f4: jne    0x0000000002b059e5  ;*ifne
                                                ; - java.lang.String::hashCode@6

  0x0000000002b058fa: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10

  0x0000000002b058fd: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x0000000002b05a05
  0x0000000002b05902: test   %r10d,%r10d
  0x0000000002b05905: jle    0x0000000002b059f1  ;*ifle
                                                ; - java.lang.String::hashCode@14

  0x0000000002b0590b: test   %r10d,%r10d
  0x0000000002b0590e: jbe    0x0000000002b059f5
  0x0000000002b05914: mov    %r10d,%r9d
  0x0000000002b05917: dec    %r9d
  0x0000000002b0591a: cmp    %r10d,%r9d
  0x0000000002b0591d: jae    0x0000000002b059f5  ;*bipush
                                                ; - java.lang.String::hashCode@33

  0x0000000002b05923: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39

  0x0000000002b05929: mov    %r10d,%edi
  0x0000000002b0592c: add    $0xfffffffd,%edi
  0x0000000002b0592f: mov    %r11d,%eax
  0x0000000002b05932: shl    $0x5,%eax
  0x0000000002b05935: lea    (%r12,%rbp,8),%rdx
  0x0000000002b05939: mov    $0x1,%r8d
  0x0000000002b0593f: mov    $0x80000000,%ecx
  0x0000000002b05944: cmp    %edi,%r9d
  0x0000000002b05947: cmovl  %ecx,%edi
  0x0000000002b0594a: cmp    $0x1,%edi
  0x0000000002b0594d: jle    0x0000000002b059d6
  0x0000000002b05953: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36

  0x0000000002b05956: jmp    0x0000000002b05983  ;*bipush
                                                ; - java.lang.String::hashCode@33

  0x0000000002b05958: movzwl 0x10(%rdx,%r8,2),%ecx
  0x0000000002b0595e: sub    %r11d,%eax
  0x0000000002b05961: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40

  0x0000000002b05963: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42

  0x0000000002b05966: cmp    %r10d,%r8d
  0x0000000002b05969: jge    0x0000000002b059e2  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30

  0x0000000002b0596f: mov    %eax,%r9d
  0x0000000002b05972: shl    $0x5,%r9d
  0x0000000002b05976: mov    %eax,%r11d
  0x0000000002b05979: mov    %r9d,%eax
  0x0000000002b0597c: jmp    0x0000000002b05958
  0x0000000002b0597e: xchg   %ax,%ax
  0x0000000002b05980: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36

  0x0000000002b05983: movzwl 0x10(%rdx,%r8,2),%r9d
  0x0000000002b05989: add    %r9d,%eax
  0x0000000002b0598c: movslq %r8d,%r11
  0x0000000002b0598f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x0000000002b05995: movzwl 0x16(%rdx,%r11,2),%ebp
  0x0000000002b0599b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x0000000002b059a1: mov    %eax,%r11d
  0x0000000002b059a4: shl    $0x5,%r11d
  0x0000000002b059a8: sub    %eax,%r11d
  0x0000000002b059ab: add    %ecx,%r11d
  0x0000000002b059ae: mov    %r11d,%esi
  0x0000000002b059b1: shl    $0x5,%esi
  0x0000000002b059b4: sub    %r11d,%esi
  0x0000000002b059b7: add    %r9d,%esi
  0x0000000002b059ba: mov    %esi,%r11d
  0x0000000002b059bd: shl    $0x5,%r11d
  0x0000000002b059c1: sub    %esi,%r11d
  0x0000000002b059c4: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40

  0x0000000002b059c7: mov    %r11d,%eax
  0x0000000002b059ca: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36

  0x0000000002b059cd: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42

  0x0000000002b059d1: cmp    %edi,%r8d
  0x0000000002b059d4: jl     0x0000000002b05980  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30

  0x0000000002b059d6: cmp    %r10d,%r8d
  0x0000000002b059d9: jl     0x0000000002b05958
  0x0000000002b059df: mov    %r11d,%eax
  0x0000000002b059e2: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x0000000002b059e5: add    $0x20,%rsp
  0x0000000002b059e9: pop    %rbp
  0x0000000002b059ea: test   %eax,-0x1f159f0(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b059f0: retq   
  0x0000000002b059f1: xor    %eax,%eax
  0x0000000002b059f3: jmp    0x0000000002b059e5
  0x0000000002b059f5: mov    $0xffffff86,%edx
  0x0000000002b059fa: mov    %rbx,(%rsp)
  0x0000000002b059fe: nop
  0x0000000002b059ff: callq  0x0000000002a457a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33
                                                ;   {runtime_call}
  0x0000000002b05a04: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33

  0x0000000002b05a05: mov    $0xfffffff6,%edx
  0x0000000002b05a0a: nop
  0x0000000002b05a0b: callq  0x0000000002a457a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call}
  0x0000000002b05a10: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13

  0x0000000002b05a11: hlt    
  0x0000000002b05a12: hlt    
  0x0000000002b05a13: hlt    
  0x0000000002b05a14: hlt    
  0x0000000002b05a15: hlt    
  0x0000000002b05a16: hlt    
  0x0000000002b05a17: hlt    
  0x0000000002b05a18: hlt    
  0x0000000002b05a19: hlt    
  0x0000000002b05a1a: hlt    
  0x0000000002b05a1b: hlt    
  0x0000000002b05a1c: hlt    
  0x0000000002b05a1d: hlt    
  0x0000000002b05a1e: hlt    
  0x0000000002b05a1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b05a20: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b05a25: callq  0x0000000002b05a2a
  0x0000000002b05a2a: subq   $0x5,(%rsp)
  0x0000000002b05a2f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b05a34: hlt    
  0x0000000002b05a35: hlt    
  0x0000000002b05a36: hlt    
  0x0000000002b05a37: hlt    
<nmethod compile_id='8' compiler='C2' level='4' entry='0x0000000002b058c0' size='1224' address='0x0000000002b05790' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='2127' backedge_count='53350' iicount='2127' stamp='0.432'/>
<writer thread='53496'/>
<task_queued compile_id='13' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='512' iicount='512' level='3' stamp='0.432' comment='tiered' hot_count='512'/>
<writer thread='18132'/>
Decoding compiled method 0x0000000002b05310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b590470} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002b05440: mov    0x8(%rdx),%r10d
  0x0000000002b05444: shl    $0x3,%r10
  0x0000000002b05448: cmp    %r10,%rax
  0x0000000002b0544b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b05451: data16 xchg %ax,%ax
  0x0000000002b05454: nopl   0x0(%rax,%rax,1)
  0x0000000002b0545c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b05460: mov    %eax,-0x6000(%rsp)
  0x0000000002b05467: push   %rbp
  0x0000000002b05468: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1

  0x0000000002b0546c: mov    0x8(%rdx),%r11d
  0x0000000002b05470: movabs $0x0,%r10
  0x0000000002b0547a: lea    (%r10,%r11,8),%r10
  0x0000000002b0547e: mov    $0x40000000,%r8d
  0x0000000002b05484: test   %r8d,0x9c(%r10)
  0x0000000002b0548b: je     0x0000000002b05498  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0

  0x0000000002b0548d: mov    %rdx,%rbp
  0x0000000002b05490: data16 xchg %ax,%ax
  0x0000000002b05493: callq  0x0000000002b025e0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0
                                                ;   {runtime_call}
  0x0000000002b05498: add    $0x10,%rsp
  0x0000000002b0549c: pop    %rbp
  0x0000000002b0549d: test   %eax,-0x1f154a3(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b054a3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0

  0x0000000002b054a4: mov    %rax,%rdx
  0x0000000002b054a7: add    $0x10,%rsp
  0x0000000002b054ab: pop    %rbp
  0x0000000002b054ac: jmpq   0x0000000002b0e5e0  ;   {runtime_call}
  0x0000000002b054b1: hlt    
  0x0000000002b054b2: hlt    
  0x0000000002b054b3: hlt    
  0x0000000002b054b4: hlt    
  0x0000000002b054b5: hlt    
  0x0000000002b054b6: hlt    
  0x0000000002b054b7: hlt    
  0x0000000002b054b8: hlt    
  0x0000000002b054b9: hlt    
  0x0000000002b054ba: hlt    
  0x0000000002b054bb: hlt    
  0x0000000002b054bc: hlt    
  0x0000000002b054bd: hlt    
  0x0000000002b054be: hlt    
  0x0000000002b054bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b054c0: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b054c5: callq  0x0000000002b054ca
  0x0000000002b054ca: subq   $0x5,(%rsp)
  0x0000000002b054cf: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b054d4: hlt    
  0x0000000002b054d5: hlt    
  0x0000000002b054d6: hlt    
  0x0000000002b054d7: hlt    
<nmethod compile_id='7' compiler='C2' level='4' entry='0x0000000002b05440' size='616' address='0x0000000002b05310' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10793' iicount='10793' stamp='0.434'/>
<writer thread='53496'/>
Decoding compiled method 0x0000000002b112d0:
Code:
[Entry Point]
  # {method} {0x000000001b5a88c8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002b11440: mov    0x8(%rdx),%r10d
  0x0000000002b11444: shl    $0x3,%r10
  0x0000000002b11448: cmp    %r10,%rax
  0x0000000002b1144b: je     0x0000000002b11458
  0x0000000002b11451: jmpq   0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b11456: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002b11458: mov    %eax,-0x6000(%rsp)
  0x0000000002b1145f: push   %rbp
  0x0000000002b11460: mov    %rsp,%rbp
  0x0000000002b11463: sub    $0x80,%rsp
  0x0000000002b1146a: mov    %rsi,0x30(%rsp)
  0x0000000002b1146f: mov    %rdi,0x28(%rsp)
  0x0000000002b11474: mov    %r9,0x48(%rsp)
  0x0000000002b11479: cmp    $0x0,%r9
  0x0000000002b1147d: lea    0x48(%rsp),%rax
  0x0000000002b11482: cmove  0x48(%rsp),%rax
  0x0000000002b11488: mov    %rax,0x20(%rsp)
  0x0000000002b1148d: mov    %r8,%r9
  0x0000000002b11490: mov    %rdx,0x38(%rsp)
  0x0000000002b11495: cmp    $0x0,%rdx
  0x0000000002b11499: lea    0x38(%rsp),%r8
  0x0000000002b1149e: cmove  0x38(%rsp),%r8
  0x0000000002b114a4: movabs $0x76bd00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002b114ae: mov    %r14,0x68(%rsp)
  0x0000000002b114b3: lea    0x68(%rsp),%r14
  0x0000000002b114b8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002b114bb: movabs $0x2b114bb,%r10    ;   {section_word}
  0x0000000002b114c5: mov    %r10,0x1e0(%r15)
  0x0000000002b114cc: mov    %rsp,0x1d8(%r15)
  0x0000000002b114d3: cmpb   $0x0,0x62e95874(%rip)        # 0x00000000659a6d4e
                                                ;   {external_word}
  0x0000000002b114da: je     0x0000000002b11522
  0x0000000002b114e0: push   %rdx
  0x0000000002b114e1: push   %r8
  0x0000000002b114e3: push   %r9
  0x0000000002b114e5: movabs $0x1b5a88c0,%rdx   ;   {metadata({method} {0x000000001b5a88c8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002b114ef: mov    %r15,%rcx
  0x0000000002b114f2: sub    $0x20,%rsp
  0x0000000002b114f6: test   $0xf,%esp
  0x0000000002b114fc: je     0x0000000002b11514
  0x0000000002b11502: sub    $0x8,%rsp
  0x0000000002b11506: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b1150b: add    $0x8,%rsp
  0x0000000002b1150f: jmpq   0x0000000002b11519
  0x0000000002b11514: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b11519: add    $0x20,%rsp
  0x0000000002b1151d: pop    %r9
  0x0000000002b1151f: pop    %r8
  0x0000000002b11521: pop    %rdx
  0x0000000002b11522: lea    0x1f8(%r15),%rcx
  0x0000000002b11529: movl   $0x4,0x270(%r15)
  0x0000000002b11534: movabs $0x7ff909de06fc,%r10  ;   {runtime_call}
  0x0000000002b1153e: callq  *%r10
  0x0000000002b11541: vzeroupper 
  0x0000000002b11544: movl   $0x5,0x270(%r15)
  0x0000000002b1154f: mov    %r15d,%ecx
  0x0000000002b11552: shr    $0x4,%ecx
  0x0000000002b11555: and    $0xffc,%ecx
  0x0000000002b1155b: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002b11565: mov    %ecx,(%r10,%rcx,1)
  0x0000000002b11569: cmpl   $0x0,0x62e963c5(%rip)        # 0x00000000659a7938
                                                ;   {external_word}
  0x0000000002b11573: jne    0x0000000002b11587
  0x0000000002b11579: cmpl   $0x0,0x30(%r15)
  0x0000000002b11581: je     0x0000000002b115a0
  0x0000000002b11587: mov    %r15,%rcx
  0x0000000002b1158a: mov    %rsp,%r12
  0x0000000002b1158d: sub    $0x20,%rsp
  0x0000000002b11591: and    $0xfffffffffffffff0,%rsp
  0x0000000002b11595: callq  0x00000000653d52a0  ;   {runtime_call}
  0x0000000002b1159a: mov    %r12,%rsp
  0x0000000002b1159d: xor    %r12,%r12
  0x0000000002b115a0: movl   $0x8,0x270(%r15)
  0x0000000002b115ab: cmpl   $0x1,0x29c(%r15)
  0x0000000002b115b6: je     0x0000000002b11646
  0x0000000002b115bc: cmpb   $0x0,0x62e9578b(%rip)        # 0x00000000659a6d4e
                                                ;   {external_word}
  0x0000000002b115c3: je     0x0000000002b11601
  0x0000000002b115c9: movabs $0x1b5a88c0,%rdx   ;   {metadata({method} {0x000000001b5a88c8} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002b115d3: mov    %r15,%rcx
  0x0000000002b115d6: sub    $0x20,%rsp
  0x0000000002b115da: test   $0xf,%esp
  0x0000000002b115e0: je     0x0000000002b115f8
  0x0000000002b115e6: sub    $0x8,%rsp
  0x0000000002b115ea: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b115ef: add    $0x8,%rsp
  0x0000000002b115f3: jmpq   0x0000000002b115fd
  0x0000000002b115f8: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b115fd: add    $0x20,%rsp
  0x0000000002b11601: movabs $0x0,%r10
  0x0000000002b1160b: mov    %r10,0x1d8(%r15)
  0x0000000002b11612: movabs $0x0,%r10
  0x0000000002b1161c: mov    %r10,0x1e0(%r15)
  0x0000000002b11623: mov    0x38(%r15),%rcx
  0x0000000002b11627: movl   $0x0,0x100(%rcx)
  0x0000000002b11631: leaveq 
  0x0000000002b11632: cmpq   $0x0,0x8(%r15)
  0x0000000002b1163a: jne    0x0000000002b11641
  0x0000000002b11640: retq   
  0x0000000002b11641: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002b11646: mov    %rsp,%r12
  0x0000000002b11649: sub    $0x20,%rsp
  0x0000000002b1164d: and    $0xfffffffffffffff0,%rsp
  0x0000000002b11651: callq  0x00000000653bdf70  ;   {runtime_call}
  0x0000000002b11656: mov    %r12,%rsp
  0x0000000002b11659: xor    %r12,%r12
  0x0000000002b1165c: jmpq   0x0000000002b115bc
  0x0000000002b11661: hlt    
  0x0000000002b11662: hlt    
  0x0000000002b11663: hlt    
  0x0000000002b11664: hlt    
  0x0000000002b11665: hlt    
  0x0000000002b11666: hlt    
  0x0000000002b11667: hlt    
<nmethod compile_id='14' compile_kind='c2n' level='0' entry='0x0000000002b11440' size='920' address='0x0000000002b112d0' relocation_offset='288' consts_offset='920' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='7296' iicount='7296' stamp='0.438'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b0ee10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002b0f000: mov    0x8(%rdx),%r10d
  0x0000000002b0f004: shl    $0x3,%r10
  0x0000000002b0f008: cmp    %rax,%r10
  0x0000000002b0f00b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b0f011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b0f01c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b0f020: mov    %eax,-0x6000(%rsp)
  0x0000000002b0f027: push   %rbp
  0x0000000002b0f028: sub    $0x90,%rsp
  0x0000000002b0f02f: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f039: mov    0xdc(%r9),%edi
  0x0000000002b0f040: add    $0x8,%edi
  0x0000000002b0f043: mov    %edi,0xdc(%r9)
  0x0000000002b0f04a: movabs $0x1b7019d8,%r9    ;   {metadata({method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f054: and    $0x1ff8,%edi
  0x0000000002b0f05a: cmp    $0x0,%edi
  0x0000000002b0f05d: je     0x0000000002b0f666  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@0

  0x0000000002b0f063: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1
                                                ; implicit exception: dispatches to 0x0000000002b0f67d
  0x0000000002b0f066: mov    %r8,%r9
  0x0000000002b0f069: movabs $0x1b772418,%rdi   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f073: mov    0x8(%r9),%r9d
  0x0000000002b0f077: shl    $0x3,%r9
  0x0000000002b0f07b: cmp    0x110(%rdi),%r9
  0x0000000002b0f082: jne    0x0000000002b0f091
  0x0000000002b0f084: addq   $0x1,0x118(%rdi)
  0x0000000002b0f08c: jmpq   0x0000000002b0f0f7
  0x0000000002b0f091: cmp    0x120(%rdi),%r9
  0x0000000002b0f098: jne    0x0000000002b0f0a7
  0x0000000002b0f09a: addq   $0x1,0x128(%rdi)
  0x0000000002b0f0a2: jmpq   0x0000000002b0f0f7
  0x0000000002b0f0a7: cmpq   $0x0,0x110(%rdi)
  0x0000000002b0f0b2: jne    0x0000000002b0f0cb
  0x0000000002b0f0b4: mov    %r9,0x110(%rdi)
  0x0000000002b0f0bb: movq   $0x1,0x118(%rdi)
  0x0000000002b0f0c6: jmpq   0x0000000002b0f0f7
  0x0000000002b0f0cb: cmpq   $0x0,0x120(%rdi)
  0x0000000002b0f0d6: jne    0x0000000002b0f0ef
  0x0000000002b0f0d8: mov    %r9,0x120(%rdi)
  0x0000000002b0f0df: movq   $0x1,0x128(%rdi)
  0x0000000002b0f0ea: jmpq   0x0000000002b0f0f7
  0x0000000002b0f0ef: addq   $0x1,0x108(%rdi)
  0x0000000002b0f0f7: movabs $0x1b6b9d58,%r9    ;   {metadata(method data for {method} {0x000000001b593ab8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f101: mov    0xdc(%r9),%edi
  0x0000000002b0f108: add    $0x8,%edi
  0x0000000002b0f10b: mov    %edi,0xdc(%r9)
  0x0000000002b0f112: movabs $0x1b593ab0,%r9    ;   {metadata({method} {0x000000001b593ab8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f11c: and    $0x7ffff8,%edi
  0x0000000002b0f122: cmp    $0x0,%edi
  0x0000000002b0f125: je     0x0000000002b0f682
  0x0000000002b0f12b: mov    0xc(%r8),%r9d
  0x0000000002b0f12f: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1
                                                ; - java.io.WinNTFileSystem::normalize@1

  0x0000000002b0f133: mov    0xc(%r9),%esi      ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.io.WinNTFileSystem::normalize@1
                                                ; implicit exception: dispatches to 0x0000000002b0f699
  0x0000000002b0f137: movzwl 0xc(%rdx),%edi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalize@6

  0x0000000002b0f13b: movzwl 0xe(%rdx),%ebx     ;*getfield altSlash
                                                ; - java.io.WinNTFileSystem::normalize@11

  0x0000000002b0f13f: mov    $0x0,%ecx
  0x0000000002b0f144: mov    $0x0,%r9d          ;*iload
                                                ; - java.io.WinNTFileSystem::normalize@22

  0x0000000002b0f14a: nopw   0x0(%rax,%rax,1)
  0x0000000002b0f150: cmp    %esi,%ecx
  0x0000000002b0f152: movabs $0x1b772418,%rax   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f15c: movabs $0x138,%r11
  0x0000000002b0f166: jge    0x0000000002b0f176
  0x0000000002b0f16c: movabs $0x148,%r11
  0x0000000002b0f176: mov    (%rax,%r11,1),%r13
  0x0000000002b0f17a: lea    0x1(%r13),%r13
  0x0000000002b0f17e: mov    %r13,(%rax,%r11,1)
  0x0000000002b0f182: jge    0x0000000002b0f4cf  ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25

  0x0000000002b0f188: mov    %r8,%rax
  0x0000000002b0f18b: movabs $0x1b772418,%r11   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f195: mov    0x8(%rax),%eax
  0x0000000002b0f198: shl    $0x3,%rax
  0x0000000002b0f19c: cmp    0x160(%r11),%rax
  0x0000000002b0f1a3: jne    0x0000000002b0f1b2
  0x0000000002b0f1a5: addq   $0x1,0x168(%r11)
  0x0000000002b0f1ad: jmpq   0x0000000002b0f218
  0x0000000002b0f1b2: cmp    0x170(%r11),%rax
  0x0000000002b0f1b9: jne    0x0000000002b0f1c8
  0x0000000002b0f1bb: addq   $0x1,0x178(%r11)
  0x0000000002b0f1c3: jmpq   0x0000000002b0f218
  0x0000000002b0f1c8: cmpq   $0x0,0x160(%r11)
  0x0000000002b0f1d3: jne    0x0000000002b0f1ec
  0x0000000002b0f1d5: mov    %rax,0x160(%r11)
  0x0000000002b0f1dc: movq   $0x1,0x168(%r11)
  0x0000000002b0f1e7: jmpq   0x0000000002b0f218
  0x0000000002b0f1ec: cmpq   $0x0,0x170(%r11)
  0x0000000002b0f1f7: jne    0x0000000002b0f210
  0x0000000002b0f1f9: mov    %rax,0x170(%r11)
  0x0000000002b0f200: movq   $0x1,0x178(%r11)
  0x0000000002b0f20b: jmpq   0x0000000002b0f218
  0x0000000002b0f210: addq   $0x1,0x158(%r11)
  0x0000000002b0f218: movabs $0x1b6b9be0,%rax   ;   {metadata(method data for {method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f222: mov    0xdc(%rax),%r11d
  0x0000000002b0f229: add    $0x8,%r11d
  0x0000000002b0f22d: mov    %r11d,0xdc(%rax)
  0x0000000002b0f234: movabs $0x1b593bf0,%rax   ;   {metadata({method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f23e: and    $0x7ffff8,%r11d
  0x0000000002b0f245: cmp    $0x0,%r11d
  0x0000000002b0f249: je     0x0000000002b0f69e
  0x0000000002b0f24f: cmp    $0x0,%ecx
  0x0000000002b0f252: movabs $0x1b6b9be0,%rax   ;   {metadata(method data for {method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f25c: movabs $0x108,%r11
  0x0000000002b0f266: jl     0x0000000002b0f276
  0x0000000002b0f26c: movabs $0x118,%r11
  0x0000000002b0f276: mov    (%rax,%r11,1),%r13
  0x0000000002b0f27a: lea    0x1(%r13),%r13
  0x0000000002b0f27e: mov    %r13,(%rax,%r11,1)
  0x0000000002b0f282: jl     0x0000000002b0f603  ;*iflt
                                                ; - java.lang.String::charAt@1
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f288: mov    0xc(%r8),%eax
  0x0000000002b0f28c: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f290: mov    0xc(%rax),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ; implicit exception: dispatches to 0x0000000002b0f6b5
  0x0000000002b0f294: cmp    %r11d,%ecx
  0x0000000002b0f297: movabs $0x1b6b9be0,%r11   ;   {metadata(method data for {method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f2a1: movabs $0x128,%r13
  0x0000000002b0f2ab: jl     0x0000000002b0f2bb
  0x0000000002b0f2b1: movabs $0x138,%r13
  0x0000000002b0f2bb: mov    (%r11,%r13,1),%r14
  0x0000000002b0f2bf: lea    0x1(%r14),%r14
  0x0000000002b0f2c3: mov    %r14,(%r11,%r13,1)
  0x0000000002b0f2c7: jge    0x0000000002b0f603  ;*if_icmplt
                                                ; - java.lang.String::charAt@10
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f2cd: movslq %ecx,%r11
  0x0000000002b0f2d0: cmp    0xc(%rax),%ecx
  0x0000000002b0f2d3: jae    0x0000000002b0f6ba
  0x0000000002b0f2d9: movzwl 0x10(%rax,%r11,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f2df: and    $0xffff,%eax
  0x0000000002b0f2e5: cmp    %ebx,%eax
  0x0000000002b0f2e7: movabs $0x1b772418,%r11   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f2f1: movabs $0x188,%r13
  0x0000000002b0f2fb: jne    0x0000000002b0f30b
  0x0000000002b0f301: movabs $0x198,%r13
  0x0000000002b0f30b: mov    (%r11,%r13,1),%r14
  0x0000000002b0f30f: lea    0x1(%r14),%r14
  0x0000000002b0f313: mov    %r14,(%r11,%r13,1)
  0x0000000002b0f317: je     0x0000000002b0f491  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@40

  0x0000000002b0f31d: cmp    %edi,%eax
  0x0000000002b0f31f: movabs $0x1b772418,%r11   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f329: movabs $0x1f0,%r13
  0x0000000002b0f333: jne    0x0000000002b0f343
  0x0000000002b0f339: movabs $0x200,%r13
  0x0000000002b0f343: mov    (%r11,%r13,1),%r14
  0x0000000002b0f347: lea    0x1(%r14),%r14
  0x0000000002b0f34b: mov    %r14,(%r11,%r13,1)
  0x0000000002b0f34f: jne    0x0000000002b0f3c7  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@68

  0x0000000002b0f355: cmp    %edi,%r9d
  0x0000000002b0f358: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f362: movabs $0x210,%r11
  0x0000000002b0f36c: jne    0x0000000002b0f37c
  0x0000000002b0f372: movabs $0x220,%r11
  0x0000000002b0f37c: mov    (%r9,%r11,1),%r13
  0x0000000002b0f380: lea    0x1(%r13),%r13
  0x0000000002b0f384: mov    %r13,(%r9,%r11,1)
  0x0000000002b0f388: jne    0x0000000002b0f3c7  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74

  0x0000000002b0f38e: cmp    $0x1,%ecx
  0x0000000002b0f391: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f39b: movabs $0x230,%r11
  0x0000000002b0f3a5: jle    0x0000000002b0f3b5
  0x0000000002b0f3ab: movabs $0x240,%r11
  0x0000000002b0f3b5: mov    (%r9,%r11,1),%r13
  0x0000000002b0f3b9: lea    0x1(%r13),%r13
  0x0000000002b0f3bd: mov    %r13,(%r9,%r11,1)
  0x0000000002b0f3c1: jg     0x0000000002b0f5cb  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@80

  0x0000000002b0f3c7: cmp    $0x3a,%eax
  0x0000000002b0f3ca: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f3d4: movabs $0x260,%r11
  0x0000000002b0f3de: jne    0x0000000002b0f3ee
  0x0000000002b0f3e4: movabs $0x270,%r11
  0x0000000002b0f3ee: mov    (%r9,%r11,1),%r13
  0x0000000002b0f3f2: lea    0x1(%r13),%r13
  0x0000000002b0f3f6: mov    %r13,(%r9,%r11,1)
  0x0000000002b0f3fa: jne    0x0000000002b0f439  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@98

  0x0000000002b0f400: cmp    $0x1,%ecx
  0x0000000002b0f403: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f40d: movabs $0x280,%r11
  0x0000000002b0f417: jle    0x0000000002b0f427
  0x0000000002b0f41d: movabs $0x290,%r11
  0x0000000002b0f427: mov    (%r9,%r11,1),%r13
  0x0000000002b0f42b: lea    0x1(%r13),%r13
  0x0000000002b0f42f: mov    %r13,(%r9,%r11,1)
  0x0000000002b0f433: jg     0x0000000002b0f593  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104

  0x0000000002b0f439: inc    %ecx
  0x0000000002b0f43b: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f445: mov    0xe0(%r9),%r11d
  0x0000000002b0f44c: add    $0x8,%r11d
  0x0000000002b0f450: mov    %r11d,0xe0(%r9)
  0x0000000002b0f457: movabs $0x1b7019d8,%r9    ;   {metadata({method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f461: and    $0xfff8,%r11d
  0x0000000002b0f468: cmp    $0x0,%r11d
  0x0000000002b0f46c: je     0x0000000002b0f6c3  ; OopMap{rdx=Oop r8=Oop off=1138}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122

  0x0000000002b0f472: test   %eax,-0x1f1f378(%rip)        # 0x0000000000bf0100
                                                ;   {poll}
  0x0000000002b0f478: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f482: incl   0x2b0(%r9)
  0x0000000002b0f489: mov    %rax,%r9
  0x0000000002b0f48c: jmpq   0x0000000002b0f150  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122

  0x0000000002b0f491: cmp    %edi,%r9d
  0x0000000002b0f494: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f49e: movabs $0x1a8,%rdi
  0x0000000002b0f4a8: jne    0x0000000002b0f4b8
  0x0000000002b0f4ae: movabs $0x1b8,%rdi
  0x0000000002b0f4b8: mov    (%r9,%rdi,1),%rbx
  0x0000000002b0f4bc: lea    0x1(%rbx),%rbx
  0x0000000002b0f4c0: mov    %rbx,(%r9,%rdi,1)
  0x0000000002b0f4c4: jne    0x0000000002b0f560
  0x0000000002b0f4ca: jmpq   0x0000000002b0f54d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49

  0x0000000002b0f4cf: cmp    %edi,%r9d
  0x0000000002b0f4d2: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f4dc: movabs $0x2c8,%rdi
  0x0000000002b0f4e6: jne    0x0000000002b0f4f6
  0x0000000002b0f4ec: movabs $0x2d8,%rdi
  0x0000000002b0f4f6: mov    (%r9,%rdi,1),%rbx
  0x0000000002b0f4fa: lea    0x1(%rbx),%rbx
  0x0000000002b0f4fe: mov    %rbx,(%r9,%rdi,1)
  0x0000000002b0f502: jne    0x0000000002b0f53b  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128

  0x0000000002b0f508: mov    %rdx,%r9
  0x0000000002b0f50b: movabs $0x1b772418,%rdi   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f515: addq   $0x1,0x2e8(%rdi)
  0x0000000002b0f51d: mov    %rsi,%rdi
  0x0000000002b0f520: dec    %edi
  0x0000000002b0f522: mov    %rsi,%r9           ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137

  0x0000000002b0f525: nop
  0x0000000002b0f526: nop
  0x0000000002b0f527: callq  0x0000000002a461a0  ; OopMap{off=1324}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@137
                                                ;   {optimized virtual_call}
  0x0000000002b0f52c: add    $0x90,%rsp
  0x0000000002b0f533: pop    %rbp
  0x0000000002b0f534: test   %eax,-0x1f1f43a(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0f53a: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@140

  0x0000000002b0f53b: mov    %r8,%rax
  0x0000000002b0f53e: add    $0x90,%rsp
  0x0000000002b0f545: pop    %rbp
  0x0000000002b0f546: test   %eax,-0x1f1f44c(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0f54c: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@142

  0x0000000002b0f54d: dec    %ecx
  0x0000000002b0f54f: movabs $0x1b772418,%r9    ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f559: incl   0x1c8(%r9)         ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@56

  0x0000000002b0f560: mov    %rdx,%r9
  0x0000000002b0f563: movabs $0x1b772418,%rdi   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f56d: addq   $0x1,0x1e0(%rdi)
  0x0000000002b0f575: mov    %rsi,%r9
  0x0000000002b0f578: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61

  0x0000000002b0f57b: nop
  0x0000000002b0f57c: nop
  0x0000000002b0f57d: nop
  0x0000000002b0f57e: nop
  0x0000000002b0f57f: callq  0x0000000002a461a0  ; OopMap{off=1412}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61
                                                ;   {optimized virtual_call}
  0x0000000002b0f584: add    $0x90,%rsp
  0x0000000002b0f58b: pop    %rbp
  0x0000000002b0f58c: test   %eax,-0x1f1f492(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0f592: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@64

  0x0000000002b0f593: mov    %rdx,%r9
  0x0000000002b0f596: movabs $0x1b772418,%rdi   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f5a0: addq   $0x1,0x2a0(%rdi)
  0x0000000002b0f5a8: mov    %rsi,%r9
  0x0000000002b0f5ab: mov    $0x0,%edi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111

  0x0000000002b0f5b0: nop
  0x0000000002b0f5b1: nop
  0x0000000002b0f5b2: nop
  0x0000000002b0f5b3: nop
  0x0000000002b0f5b4: nop
  0x0000000002b0f5b5: nop
  0x0000000002b0f5b6: nop
  0x0000000002b0f5b7: callq  0x0000000002a461a0  ; OopMap{off=1468}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111
                                                ;   {optimized virtual_call}
  0x0000000002b0f5bc: add    $0x90,%rsp
  0x0000000002b0f5c3: pop    %rbp
  0x0000000002b0f5c4: test   %eax,-0x1f1f4ca(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0f5ca: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@114

  0x0000000002b0f5cb: mov    %rdx,%r9
  0x0000000002b0f5ce: movabs $0x1b772418,%rdi   ;   {metadata(method data for {method} {0x000000001b7019e0} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b0f5d8: addq   $0x1,0x250(%rdi)
  0x0000000002b0f5e0: dec    %ecx
  0x0000000002b0f5e2: mov    %rsi,%r9
  0x0000000002b0f5e5: mov    %rcx,%rdi          ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90

  0x0000000002b0f5e8: nop
  0x0000000002b0f5e9: nop
  0x0000000002b0f5ea: nop
  0x0000000002b0f5eb: nop
  0x0000000002b0f5ec: nop
  0x0000000002b0f5ed: nop
  0x0000000002b0f5ee: nop
  0x0000000002b0f5ef: callq  0x0000000002a461a0  ; OopMap{off=1524}
                                                ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@90
                                                ;   {optimized virtual_call}
  0x0000000002b0f5f4: add    $0x90,%rsp
  0x0000000002b0f5fb: pop    %rbp
  0x0000000002b0f5fc: test   %eax,-0x1f1f502(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b0f602: retq                      ;*areturn
                                                ; - java.io.WinNTFileSystem::normalize@93

  0x0000000002b0f603: mov    %r9d,0x74(%rsp)
  0x0000000002b0f608: mov    %ebx,0x70(%rsp)
  0x0000000002b0f60c: mov    %edi,0x6c(%rsp)
  0x0000000002b0f610: mov    %esi,0x68(%rsp)
  0x0000000002b0f614: mov    %r8,0x58(%rsp)
  0x0000000002b0f619: mov    %rdx,0x60(%rsp)
  0x0000000002b0f61e: xchg   %ax,%ax
  0x0000000002b0f620: jmpq   0x0000000002b0f6e9  ;   {no_reloc}
  0x0000000002b0f625: add    %al,(%rax)
  0x0000000002b0f627: add    %al,(%rax)
  0x0000000002b0f629: add    %ch,%cl
  0x0000000002b0f62b: (bad)  
  0x0000000002b0f62c: add    %al,(%rax)
  0x0000000002b0f62e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f631: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b0f634: loopne 0x0000000002b0f5d1
  0x0000000002b0f636: imul   $0x0,(%rbx),%ebx
  0x0000000002b0f639: add    %al,(%rax)
  0x0000000002b0f63b: add    %cl,-0x7d(%rcx)
  0x0000000002b0f63e: test   %ecx,0x1(%rax)
  0x0000000002b0f641: add    %al,(%rax)
  0x0000000002b0f643: add    %ecx,-0x3f(%rbx,%rcx,4)
  0x0000000002b0f647: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18
                                                ; - java.io.WinNTFileSystem::normalize@31

  0x0000000002b0f64a: mov    %ecx,0x78(%rsp)
  0x0000000002b0f64e: mov    %rax,0x50(%rsp)
  0x0000000002b0f653: nop
  0x0000000002b0f654: nop
  0x0000000002b0f655: nop
  0x0000000002b0f656: nop
  0x0000000002b0f657: callq  0x0000000002a461a0  ; OopMap{[88]=Oop [80]=Oop [96]=Oop off=1628}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {optimized virtual_call}
  0x0000000002b0f65c: mov    0x50(%rsp),%rax
  0x0000000002b0f661: jmpq   0x0000000002b0f72b
  0x0000000002b0f666: mov    %r9,0x8(%rsp)
  0x0000000002b0f66b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b0f673: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1656}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1
                                                ;   {runtime_call}
  0x0000000002b0f678: jmpq   0x0000000002b0f063
  0x0000000002b0f67d: callq  0x0000000002afc580  ; OopMap{rdx=Oop r8=Oop off=1666}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1
                                                ;   {runtime_call}
  0x0000000002b0f682: mov    %r9,0x8(%rsp)
  0x0000000002b0f687: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b0f68f: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1684}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1
                                                ; - java.io.WinNTFileSystem::normalize@1
                                                ;   {runtime_call}
  0x0000000002b0f694: jmpq   0x0000000002b0f12b
  0x0000000002b0f699: callq  0x0000000002afc580  ; OopMap{rdx=Oop r8=Oop off=1694}
                                                ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.io.WinNTFileSystem::normalize@1
                                                ;   {runtime_call}
  0x0000000002b0f69e: mov    %rax,0x8(%rsp)
  0x0000000002b0f6a3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b0f6ab: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1712}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {runtime_call}
  0x0000000002b0f6b0: jmpq   0x0000000002b0f24f
  0x0000000002b0f6b5: callq  0x0000000002afc580  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1722}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {runtime_call}
  0x0000000002b0f6ba: mov    %rcx,(%rsp)
  0x0000000002b0f6be: callq  0x0000000002a6eb00  ; OopMap{rdx=Oop r8=Oop rax=Oop off=1731}
                                                ;*caload
                                                ; - java.lang.String::charAt@27
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {runtime_call}
  0x0000000002b0f6c3: mov    %r9,0x8(%rsp)
  0x0000000002b0f6c8: movq   $0x7a,(%rsp)
  0x0000000002b0f6d0: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1749}
                                                ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@122
                                                ;   {runtime_call}
  0x0000000002b0f6d5: jmpq   0x0000000002b0f472
  0x0000000002b0f6da: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b0f6e4: mov    $0xa050f00,%eax
  0x0000000002b0f6e9: callq  0x0000000002b00660  ; OopMap{[88]=Oop [96]=Oop off=1774}
                                                ;*new  ; - java.lang.String::charAt@13
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {runtime_call}
  0x0000000002b0f6ee: jmpq   0x0000000002b0f620
  0x0000000002b0f6f3: mov    %rdx,%rdx
  0x0000000002b0f6f6: callq  0x0000000002afca20  ; OopMap{[88]=Oop [96]=Oop off=1787}
                                                ;*new  ; - java.lang.String::charAt@13
                                                ; - java.io.WinNTFileSystem::normalize@31
                                                ;   {runtime_call}
  0x0000000002b0f6fb: jmpq   0x0000000002b0f62f
  0x0000000002b0f700: nop
  0x0000000002b0f701: nop
  0x0000000002b0f702: mov    0x2a8(%r15),%rax
  0x0000000002b0f709: movabs $0x0,%r10
  0x0000000002b0f713: mov    %r10,0x2a8(%r15)
  0x0000000002b0f71a: movabs $0x0,%r10
  0x0000000002b0f724: mov    %r10,0x2b0(%r15)
  0x0000000002b0f72b: add    $0x90,%rsp
  0x0000000002b0f732: pop    %rbp
  0x0000000002b0f733: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b0f738: hlt    
  0x0000000002b0f739: hlt    
  0x0000000002b0f73a: hlt    
  0x0000000002b0f73b: hlt    
  0x0000000002b0f73c: hlt    
  0x0000000002b0f73d: hlt    
  0x0000000002b0f73e: hlt    
  0x0000000002b0f73f: hlt    
[Stub Code]
  0x0000000002b0f740: nop                       ;   {no_reloc}
  0x0000000002b0f741: nop
  0x0000000002b0f742: nop
  0x0000000002b0f743: nop
  0x0000000002b0f744: nop
  0x0000000002b0f745: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b0f74f: jmpq   0x0000000002b0f74f  ;   {runtime_call}
  0x0000000002b0f754: nop
  0x0000000002b0f755: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b0f75f: jmpq   0x0000000002b0f75f  ;   {runtime_call}
  0x0000000002b0f764: nop
  0x0000000002b0f765: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b0f76f: jmpq   0x0000000002b0f76f  ;   {runtime_call}
  0x0000000002b0f774: nop
  0x0000000002b0f775: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b0f77f: jmpq   0x0000000002b0f77f  ;   {runtime_call}
  0x0000000002b0f784: nop
  0x0000000002b0f785: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b0f78f: jmpq   0x0000000002b0f78f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b0f794: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b0f799: mov    %rsp,-0x28(%rsp)
  0x0000000002b0f79e: sub    $0x80,%rsp
  0x0000000002b0f7a5: mov    %rax,0x78(%rsp)
  0x0000000002b0f7aa: mov    %rcx,0x70(%rsp)
  0x0000000002b0f7af: mov    %rdx,0x68(%rsp)
  0x0000000002b0f7b4: mov    %rbx,0x60(%rsp)
  0x0000000002b0f7b9: mov    %rbp,0x50(%rsp)
  0x0000000002b0f7be: mov    %rsi,0x48(%rsp)
  0x0000000002b0f7c3: mov    %rdi,0x40(%rsp)
  0x0000000002b0f7c8: mov    %r8,0x38(%rsp)
  0x0000000002b0f7cd: mov    %r9,0x30(%rsp)
  0x0000000002b0f7d2: mov    %r10,0x28(%rsp)
  0x0000000002b0f7d7: mov    %r11,0x20(%rsp)
  0x0000000002b0f7dc: mov    %r12,0x18(%rsp)
  0x0000000002b0f7e1: mov    %r13,0x10(%rsp)
  0x0000000002b0f7e6: mov    %r14,0x8(%rsp)
  0x0000000002b0f7eb: mov    %r15,(%rsp)
  0x0000000002b0f7ef: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b0f7f9: movabs $0x2b0f799,%rdx    ;   {internal_word}
  0x0000000002b0f803: mov    %rsp,%r8
  0x0000000002b0f806: and    $0xfffffffffffffff0,%rsp
  0x0000000002b0f80a: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b0f80f: hlt    
[Deopt Handler Code]
  0x0000000002b0f810: movabs $0x2b0f810,%r10    ;   {section_word}
  0x0000000002b0f81a: push   %r10
  0x0000000002b0f81c: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0f821: hlt    
  0x0000000002b0f822: hlt    
  0x0000000002b0f823: hlt    
  0x0000000002b0f824: hlt    
  0x0000000002b0f825: hlt    
  0x0000000002b0f826: hlt    
  0x0000000002b0f827: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000002b0f000' size='3984' address='0x0000000002b0ee10' relocation_offset='288' insts_offset='496' stub_offset='2352' scopes_data_offset='2616' scopes_pcs_offset='3112' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='644' backedge_count='22612' iicount='644' stamp='0.453'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b0ea50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b593bf8} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002b0eba0: mov    0x8(%rdx),%r10d
  0x0000000002b0eba4: shl    $0x3,%r10
  0x0000000002b0eba8: cmp    %r10,%rax
  0x0000000002b0ebab: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b0ebb1: data16 xchg %ax,%ax
  0x0000000002b0ebb4: nopl   0x0(%rax,%rax,1)
  0x0000000002b0ebbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b0ebc0: mov    %eax,-0x6000(%rsp)
  0x0000000002b0ebc7: push   %rbp
  0x0000000002b0ebc8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1

  0x0000000002b0ebcc: test   %r8d,%r8d
  0x0000000002b0ebcf: jl     0x0000000002b0ec0d  ;*iflt
                                                ; - java.lang.String::charAt@1

  0x0000000002b0ebd1: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6

  0x0000000002b0ebd5: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ; implicit exception: dispatches to 0x0000000002b0ec35
  0x0000000002b0ebda: cmp    %ebp,%r8d
  0x0000000002b0ebdd: jge    0x0000000002b0ec21  ;*if_icmplt
                                                ; - java.lang.String::charAt@10

  0x0000000002b0ebdf: cmp    %ebp,%r8d
  0x0000000002b0ebe2: jae    0x0000000002b0ebfa
  0x0000000002b0ebe4: shl    $0x3,%r10
  0x0000000002b0ebe8: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002b0ebee: add    $0x20,%rsp
  0x0000000002b0ebf2: pop    %rbp
  0x0000000002b0ebf3: test   %eax,-0x1f1ebf9(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b0ebf9: retq   
  0x0000000002b0ebfa: mov    $0xffffffe4,%edx
  0x0000000002b0ebff: mov    %r8d,%ebp
  0x0000000002b0ec02: mov    %r10d,(%rsp)
  0x0000000002b0ec06: nop
  0x0000000002b0ec07: callq  0x0000000002a457a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27
                                                ;   {runtime_call}
  0x0000000002b0ec0c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27

  0x0000000002b0ec0d: mov    %rdx,%rbp
  0x0000000002b0ec10: mov    %r8d,0x4(%rsp)
  0x0000000002b0ec15: mov    $0xffffff65,%edx
  0x0000000002b0ec1a: nop
  0x0000000002b0ec1b: callq  0x0000000002a457a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1
                                                ;   {runtime_call}
  0x0000000002b0ec20: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1

  0x0000000002b0ec21: mov    %rdx,(%rsp)
  0x0000000002b0ec25: mov    %r8d,0xc(%rsp)
  0x0000000002b0ec2a: mov    $0xffffff65,%edx
  0x0000000002b0ec2f: callq  0x0000000002a457a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10
                                                ;   {runtime_call}
  0x0000000002b0ec34: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10

  0x0000000002b0ec35: mov    $0xfffffff6,%edx
  0x0000000002b0ec3a: nop
  0x0000000002b0ec3b: callq  0x0000000002a457a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ;   {runtime_call}
  0x0000000002b0ec40: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9

  0x0000000002b0ec41: hlt    
  0x0000000002b0ec42: hlt    
  0x0000000002b0ec43: hlt    
  0x0000000002b0ec44: hlt    
  0x0000000002b0ec45: hlt    
  0x0000000002b0ec46: hlt    
  0x0000000002b0ec47: hlt    
  0x0000000002b0ec48: hlt    
  0x0000000002b0ec49: hlt    
  0x0000000002b0ec4a: hlt    
  0x0000000002b0ec4b: hlt    
  0x0000000002b0ec4c: hlt    
  0x0000000002b0ec4d: hlt    
  0x0000000002b0ec4e: hlt    
  0x0000000002b0ec4f: hlt    
  0x0000000002b0ec50: hlt    
  0x0000000002b0ec51: hlt    
  0x0000000002b0ec52: hlt    
  0x0000000002b0ec53: hlt    
  0x0000000002b0ec54: hlt    
  0x0000000002b0ec55: hlt    
  0x0000000002b0ec56: hlt    
  0x0000000002b0ec57: hlt    
  0x0000000002b0ec58: hlt    
  0x0000000002b0ec59: hlt    
  0x0000000002b0ec5a: hlt    
  0x0000000002b0ec5b: hlt    
  0x0000000002b0ec5c: hlt    
  0x0000000002b0ec5d: hlt    
  0x0000000002b0ec5e: hlt    
  0x0000000002b0ec5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b0ec60: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b0ec65: callq  0x0000000002b0ec6a
  0x0000000002b0ec6a: subq   $0x5,(%rsp)
  0x0000000002b0ec6f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b0ec74: hlt    
  0x0000000002b0ec75: hlt    
  0x0000000002b0ec76: hlt    
  0x0000000002b0ec77: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x0000000002b0eba0' size='928' address='0x0000000002b0ea50' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='159068' iicount='159068' stamp='0.456'/>
<writer thread='53496'/>
<task_queued compile_id='15' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1408' iicount='1408' level='3' stamp='0.456' comment='tiered' hot_count='1408'/>
<task_queued compile_id='16' method='java/lang/String length ()I' bytes='6' count='31232' iicount='31232' stamp='0.457' comment='tiered' hot_count='31232'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b10f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b604290} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b11080: mov    0x8(%rdx),%r10d
  0x0000000002b11084: shl    $0x3,%r10
  0x0000000002b11088: cmp    %rax,%r10
  0x0000000002b1108b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b11091: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1109c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b110a0: mov    %eax,-0x6000(%rsp)
  0x0000000002b110a7: push   %rbp
  0x0000000002b110a8: sub    $0x30,%rsp
  0x0000000002b110ac: movabs $0x1b7a6ba8,%rsi   ;   {metadata(method data for {method} {0x000000001b604290} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b110b6: mov    0xdc(%rsi),%edi
  0x0000000002b110bc: add    $0x8,%edi
  0x0000000002b110bf: mov    %edi,0xdc(%rsi)
  0x0000000002b110c5: movabs $0x1b604288,%rsi   ;   {metadata({method} {0x000000001b604290} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b110cf: and    $0x1ff8,%edi
  0x0000000002b110d5: cmp    $0x0,%edi
  0x0000000002b110d8: je     0x0000000002b11115  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0

  0x0000000002b110de: mov    %rdx,%rsi
  0x0000000002b110e1: movabs $0x1b7a6ba8,%rdi   ;   {metadata(method data for {method} {0x000000001b604290} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002b110eb: addq   $0x1,0x108(%rdi)
  0x0000000002b110f3: mov    %rdx,%rsi
  0x0000000002b110f6: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2

  0x0000000002b110f9: mov    %rsi,0x20(%rsp)
  0x0000000002b110fe: nop
  0x0000000002b110ff: callq  0x0000000002a461a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ;   {optimized virtual_call}
  0x0000000002b11104: mov    0x20(%rsp),%rax
  0x0000000002b11109: add    $0x30,%rsp
  0x0000000002b1110d: pop    %rbp
  0x0000000002b1110e: test   %eax,-0x1f21014(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b11114: retq   
  0x0000000002b11115: mov    %rsi,0x8(%rsp)
  0x0000000002b1111a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b11122: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ;   {runtime_call}
  0x0000000002b11127: jmp    0x0000000002b110de
  0x0000000002b11129: nop
  0x0000000002b1112a: nop
  0x0000000002b1112b: mov    0x2a8(%r15),%rax
  0x0000000002b11132: movabs $0x0,%r10
  0x0000000002b1113c: mov    %r10,0x2a8(%r15)
  0x0000000002b11143: movabs $0x0,%r10
  0x0000000002b1114d: mov    %r10,0x2b0(%r15)
  0x0000000002b11154: add    $0x30,%rsp
  0x0000000002b11158: pop    %rbp
  0x0000000002b11159: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b1115e: hlt    
  0x0000000002b1115f: hlt    
[Stub Code]
  0x0000000002b11160: nop                       ;   {no_reloc}
  0x0000000002b11161: nop
  0x0000000002b11162: nop
  0x0000000002b11163: nop
  0x0000000002b11164: nop
  0x0000000002b11165: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1116f: jmpq   0x0000000002b1116f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b11174: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b11179: mov    %rsp,-0x28(%rsp)
  0x0000000002b1117e: sub    $0x80,%rsp
  0x0000000002b11185: mov    %rax,0x78(%rsp)
  0x0000000002b1118a: mov    %rcx,0x70(%rsp)
  0x0000000002b1118f: mov    %rdx,0x68(%rsp)
  0x0000000002b11194: mov    %rbx,0x60(%rsp)
  0x0000000002b11199: mov    %rbp,0x50(%rsp)
  0x0000000002b1119e: mov    %rsi,0x48(%rsp)
  0x0000000002b111a3: mov    %rdi,0x40(%rsp)
  0x0000000002b111a8: mov    %r8,0x38(%rsp)
  0x0000000002b111ad: mov    %r9,0x30(%rsp)
  0x0000000002b111b2: mov    %r10,0x28(%rsp)
  0x0000000002b111b7: mov    %r11,0x20(%rsp)
  0x0000000002b111bc: mov    %r12,0x18(%rsp)
  0x0000000002b111c1: mov    %r13,0x10(%rsp)
  0x0000000002b111c6: mov    %r14,0x8(%rsp)
  0x0000000002b111cb: mov    %r15,(%rsp)
  0x0000000002b111cf: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b111d9: movabs $0x2b11179,%rdx    ;   {internal_word}
  0x0000000002b111e3: mov    %rsp,%r8
  0x0000000002b111e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b111ea: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b111ef: hlt    
[Deopt Handler Code]
  0x0000000002b111f0: movabs $0x2b111f0,%r10    ;   {section_word}
  0x0000000002b111fa: push   %r10
  0x0000000002b111fc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b11201: hlt    
  0x0000000002b11202: hlt    
  0x0000000002b11203: hlt    
  0x0000000002b11204: hlt    
  0x0000000002b11205: hlt    
  0x0000000002b11206: hlt    
  0x0000000002b11207: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000002b11080' size='912' address='0x0000000002b10f10' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1418' iicount='1418' stamp='0.460'/>
<writer thread='53496'/>
<task_queued compile_id='17' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='512' iicount='512' level='1' stamp='0.460' comment='tiered' hot_count='512'/>
<writer thread='18132'/>
Decoding compiled method 0x0000000002b10c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b593ab8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002b10dc0: mov    0x8(%rdx),%r10d
  0x0000000002b10dc4: shl    $0x3,%r10
  0x0000000002b10dc8: cmp    %r10,%rax
  0x0000000002b10dcb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b10dd1: data16 xchg %ax,%ax
  0x0000000002b10dd4: nopl   0x0(%rax,%rax,1)
  0x0000000002b10ddc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b10de0: mov    %eax,-0x6000(%rsp)
  0x0000000002b10de7: push   %rbp
  0x0000000002b10de8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1

  0x0000000002b10dec: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1

  0x0000000002b10df0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002b10e01
  0x0000000002b10df5: add    $0x10,%rsp
  0x0000000002b10df9: pop    %rbp
  0x0000000002b10dfa: test   %eax,-0x1f20e00(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b10e00: retq   
  0x0000000002b10e01: mov    $0xfffffff6,%edx
  0x0000000002b10e06: nop
  0x0000000002b10e07: callq  0x0000000002a457a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4
                                                ;   {runtime_call}
  0x0000000002b10e0c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4

  0x0000000002b10e0d: hlt    
  0x0000000002b10e0e: hlt    
  0x0000000002b10e0f: hlt    
  0x0000000002b10e10: hlt    
  0x0000000002b10e11: hlt    
  0x0000000002b10e12: hlt    
  0x0000000002b10e13: hlt    
  0x0000000002b10e14: hlt    
  0x0000000002b10e15: hlt    
  0x0000000002b10e16: hlt    
  0x0000000002b10e17: hlt    
  0x0000000002b10e18: hlt    
  0x0000000002b10e19: hlt    
  0x0000000002b10e1a: hlt    
  0x0000000002b10e1b: hlt    
  0x0000000002b10e1c: hlt    
  0x0000000002b10e1d: hlt    
  0x0000000002b10e1e: hlt    
  0x0000000002b10e1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b10e20: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b10e25: callq  0x0000000002b10e2a
  0x0000000002b10e2a: subq   $0x5,(%rsp)
  0x0000000002b10e2f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b10e34: hlt    
  0x0000000002b10e35: hlt    
  0x0000000002b10e36: hlt    
  0x0000000002b10e37: hlt    
<nmethod compile_id='16' compiler='C2' level='4' entry='0x0000000002b10dc0' size='584' address='0x0000000002b10c90' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='31244' iicount='31244' stamp='0.462'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b107d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b5b6780} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b10920: mov    0x8(%rdx),%r10d
  0x0000000002b10924: shl    $0x3,%r10
  0x0000000002b10928: cmp    %rax,%r10
  0x0000000002b1092b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b10931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1093c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b10940: mov    %eax,-0x6000(%rsp)
  0x0000000002b10947: push   %rbp
  0x0000000002b10948: sub    $0x30,%rsp
  0x0000000002b1094c: mov    0xc(%rdx),%eax
  0x0000000002b1094f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0

  0x0000000002b10953: add    $0x30,%rsp
  0x0000000002b10957: pop    %rbp
  0x0000000002b10958: test   %eax,-0x1f2085e(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1095e: retq   
  0x0000000002b1095f: nop
  0x0000000002b10960: nop
  0x0000000002b10961: mov    0x2a8(%r15),%rax
  0x0000000002b10968: movabs $0x0,%r10
  0x0000000002b10972: mov    %r10,0x2a8(%r15)
  0x0000000002b10979: movabs $0x0,%r10
  0x0000000002b10983: mov    %r10,0x2b0(%r15)
  0x0000000002b1098a: add    $0x30,%rsp
  0x0000000002b1098e: pop    %rbp
  0x0000000002b1098f: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b10994: hlt    
  0x0000000002b10995: hlt    
  0x0000000002b10996: hlt    
  0x0000000002b10997: hlt    
  0x0000000002b10998: hlt    
  0x0000000002b10999: hlt    
  0x0000000002b1099a: hlt    
  0x0000000002b1099b: hlt    
  0x0000000002b1099c: hlt    
  0x0000000002b1099d: hlt    
  0x0000000002b1099e: hlt    
  0x0000000002b1099f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b109a0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b109a5: mov    %rsp,-0x28(%rsp)
  0x0000000002b109aa: sub    $0x80,%rsp
  0x0000000002b109b1: mov    %rax,0x78(%rsp)
  0x0000000002b109b6: mov    %rcx,0x70(%rsp)
  0x0000000002b109bb: mov    %rdx,0x68(%rsp)
  0x0000000002b109c0: mov    %rbx,0x60(%rsp)
  0x0000000002b109c5: mov    %rbp,0x50(%rsp)
  0x0000000002b109ca: mov    %rsi,0x48(%rsp)
  0x0000000002b109cf: mov    %rdi,0x40(%rsp)
  0x0000000002b109d4: mov    %r8,0x38(%rsp)
  0x0000000002b109d9: mov    %r9,0x30(%rsp)
  0x0000000002b109de: mov    %r10,0x28(%rsp)
  0x0000000002b109e3: mov    %r11,0x20(%rsp)
  0x0000000002b109e8: mov    %r12,0x18(%rsp)
  0x0000000002b109ed: mov    %r13,0x10(%rsp)
  0x0000000002b109f2: mov    %r14,0x8(%rsp)
  0x0000000002b109f7: mov    %r15,(%rsp)
  0x0000000002b109fb: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b10a05: movabs $0x2b109a5,%rdx    ;   {internal_word}
  0x0000000002b10a0f: mov    %rsp,%r8
  0x0000000002b10a12: and    $0xfffffffffffffff0,%rsp
  0x0000000002b10a16: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b10a1b: hlt    
[Deopt Handler Code]
  0x0000000002b10a1c: movabs $0x2b10a1c,%r10    ;   {section_word}
  0x0000000002b10a26: push   %r10
  0x0000000002b10a28: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b10a2d: hlt    
  0x0000000002b10a2e: hlt    
  0x0000000002b10a2f: hlt    
<nmethod compile_id='17' compiler='C1' level='1' entry='0x0000000002b10920' size='680' address='0x0000000002b107d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='514' iicount='514' stamp='0.464'/>
<writer thread='53496'/>
<task_queued compile_id='18' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='640' iicount='640' level='3' stamp='0.464' comment='tiered' hot_count='640'/>
<task_queued compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1536' backedge_count='1021' iicount='1536' level='3' stamp='0.464' comment='tiered' hot_count='1536'/>
<task_queued compile_id='20' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1605' backedge_count='104448' iicount='1605' osr_bci='37' stamp='0.465' comment='tiered' hot_count='104448'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b13a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002b13ba0: mov    0x8(%rdx),%r10d
  0x0000000002b13ba4: shl    $0x3,%r10
  0x0000000002b13ba8: cmp    %rax,%r10
  0x0000000002b13bab: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b13bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b13bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b13bc0: mov    %eax,-0x6000(%rsp)
  0x0000000002b13bc7: push   %rbp
  0x0000000002b13bc8: sub    $0x60,%rsp
  0x0000000002b13bcc: movabs $0x1b81c988,%rsi   ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13bd6: mov    0xdc(%rsi),%edi
  0x0000000002b13bdc: add    $0x8,%edi
  0x0000000002b13bdf: mov    %edi,0xdc(%rsi)
  0x0000000002b13be5: movabs $0x1b708120,%rsi   ;   {metadata({method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13bef: and    $0x1ff8,%edi
  0x0000000002b13bf5: cmp    $0x0,%edi
  0x0000000002b13bf8: je     0x0000000002b13f5a  ;*aload_0
                                                ; - java.util.LinkedHashMap::get@0

  0x0000000002b13bfe: movabs $0x1b81c988,%rsi   ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13c08: addq   $0x1,0x108(%rsi)
  0x0000000002b13c10: movabs $0x1b772758,%rsi   ;   {metadata(method data for {method} {0x000000001b671228} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b13c1a: mov    0xdc(%rsi),%edi
  0x0000000002b13c20: add    $0x8,%edi
  0x0000000002b13c23: mov    %edi,0xdc(%rsi)
  0x0000000002b13c29: movabs $0x1b671220,%rsi   ;   {metadata({method} {0x000000001b671228} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b13c33: and    $0x7ffff8,%edi
  0x0000000002b13c39: cmp    $0x0,%edi
  0x0000000002b13c3c: je     0x0000000002b13f71
  0x0000000002b13c42: cmp    $0x0,%r8
  0x0000000002b13c46: movabs $0x1b772758,%rsi   ;   {metadata(method data for {method} {0x000000001b671228} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b13c50: movabs $0x108,%rdi
  0x0000000002b13c5a: jne    0x0000000002b13c6a
  0x0000000002b13c60: movabs $0x118,%rdi
  0x0000000002b13c6a: mov    (%rsi,%rdi,1),%rbx
  0x0000000002b13c6e: lea    0x1(%rbx),%rbx
  0x0000000002b13c72: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002b13c76: jne    0x0000000002b13ca0  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1
                                                ; - java.util.LinkedHashMap::get@2

  0x0000000002b13c7c: movabs $0x1b772758,%rsi   ;   {metadata(method data for {method} {0x000000001b671228} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b13c86: incl   0x128(%rsi)
  0x0000000002b13c8c: mov    $0x0,%esi
  0x0000000002b13c91: mov    %r8,0x48(%rsp)
  0x0000000002b13c96: mov    %rdx,0x40(%rsp)
  0x0000000002b13c9b: jmpq   0x0000000002b13d61  ;*goto
                                                ; - java.util.HashMap::hash@5
                                                ; - java.util.LinkedHashMap::get@2

  0x0000000002b13ca0: mov    %rdx,0x40(%rsp)
  0x0000000002b13ca5: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002b13f88
  0x0000000002b13ca8: mov    %r8,%rsi
  0x0000000002b13cab: movabs $0x1b772758,%rdi   ;   {metadata(method data for {method} {0x000000001b671228} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002b13cb5: mov    0x8(%rsi),%esi
  0x0000000002b13cb8: shl    $0x3,%rsi
  0x0000000002b13cbc: cmp    0x148(%rdi),%rsi
  0x0000000002b13cc3: jne    0x0000000002b13cd2
  0x0000000002b13cc5: addq   $0x1,0x150(%rdi)
  0x0000000002b13ccd: jmpq   0x0000000002b13d38
  0x0000000002b13cd2: cmp    0x158(%rdi),%rsi
  0x0000000002b13cd9: jne    0x0000000002b13ce8
  0x0000000002b13cdb: addq   $0x1,0x160(%rdi)
  0x0000000002b13ce3: jmpq   0x0000000002b13d38
  0x0000000002b13ce8: cmpq   $0x0,0x148(%rdi)
  0x0000000002b13cf3: jne    0x0000000002b13d0c
  0x0000000002b13cf5: mov    %rsi,0x148(%rdi)
  0x0000000002b13cfc: movq   $0x1,0x150(%rdi)
  0x0000000002b13d07: jmpq   0x0000000002b13d38
  0x0000000002b13d0c: cmpq   $0x0,0x158(%rdi)
  0x0000000002b13d17: jne    0x0000000002b13d30
  0x0000000002b13d19: mov    %rsi,0x158(%rdi)
  0x0000000002b13d20: movq   $0x1,0x160(%rdi)
  0x0000000002b13d2b: jmpq   0x0000000002b13d38
  0x0000000002b13d30: addq   $0x1,0x140(%rdi)
  0x0000000002b13d38: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.LinkedHashMap::get@2

  0x0000000002b13d3b: mov    %r8,0x48(%rsp)
  0x0000000002b13d40: nop
  0x0000000002b13d41: nop
  0x0000000002b13d42: nop
  0x0000000002b13d43: nop
  0x0000000002b13d44: nop
  0x0000000002b13d45: movabs $0xffffffffffffffff,%rax
  0x0000000002b13d4f: callq  0x0000000002a463e0  ; OopMap{[72]=Oop [64]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.LinkedHashMap::get@2
                                                ;   {virtual_call}
  0x0000000002b13d54: mov    %rax,%r8
  0x0000000002b13d57: shr    $0x10,%r8d
  0x0000000002b13d5b: xor    %rax,%r8
  0x0000000002b13d5e: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19
                                                ; - java.util.LinkedHashMap::get@2

  0x0000000002b13d61: mov    0x48(%rsp),%r9
  0x0000000002b13d66: mov    0x40(%rsp),%rdx
  0x0000000002b13d6b: movabs $0x1b81c988,%r8    ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13d75: mov    0x8(%rdx),%edx
  0x0000000002b13d78: shl    $0x3,%rdx
  0x0000000002b13d7c: cmp    0x120(%r8),%rdx
  0x0000000002b13d83: jne    0x0000000002b13d92
  0x0000000002b13d85: addq   $0x1,0x128(%r8)
  0x0000000002b13d8d: jmpq   0x0000000002b13df8
  0x0000000002b13d92: cmp    0x130(%r8),%rdx
  0x0000000002b13d99: jne    0x0000000002b13da8
  0x0000000002b13d9b: addq   $0x1,0x138(%r8)
  0x0000000002b13da3: jmpq   0x0000000002b13df8
  0x0000000002b13da8: cmpq   $0x0,0x120(%r8)
  0x0000000002b13db3: jne    0x0000000002b13dcc
  0x0000000002b13db5: mov    %rdx,0x120(%r8)
  0x0000000002b13dbc: movq   $0x1,0x128(%r8)
  0x0000000002b13dc7: jmpq   0x0000000002b13df8
  0x0000000002b13dcc: cmpq   $0x0,0x130(%r8)
  0x0000000002b13dd7: jne    0x0000000002b13df0
  0x0000000002b13dd9: mov    %rdx,0x130(%r8)
  0x0000000002b13de0: movq   $0x1,0x138(%r8)
  0x0000000002b13deb: jmpq   0x0000000002b13df8
  0x0000000002b13df0: addq   $0x1,0x118(%r8)
  0x0000000002b13df8: mov    %rsi,%r8
  0x0000000002b13dfb: mov    0x40(%rsp),%rdx    ;*invokevirtual getNode
                                                ; - java.util.LinkedHashMap::get@6

  0x0000000002b13e00: nop
  0x0000000002b13e01: nop
  0x0000000002b13e02: nop
  0x0000000002b13e03: nop
  0x0000000002b13e04: nop
  0x0000000002b13e05: nop
  0x0000000002b13e06: nop
  0x0000000002b13e07: callq  0x0000000002a461a0  ; OopMap{[64]=Oop off=620}
                                                ;*invokevirtual getNode
                                                ; - java.util.LinkedHashMap::get@6
                                                ;   {optimized virtual_call}
  0x0000000002b13e0c: cmp    $0x0,%rax
  0x0000000002b13e10: movabs $0x1b81c988,%r8    ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13e1a: movabs $0x148,%rdx
  0x0000000002b13e24: jne    0x0000000002b13e34
  0x0000000002b13e2a: movabs $0x158,%rdx
  0x0000000002b13e34: mov    (%r8,%rdx,1),%rsi
  0x0000000002b13e38: lea    0x1(%rsi),%rsi
  0x0000000002b13e3c: mov    %rsi,(%r8,%rdx,1)
  0x0000000002b13e40: je     0x0000000002b13f44  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::get@11

  0x0000000002b13e46: mov    0x40(%rsp),%rdx
  0x0000000002b13e4b: movsbl 0x2c(%rdx),%r8d    ;*getfield accessOrder
                                                ; - java.util.LinkedHashMap::get@17

  0x0000000002b13e50: cmp    $0x0,%r8d
  0x0000000002b13e54: movabs $0x1b81c988,%r8    ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13e5e: movabs $0x168,%rsi
  0x0000000002b13e68: je     0x0000000002b13e78
  0x0000000002b13e6e: movabs $0x178,%rsi
  0x0000000002b13e78: mov    (%r8,%rsi,1),%rdi
  0x0000000002b13e7c: lea    0x1(%rdi),%rdi
  0x0000000002b13e80: mov    %rdi,(%r8,%rsi,1)
  0x0000000002b13e84: je     0x0000000002b13f31  ;*ifeq
                                                ; - java.util.LinkedHashMap::get@20

  0x0000000002b13e8a: mov    %rdx,%r8
  0x0000000002b13e8d: movabs $0x1b81c988,%rsi   ;   {metadata(method data for {method} {0x000000001b708128} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002b13e97: mov    0x8(%r8),%r8d
  0x0000000002b13e9b: shl    $0x3,%r8
  0x0000000002b13e9f: cmp    0x190(%rsi),%r8
  0x0000000002b13ea6: jne    0x0000000002b13eb5
  0x0000000002b13ea8: addq   $0x1,0x198(%rsi)
  0x0000000002b13eb0: jmpq   0x0000000002b13f1b
  0x0000000002b13eb5: cmp    0x1a0(%rsi),%r8
  0x0000000002b13ebc: jne    0x0000000002b13ecb
  0x0000000002b13ebe: addq   $0x1,0x1a8(%rsi)
  0x0000000002b13ec6: jmpq   0x0000000002b13f1b
  0x0000000002b13ecb: cmpq   $0x0,0x190(%rsi)
  0x0000000002b13ed6: jne    0x0000000002b13eef
  0x0000000002b13ed8: mov    %r8,0x190(%rsi)
  0x0000000002b13edf: movq   $0x1,0x198(%rsi)
  0x0000000002b13eea: jmpq   0x0000000002b13f1b
  0x0000000002b13eef: cmpq   $0x0,0x1a0(%rsi)
  0x0000000002b13efa: jne    0x0000000002b13f13
  0x0000000002b13efc: mov    %r8,0x1a0(%rsi)
  0x0000000002b13f03: movq   $0x1,0x1a8(%rsi)
  0x0000000002b13f0e: jmpq   0x0000000002b13f1b
  0x0000000002b13f13: addq   $0x1,0x188(%rsi)
  0x0000000002b13f1b: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.LinkedHashMap::get@25

  0x0000000002b13f1e: mov    %rax,0x50(%rsp)
  0x0000000002b13f23: nop
  0x0000000002b13f24: nop
  0x0000000002b13f25: nop
  0x0000000002b13f26: nop
  0x0000000002b13f27: callq  0x0000000002a461a0  ; OopMap{[80]=Oop off=908}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.LinkedHashMap::get@25
                                                ;   {optimized virtual_call}
  0x0000000002b13f2c: mov    0x50(%rsp),%rax
  0x0000000002b13f31: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x0000000002b13f8d
  0x0000000002b13f34: shl    $0x3,%rax          ;*getfield value
                                                ; - java.util.LinkedHashMap::get@29

  0x0000000002b13f38: add    $0x60,%rsp
  0x0000000002b13f3c: pop    %rbp
  0x0000000002b13f3d: test   %eax,-0x1f23e43(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b13f43: retq                      ;*areturn
                                                ; - java.util.LinkedHashMap::get@32

  0x0000000002b13f44: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b13f4e: add    $0x60,%rsp
  0x0000000002b13f52: pop    %rbp
  0x0000000002b13f53: test   %eax,-0x1f23e59(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b13f59: retq   
  0x0000000002b13f5a: mov    %rsi,0x8(%rsp)
  0x0000000002b13f5f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b13f67: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=972}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::get@-1
                                                ;   {runtime_call}
  0x0000000002b13f6c: jmpq   0x0000000002b13bfe
  0x0000000002b13f71: mov    %rsi,0x8(%rsp)
  0x0000000002b13f76: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b13f7e: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=995}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1
                                                ; - java.util.LinkedHashMap::get@2
                                                ;   {runtime_call}
  0x0000000002b13f83: jmpq   0x0000000002b13c42
  0x0000000002b13f88: callq  0x0000000002afc580  ; OopMap{r8=Oop [64]=Oop off=1005}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.LinkedHashMap::get@2
                                                ;   {runtime_call}
  0x0000000002b13f8d: callq  0x0000000002afc580  ; OopMap{off=1010}
                                                ;*getfield value
                                                ; - java.util.LinkedHashMap::get@29
                                                ;   {runtime_call}
  0x0000000002b13f92: nop
  0x0000000002b13f93: nop
  0x0000000002b13f94: mov    0x2a8(%r15),%rax
  0x0000000002b13f9b: movabs $0x0,%r10
  0x0000000002b13fa5: mov    %r10,0x2a8(%r15)
  0x0000000002b13fac: movabs $0x0,%r10
  0x0000000002b13fb6: mov    %r10,0x2b0(%r15)
  0x0000000002b13fbd: add    $0x60,%rsp
  0x0000000002b13fc1: pop    %rbp
  0x0000000002b13fc2: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b13fc7: hlt    
  0x0000000002b13fc8: hlt    
  0x0000000002b13fc9: hlt    
  0x0000000002b13fca: hlt    
  0x0000000002b13fcb: hlt    
  0x0000000002b13fcc: hlt    
  0x0000000002b13fcd: hlt    
  0x0000000002b13fce: hlt    
  0x0000000002b13fcf: hlt    
  0x0000000002b13fd0: hlt    
  0x0000000002b13fd1: hlt    
  0x0000000002b13fd2: hlt    
  0x0000000002b13fd3: hlt    
  0x0000000002b13fd4: hlt    
  0x0000000002b13fd5: hlt    
  0x0000000002b13fd6: hlt    
  0x0000000002b13fd7: hlt    
  0x0000000002b13fd8: hlt    
  0x0000000002b13fd9: hlt    
  0x0000000002b13fda: hlt    
  0x0000000002b13fdb: hlt    
  0x0000000002b13fdc: hlt    
  0x0000000002b13fdd: hlt    
  0x0000000002b13fde: hlt    
  0x0000000002b13fdf: hlt    
[Stub Code]
  0x0000000002b13fe0: nop                       ;   {no_reloc}
  0x0000000002b13fe1: nop
  0x0000000002b13fe2: nop
  0x0000000002b13fe3: nop
  0x0000000002b13fe4: nop
  0x0000000002b13fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b13fef: jmpq   0x0000000002b13fef  ;   {runtime_call}
  0x0000000002b13ff4: nop
  0x0000000002b13ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b13fff: jmpq   0x0000000002b13fff  ;   {runtime_call}
  0x0000000002b14004: nop
  0x0000000002b14005: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1400f: jmpq   0x0000000002b1400f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b14014: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b14019: mov    %rsp,-0x28(%rsp)
  0x0000000002b1401e: sub    $0x80,%rsp
  0x0000000002b14025: mov    %rax,0x78(%rsp)
  0x0000000002b1402a: mov    %rcx,0x70(%rsp)
  0x0000000002b1402f: mov    %rdx,0x68(%rsp)
  0x0000000002b14034: mov    %rbx,0x60(%rsp)
  0x0000000002b14039: mov    %rbp,0x50(%rsp)
  0x0000000002b1403e: mov    %rsi,0x48(%rsp)
  0x0000000002b14043: mov    %rdi,0x40(%rsp)
  0x0000000002b14048: mov    %r8,0x38(%rsp)
  0x0000000002b1404d: mov    %r9,0x30(%rsp)
  0x0000000002b14052: mov    %r10,0x28(%rsp)
  0x0000000002b14057: mov    %r11,0x20(%rsp)
  0x0000000002b1405c: mov    %r12,0x18(%rsp)
  0x0000000002b14061: mov    %r13,0x10(%rsp)
  0x0000000002b14066: mov    %r14,0x8(%rsp)
  0x0000000002b1406b: mov    %r15,(%rsp)
  0x0000000002b1406f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b14079: movabs $0x2b14019,%rdx    ;   {internal_word}
  0x0000000002b14083: mov    %rsp,%r8
  0x0000000002b14086: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1408a: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1408f: hlt    
[Deopt Handler Code]
  0x0000000002b14090: movabs $0x2b14090,%r10    ;   {section_word}
  0x0000000002b1409a: push   %r10
  0x0000000002b1409c: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b140a1: hlt    
  0x0000000002b140a2: hlt    
  0x0000000002b140a3: hlt    
  0x0000000002b140a4: hlt    
  0x0000000002b140a5: hlt    
  0x0000000002b140a6: hlt    
  0x0000000002b140a7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x0000000002b13ba0' size='2288' address='0x0000000002b13a10' relocation_offset='288' insts_offset='400' stub_offset='1488' scopes_data_offset='1712' scopes_pcs_offset='1920' dependencies_offset='2256' nul_chk_table_offset='2264' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='513' iicount='513' stamp='0.474'/>
<writer thread='53496'/>
<task_queued compile_id='21' method='java/io/File isInvalid ()Z' bytes='47' count='768' iicount='768' level='3' stamp='0.474' comment='tiered' hot_count='768'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b132d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b13440: mov    0x8(%rdx),%r10d
  0x0000000002b13444: shl    $0x3,%r10
  0x0000000002b13448: cmp    %rax,%r10
  0x0000000002b1344b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b13451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1345c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b13460: mov    %eax,-0x6000(%rsp)
  0x0000000002b13467: push   %rbp
  0x0000000002b13468: sub    $0x30,%rsp
  0x0000000002b1346c: movabs $0x1b7b50e8,%rax   ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b13476: mov    0xdc(%rax),%esi
  0x0000000002b1347c: add    $0x8,%esi
  0x0000000002b1347f: mov    %esi,0xdc(%rax)
  0x0000000002b13485: movabs $0x1b594b38,%rax   ;   {metadata({method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1348f: and    $0x1ff8,%esi
  0x0000000002b13495: cmp    $0x0,%esi
  0x0000000002b13498: je     0x0000000002b13655  ;*aload_0
                                                ; - java.lang.String::startsWith@0

  0x0000000002b1349e: mov    0xc(%rdx),%eax
  0x0000000002b134a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1

  0x0000000002b134a5: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002b1366c
  0x0000000002b134a9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9

  0x0000000002b134ad: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21
                                                ; implicit exception: dispatches to 0x0000000002b13671
  0x0000000002b134b0: cmp    $0x0,%r9d
  0x0000000002b134b4: movabs $0x1b7b50e8,%rbx   ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b134be: movabs $0x108,%rdx
  0x0000000002b134c8: jl     0x0000000002b134d8
  0x0000000002b134ce: movabs $0x118,%rdx
  0x0000000002b134d8: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b134dc: lea    0x1(%rcx),%rcx
  0x0000000002b134e0: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b134e4: jl     0x0000000002b13622  ;*iflt
                                                ; - java.lang.String::startsWith@25

  0x0000000002b134ea: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33
                                                ; implicit exception: dispatches to 0x0000000002b13676
  0x0000000002b134ed: sub    %edi,%ebx
  0x0000000002b134ef: cmp    %ebx,%r9d
  0x0000000002b134f2: movabs $0x1b7b50e8,%rbx   ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b134fc: movabs $0x128,%rdx
  0x0000000002b13506: jle    0x0000000002b13516
  0x0000000002b1350c: movabs $0x138,%rdx
  0x0000000002b13516: mov    (%rbx,%rdx,1),%rcx
  0x0000000002b1351a: lea    0x1(%rcx),%rcx
  0x0000000002b1351e: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002b13522: jg     0x0000000002b13622  ;*if_icmple
                                                ; - java.lang.String::startsWith@37

  0x0000000002b13528: mov    $0x0,%ebx
  0x0000000002b1352d: jmpq   0x0000000002b135e2  ;*iinc
                                                ; - java.lang.String::startsWith@42

  0x0000000002b13532: nopw   0x0(%rax,%rax,1)
  0x0000000002b13538: mov    %r9,%rdx
  0x0000000002b1353b: inc    %edx
  0x0000000002b1353d: movslq %r9d,%rcx
  0x0000000002b13540: cmp    0xc(%rax),%r9d
  0x0000000002b13544: jae    0x0000000002b1367b
  0x0000000002b1354a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56

  0x0000000002b1354f: mov    %rbx,%r8
  0x0000000002b13552: inc    %r8d
  0x0000000002b13555: movslq %ebx,%r9
  0x0000000002b13558: cmp    0xc(%rsi),%ebx
  0x0000000002b1355b: jae    0x0000000002b13684
  0x0000000002b13561: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64

  0x0000000002b13567: movabs $0x1b7b50e8,%r9    ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b13571: mov    0xe0(%r9),%r11d
  0x0000000002b13578: add    $0x8,%r11d
  0x0000000002b1357c: mov    %r11d,0xe0(%r9)
  0x0000000002b13583: movabs $0x1b594b38,%r9    ;   {metadata({method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1358d: and    $0xfff8,%r11d
  0x0000000002b13594: cmp    $0x0,%r11d
  0x0000000002b13598: je     0x0000000002b1368d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65

  0x0000000002b1359e: test   %eax,-0x1f234a4(%rip)        # 0x0000000000bf0100
                                                ;   {poll}
  0x0000000002b135a4: cmp    %ebx,%ecx
  0x0000000002b135a6: movabs $0x1b7b50e8,%rbx   ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b135b0: movabs $0x168,%rcx
  0x0000000002b135ba: je     0x0000000002b135ca
  0x0000000002b135c0: movabs $0x178,%rcx
  0x0000000002b135ca: mov    (%rbx,%rcx,1),%r9
  0x0000000002b135ce: lea    0x1(%r9),%r9
  0x0000000002b135d2: mov    %r9,(%rbx,%rcx,1)
  0x0000000002b135d6: jne    0x0000000002b13633  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65

  0x0000000002b135dc: mov    %r8,%rbx
  0x0000000002b135df: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42

  0x0000000002b135e2: dec    %edi
  0x0000000002b135e4: cmp    $0x0,%edi
  0x0000000002b135e7: movabs $0x1b7b50e8,%rdx   ;   {metadata(method data for {method} {0x000000001b594b40} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b135f1: movabs $0x148,%rcx
  0x0000000002b135fb: jl     0x0000000002b1360b
  0x0000000002b13601: movabs $0x158,%rcx
  0x0000000002b1360b: mov    (%rdx,%rcx,1),%r8
  0x0000000002b1360f: lea    0x1(%r8),%r8
  0x0000000002b13613: mov    %r8,(%rdx,%rcx,1)
  0x0000000002b13617: jl     0x0000000002b13644
  0x0000000002b1361d: jmpq   0x0000000002b13538  ;*iflt
                                                ; - java.lang.String::startsWith@47

  0x0000000002b13622: mov    $0x0,%eax
  0x0000000002b13627: add    $0x30,%rsp
  0x0000000002b1362b: pop    %rbp
  0x0000000002b1362c: test   %eax,-0x1f23532(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b13632: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41

  0x0000000002b13633: mov    $0x0,%eax
  0x0000000002b13638: add    $0x30,%rsp
  0x0000000002b1363c: pop    %rbp
  0x0000000002b1363d: test   %eax,-0x1f23543(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b13643: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69

  0x0000000002b13644: mov    $0x1,%eax
  0x0000000002b13649: add    $0x30,%rsp
  0x0000000002b1364d: pop    %rbp
  0x0000000002b1364e: test   %eax,-0x1f23554(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b13654: retq   
  0x0000000002b13655: mov    %rax,0x8(%rsp)
  0x0000000002b1365a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b13662: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1
                                                ;   {runtime_call}
  0x0000000002b13667: jmpq   0x0000000002b1349e
  0x0000000002b1366c: callq  0x0000000002afc580  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9
                                                ;   {runtime_call}
  0x0000000002b13671: callq  0x0000000002afc580  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21
                                                ;   {runtime_call}
  0x0000000002b13676: callq  0x0000000002afc580  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33
                                                ;   {runtime_call}
  0x0000000002b1367b: mov    %r9,(%rsp)
  0x0000000002b1367f: callq  0x0000000002a6eb00  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56
                                                ;   {runtime_call}
  0x0000000002b13684: mov    %rbx,(%rsp)
  0x0000000002b13688: callq  0x0000000002a6eb00  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64
                                                ;   {runtime_call}
  0x0000000002b1368d: mov    %r9,0x8(%rsp)
  0x0000000002b13692: movq   $0x41,(%rsp)
  0x0000000002b1369a: callq  0x0000000002b01ae0  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65
                                                ;   {runtime_call}
  0x0000000002b1369f: jmpq   0x0000000002b1359e
  0x0000000002b136a4: nop
  0x0000000002b136a5: nop
  0x0000000002b136a6: mov    0x2a8(%r15),%rax
  0x0000000002b136ad: movabs $0x0,%r10
  0x0000000002b136b7: mov    %r10,0x2a8(%r15)
  0x0000000002b136be: movabs $0x0,%r10
  0x0000000002b136c8: mov    %r10,0x2b0(%r15)
  0x0000000002b136cf: add    $0x30,%rsp
  0x0000000002b136d3: pop    %rbp
  0x0000000002b136d4: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b136d9: hlt    
  0x0000000002b136da: hlt    
  0x0000000002b136db: hlt    
  0x0000000002b136dc: hlt    
  0x0000000002b136dd: hlt    
  0x0000000002b136de: hlt    
  0x0000000002b136df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b136e0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b136e5: mov    %rsp,-0x28(%rsp)
  0x0000000002b136ea: sub    $0x80,%rsp
  0x0000000002b136f1: mov    %rax,0x78(%rsp)
  0x0000000002b136f6: mov    %rcx,0x70(%rsp)
  0x0000000002b136fb: mov    %rdx,0x68(%rsp)
  0x0000000002b13700: mov    %rbx,0x60(%rsp)
  0x0000000002b13705: mov    %rbp,0x50(%rsp)
  0x0000000002b1370a: mov    %rsi,0x48(%rsp)
  0x0000000002b1370f: mov    %rdi,0x40(%rsp)
  0x0000000002b13714: mov    %r8,0x38(%rsp)
  0x0000000002b13719: mov    %r9,0x30(%rsp)
  0x0000000002b1371e: mov    %r10,0x28(%rsp)
  0x0000000002b13723: mov    %r11,0x20(%rsp)
  0x0000000002b13728: mov    %r12,0x18(%rsp)
  0x0000000002b1372d: mov    %r13,0x10(%rsp)
  0x0000000002b13732: mov    %r14,0x8(%rsp)
  0x0000000002b13737: mov    %r15,(%rsp)
  0x0000000002b1373b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b13745: movabs $0x2b136e5,%rdx    ;   {internal_word}
  0x0000000002b1374f: mov    %rsp,%r8
  0x0000000002b13752: and    $0xfffffffffffffff0,%rsp
  0x0000000002b13756: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1375b: hlt    
[Deopt Handler Code]
  0x0000000002b1375c: movabs $0x2b1375c,%r10    ;   {section_word}
  0x0000000002b13766: push   %r10
  0x0000000002b13768: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1376d: hlt    
  0x0000000002b1376e: hlt    
  0x0000000002b1376f: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002b13440' size='1824' address='0x0000000002b132d0' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1579' backedge_count='1058' iicount='1579' stamp='0.481'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b11790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b594e90} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x0000000002b118e0: int3   
  0x0000000002b118e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b118ec: data16 data16 xchg %ax,%ax
  0x0000000002b118f0: mov    %eax,-0x6000(%rsp)
  0x0000000002b118f7: push   %rbp
  0x0000000002b118f8: sub    $0x50,%rsp
  0x0000000002b118fc: mov    (%rdx),%ebx
  0x0000000002b118fe: mov    0x8(%rdx),%r14
  0x0000000002b11902: mov    0x20(%rdx),%r13d
  0x0000000002b11906: mov    0x10(%rdx),%ebp
  0x0000000002b11909: mov    %rdx,%rcx
  0x0000000002b1190c: movabs $0x653bd850,%r10
  0x0000000002b11916: callq  *%r10
  0x0000000002b11919: test   %r14,%r14
  0x0000000002b1191c: je     0x0000000002b11a63
  0x0000000002b11922: mov    0x8(%r14),%r11d
  0x0000000002b11926: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000002b1192d: jne    0x0000000002b11aa1  ;*iload
                                                ; - java.lang.String::indexOf@37

  0x0000000002b11933: mov    %r14,%r10
  0x0000000002b11936: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b1193a: cmp    %ebp,%ebx
  0x0000000002b1193c: jge    0x0000000002b11a2e  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b11942: mov    %ebx,%r11d
  0x0000000002b11945: inc    %r11d
  0x0000000002b11948: xor    %r8d,%r8d
  0x0000000002b1194b: cmp    %r8d,%r11d
  0x0000000002b1194e: cmovl  %r8d,%r11d
  0x0000000002b11952: cmp    %ebp,%r11d
  0x0000000002b11955: cmovg  %ebp,%r11d
  0x0000000002b11959: test   %r14,%r14
  0x0000000002b1195c: je     0x0000000002b11a71
  0x0000000002b11962: mov    (%r10),%r9d
  0x0000000002b11965: cmp    %r9d,%ebx
  0x0000000002b11968: jae    0x0000000002b11a81  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b1196e: movzwl 0x10(%r14,%rbx,2),%r8d
  0x0000000002b11974: cmp    %r13d,%r8d
  0x0000000002b11977: je     0x0000000002b11a33  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b1197d: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b1197f: cmp    %r11d,%ebx
  0x0000000002b11982: jl     0x0000000002b11959  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b11984: cmp    %r9d,%ebp
  0x0000000002b11987: mov    %ebp,%r11d
  0x0000000002b1198a: cmovg  %r9d,%r11d
  0x0000000002b1198e: mov    %r11d,%edi
  0x0000000002b11991: add    $0xfffffff9,%edi
  0x0000000002b11994: mov    $0x80000000,%r8d
  0x0000000002b1199a: cmp    %edi,%r11d
  0x0000000002b1199d: cmovl  %r8d,%edi
  0x0000000002b119a1: cmp    %edi,%ebx
  0x0000000002b119a3: jge    0x0000000002b11a12
  0x0000000002b119a5: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b119b0: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119b6: cmp    %r13d,%r11d
  0x0000000002b119b9: je     0x0000000002b11a33  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119bb: movslq %ebx,%r10
  0x0000000002b119be: movzwl 0x12(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119c4: cmp    %r13d,%r11d
  0x0000000002b119c7: je     0x0000000002b11a41  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119c9: movzwl 0x14(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119cf: cmp    %r13d,%r11d
  0x0000000002b119d2: je     0x0000000002b11a45  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119d4: movzwl 0x16(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119da: cmp    %r13d,%r11d
  0x0000000002b119dd: je     0x0000000002b11a4a  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119df: movzwl 0x18(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119e5: cmp    %r13d,%r11d
  0x0000000002b119e8: je     0x0000000002b11a4f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119ea: movzwl 0x1a(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119f0: cmp    %r13d,%r11d
  0x0000000002b119f3: je     0x0000000002b11a54  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b119f5: movzwl 0x1c(%r14,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b119fb: cmp    %r13d,%r11d
  0x0000000002b119fe: je     0x0000000002b11a59  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b11a00: movzwl 0x1e(%r14,%r10,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b11a06: cmp    %r13d,%r10d
  0x0000000002b11a09: je     0x0000000002b11a5e  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b11a0b: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b11a0e: cmp    %edi,%ebx
  0x0000000002b11a10: jl     0x0000000002b119b0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b11a12: cmp    %ebp,%ebx
  0x0000000002b11a14: jge    0x0000000002b11a2e
  0x0000000002b11a16: xchg   %ax,%ax
  0x0000000002b11a18: cmp    %r9d,%ebx
  0x0000000002b11a1b: jae    0x0000000002b11a87  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b11a1d: movzwl 0x10(%r14,%rbx,2),%r11d
  0x0000000002b11a23: cmp    %r13d,%r11d
  0x0000000002b11a26: je     0x0000000002b11a33  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b11a28: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b11a2a: cmp    %ebp,%ebx
  0x0000000002b11a2c: jl     0x0000000002b11a18  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b11a2e: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37

  0x0000000002b11a33: mov    %ebx,%eax
  0x0000000002b11a35: add    $0x50,%rsp
  0x0000000002b11a39: pop    %rbp
  0x0000000002b11a3a: test   %eax,-0x1f21a40(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b11a40: retq   
  0x0000000002b11a41: inc    %ebx
  0x0000000002b11a43: jmp    0x0000000002b11a33
  0x0000000002b11a45: add    $0x2,%ebx
  0x0000000002b11a48: jmp    0x0000000002b11a33
  0x0000000002b11a4a: add    $0x3,%ebx
  0x0000000002b11a4d: jmp    0x0000000002b11a33
  0x0000000002b11a4f: add    $0x4,%ebx
  0x0000000002b11a52: jmp    0x0000000002b11a33
  0x0000000002b11a54: add    $0x5,%ebx
  0x0000000002b11a57: jmp    0x0000000002b11a33
  0x0000000002b11a59: add    $0x6,%ebx
  0x0000000002b11a5c: jmp    0x0000000002b11a33
  0x0000000002b11a5e: add    $0x7,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b11a61: jmp    0x0000000002b11a33
  0x0000000002b11a63: xor    %r14d,%r14d
  0x0000000002b11a66: mov    $0xc,%r10d
  0x0000000002b11a6c: jmpq   0x0000000002b1193a
  0x0000000002b11a71: mov    $0xfffffff6,%edx
  0x0000000002b11a76: mov    %ebx,%ebp
  0x0000000002b11a78: data16 xchg %ax,%ax
  0x0000000002b11a7b: callq  0x0000000002a457a0  ; OopMap{off=416}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47
                                                ;   {runtime_call}
  0x0000000002b11a80: int3   
  0x0000000002b11a81: mov    %ebx,0x20(%rsp)
  0x0000000002b11a85: jmp    0x0000000002b11a8b
  0x0000000002b11a87: mov    %ebx,0x20(%rsp)
  0x0000000002b11a8b: mov    $0xffffffe4,%edx
  0x0000000002b11a90: mov    %r13d,0x24(%rsp)
  0x0000000002b11a95: mov    %r14,0x30(%rsp)
  0x0000000002b11a9a: nop
  0x0000000002b11a9b: callq  0x0000000002a457a0  ; OopMap{[48]=Oop off=448}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47
                                                ;   {runtime_call}
  0x0000000002b11aa0: int3   
  0x0000000002b11aa1: mov    $0xffffff9d,%edx
  0x0000000002b11aa6: mov    %r13d,0x20(%rsp)
  0x0000000002b11aab: mov    %r14,0x28(%rsp)
  0x0000000002b11ab0: mov    %ebx,0x24(%rsp)
  0x0000000002b11ab4: data16 xchg %ax,%ax
  0x0000000002b11ab7: callq  0x0000000002a457a0  ; OopMap{[40]=Oop off=476}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37
                                                ;   {runtime_call}
  0x0000000002b11abc: int3                      ;*iload
                                                ; - java.lang.String::indexOf@37

  0x0000000002b11abd: hlt    
  0x0000000002b11abe: hlt    
  0x0000000002b11abf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b11ac0: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b11ac5: callq  0x0000000002b11aca
  0x0000000002b11aca: subq   $0x5,(%rsp)
  0x0000000002b11acf: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b11ad4: hlt    
  0x0000000002b11ad5: hlt    
  0x0000000002b11ad6: hlt    
  0x0000000002b11ad7: hlt    
<nmethod compile_id='20' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002b118e0' size='1568' address='0x0000000002b11790' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='856' scopes_pcs_offset='968' dependencies_offset='1560' method='java/lang/String indexOf (II)I' bytes='70' count='1608' backedge_count='104571' iicount='1608' stamp='0.487'/>
<writer thread='53496'/>
<task_queued compile_id='22' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='32512' iicount='32512' stamp='0.487' comment='tiered' hot_count='32512'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b12e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b13000: mov    0x8(%rdx),%r10d
  0x0000000002b13004: shl    $0x3,%r10
  0x0000000002b13008: cmp    %rax,%r10
  0x0000000002b1300b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b13011: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1301c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b13020: mov    %eax,-0x6000(%rsp)
  0x0000000002b13027: push   %rbp
  0x0000000002b13028: sub    $0x30,%rsp
  0x0000000002b1302c: movabs $0x1b7db328,%r9    ;   {metadata(method data for {method} {0x000000001b594bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b13036: mov    0xdc(%r9),%esi
  0x0000000002b1303d: add    $0x8,%esi
  0x0000000002b13040: mov    %esi,0xdc(%r9)
  0x0000000002b13047: movabs $0x1b594bc8,%r9    ;   {metadata({method} {0x000000001b594bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b13051: and    $0x1ff8,%esi
  0x0000000002b13057: cmp    $0x0,%esi
  0x0000000002b1305a: je     0x0000000002b1310b  ;*aload_0
                                                ; - java.lang.String::startsWith@0

  0x0000000002b13060: mov    %rdx,%r9
  0x0000000002b13063: movabs $0x1b7db328,%rsi   ;   {metadata(method data for {method} {0x000000001b594bd0} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1306d: mov    0x8(%r9),%r9d
  0x0000000002b13071: shl    $0x3,%r9
  0x0000000002b13075: cmp    0x110(%rsi),%r9
  0x0000000002b1307c: jne    0x0000000002b1308b
  0x0000000002b1307e: addq   $0x1,0x118(%rsi)
  0x0000000002b13086: jmpq   0x0000000002b130f1
  0x0000000002b1308b: cmp    0x120(%rsi),%r9
  0x0000000002b13092: jne    0x0000000002b130a1
  0x0000000002b13094: addq   $0x1,0x128(%rsi)
  0x0000000002b1309c: jmpq   0x0000000002b130f1
  0x0000000002b130a1: cmpq   $0x0,0x110(%rsi)
  0x0000000002b130ac: jne    0x0000000002b130c5
  0x0000000002b130ae: mov    %r9,0x110(%rsi)
  0x0000000002b130b5: movq   $0x1,0x118(%rsi)
  0x0000000002b130c0: jmpq   0x0000000002b130f1
  0x0000000002b130c5: cmpq   $0x0,0x120(%rsi)
  0x0000000002b130d0: jne    0x0000000002b130e9
  0x0000000002b130d2: mov    %r9,0x120(%rsi)
  0x0000000002b130d9: movq   $0x1,0x128(%rsi)
  0x0000000002b130e4: jmpq   0x0000000002b130f1
  0x0000000002b130e9: addq   $0x1,0x108(%rsi)
  0x0000000002b130f1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3

  0x0000000002b130f7: callq  0x0000000002a461a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3
                                                ;   {optimized virtual_call}
  0x0000000002b130fc: and    $0x1,%eax
  0x0000000002b130ff: add    $0x30,%rsp
  0x0000000002b13103: pop    %rbp
  0x0000000002b13104: test   %eax,-0x1f2300a(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1310a: retq   
  0x0000000002b1310b: mov    %r9,0x8(%rsp)
  0x0000000002b13110: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b13118: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1
                                                ;   {runtime_call}
  0x0000000002b1311d: jmpq   0x0000000002b13060
  0x0000000002b13122: nop
  0x0000000002b13123: nop
  0x0000000002b13124: mov    0x2a8(%r15),%rax
  0x0000000002b1312b: movabs $0x0,%r10
  0x0000000002b13135: mov    %r10,0x2a8(%r15)
  0x0000000002b1313c: movabs $0x0,%r10
  0x0000000002b13146: mov    %r10,0x2b0(%r15)
  0x0000000002b1314d: add    $0x30,%rsp
  0x0000000002b13151: pop    %rbp
  0x0000000002b13152: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b13157: hlt    
  0x0000000002b13158: hlt    
  0x0000000002b13159: hlt    
  0x0000000002b1315a: hlt    
  0x0000000002b1315b: hlt    
  0x0000000002b1315c: hlt    
  0x0000000002b1315d: hlt    
  0x0000000002b1315e: hlt    
  0x0000000002b1315f: hlt    
[Stub Code]
  0x0000000002b13160: nop                       ;   {no_reloc}
  0x0000000002b13161: nop
  0x0000000002b13162: nop
  0x0000000002b13163: nop
  0x0000000002b13164: nop
  0x0000000002b13165: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1316f: jmpq   0x0000000002b1316f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b13174: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b13179: mov    %rsp,-0x28(%rsp)
  0x0000000002b1317e: sub    $0x80,%rsp
  0x0000000002b13185: mov    %rax,0x78(%rsp)
  0x0000000002b1318a: mov    %rcx,0x70(%rsp)
  0x0000000002b1318f: mov    %rdx,0x68(%rsp)
  0x0000000002b13194: mov    %rbx,0x60(%rsp)
  0x0000000002b13199: mov    %rbp,0x50(%rsp)
  0x0000000002b1319e: mov    %rsi,0x48(%rsp)
  0x0000000002b131a3: mov    %rdi,0x40(%rsp)
  0x0000000002b131a8: mov    %r8,0x38(%rsp)
  0x0000000002b131ad: mov    %r9,0x30(%rsp)
  0x0000000002b131b2: mov    %r10,0x28(%rsp)
  0x0000000002b131b7: mov    %r11,0x20(%rsp)
  0x0000000002b131bc: mov    %r12,0x18(%rsp)
  0x0000000002b131c1: mov    %r13,0x10(%rsp)
  0x0000000002b131c6: mov    %r14,0x8(%rsp)
  0x0000000002b131cb: mov    %r15,(%rsp)
  0x0000000002b131cf: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b131d9: movabs $0x2b13179,%rdx    ;   {internal_word}
  0x0000000002b131e3: mov    %rsp,%r8
  0x0000000002b131e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b131ea: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b131ef: hlt    
[Deopt Handler Code]
  0x0000000002b131f0: movabs $0x2b131f0,%r10    ;   {section_word}
  0x0000000002b131fa: push   %r10
  0x0000000002b131fc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b13201: hlt    
  0x0000000002b13202: hlt    
  0x0000000002b13203: hlt    
  0x0000000002b13204: hlt    
  0x0000000002b13205: hlt    
  0x0000000002b13206: hlt    
  0x0000000002b13207: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002b13000' size='1040' address='0x0000000002b12e90' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='721' iicount='721' stamp='0.491'/>
<writer thread='53496'/>
<task_queued compile_id='23' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='35456' iicount='35456' stamp='0.491' comment='tiered' hot_count='35456'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b14490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b701648} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x0000000002b145c0: mov    0x8(%rdx),%r10d
  0x0000000002b145c4: shl    $0x3,%r10
  0x0000000002b145c8: cmp    %r10,%rax
  0x0000000002b145cb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b145d1: data16 xchg %ax,%ax
  0x0000000002b145d4: nopl   0x0(%rax,%rax,1)
  0x0000000002b145dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b145e0: sub    $0x18,%rsp
  0x0000000002b145e7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1

  0x0000000002b145ec: cmp    $0x5c,%r8d
  0x0000000002b145f0: je     0x0000000002b14606  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3

  0x0000000002b145f2: cmp    $0x2f,%r8d
  0x0000000002b145f6: je     0x0000000002b14606  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9

  0x0000000002b145f8: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13

  0x0000000002b145fa: add    $0x10,%rsp
  0x0000000002b145fe: pop    %rbp
  0x0000000002b145ff: test   %eax,-0x1f24605(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b14605: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12

  0x0000000002b14606: mov    $0x1,%eax
  0x0000000002b1460b: jmp    0x0000000002b145fa
  0x0000000002b1460d: hlt    
  0x0000000002b1460e: hlt    
  0x0000000002b1460f: hlt    
  0x0000000002b14610: hlt    
  0x0000000002b14611: hlt    
  0x0000000002b14612: hlt    
  0x0000000002b14613: hlt    
  0x0000000002b14614: hlt    
  0x0000000002b14615: hlt    
  0x0000000002b14616: hlt    
  0x0000000002b14617: hlt    
  0x0000000002b14618: hlt    
  0x0000000002b14619: hlt    
  0x0000000002b1461a: hlt    
  0x0000000002b1461b: hlt    
  0x0000000002b1461c: hlt    
  0x0000000002b1461d: hlt    
  0x0000000002b1461e: hlt    
  0x0000000002b1461f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b14620: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b14625: callq  0x0000000002b1462a
  0x0000000002b1462a: subq   $0x5,(%rsp)
  0x0000000002b1462f: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b14634: hlt    
  0x0000000002b14635: hlt    
  0x0000000002b14636: hlt    
  0x0000000002b14637: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x0000000002b145c0' size='584' address='0x0000000002b14490' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='35457' iicount='35457' stamp='0.493'/>
<writer thread='53496'/>
<task_queued compile_id='24' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='32256' iicount='32256' stamp='0.493' comment='tiered' hot_count='32256'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b12490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002b12600: mov    0x8(%rdx),%r10d
  0x0000000002b12604: shl    $0x3,%r10
  0x0000000002b12608: cmp    %rax,%r10
  0x0000000002b1260b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b12611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1261c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b12620: mov    %eax,-0x6000(%rsp)
  0x0000000002b12627: push   %rbp
  0x0000000002b12628: sub    $0x50,%rsp
  0x0000000002b1262c: movabs $0x1b7a6f68,%r8    ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b12636: mov    0xdc(%r8),%r9d
  0x0000000002b1263d: add    $0x8,%r9d
  0x0000000002b12641: mov    %r9d,0xdc(%r8)
  0x0000000002b12648: movabs $0x1b60fcf0,%r8    ;   {metadata({method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b12652: and    $0x1ff8,%r9d
  0x0000000002b12659: cmp    $0x0,%r9d
  0x0000000002b1265d: je     0x0000000002b12923  ;*aload_0
                                                ; - java.io.File::isInvalid@0

  0x0000000002b12663: mov    0x14(%rdx),%r8d
  0x0000000002b12667: shl    $0x3,%r8           ;*getfield status
                                                ; - java.io.File::isInvalid@1

  0x0000000002b1266b: cmp    $0x0,%r8
  0x0000000002b1266f: movabs $0x1b7a6f68,%r8    ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b12679: movabs $0x108,%r9
  0x0000000002b12683: jne    0x0000000002b12693
  0x0000000002b12689: movabs $0x118,%r9
  0x0000000002b12693: mov    (%r8,%r9,1),%rsi
  0x0000000002b12697: lea    0x1(%rsi),%rsi
  0x0000000002b1269b: mov    %rsi,(%r8,%r9,1)
  0x0000000002b1269f: jne    0x0000000002b128ab  ;*ifnonnull
                                                ; - java.io.File::isInvalid@4

  0x0000000002b126a5: mov    0x10(%rdx),%esi
  0x0000000002b126a8: shl    $0x3,%rsi          ;*getfield path
                                                ; - java.io.File::isInvalid@9

  0x0000000002b126ac: cmp    (%rsi),%rax        ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13
                                                ; implicit exception: dispatches to 0x0000000002b1293a
  0x0000000002b126af: mov    %rsi,%r8
  0x0000000002b126b2: movabs $0x1b7a6f68,%r9    ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b126bc: mov    0x8(%r8),%r8d
  0x0000000002b126c0: shl    $0x3,%r8
  0x0000000002b126c4: cmp    0x130(%r9),%r8
  0x0000000002b126cb: jne    0x0000000002b126da
  0x0000000002b126cd: addq   $0x1,0x138(%r9)
  0x0000000002b126d5: jmpq   0x0000000002b12740
  0x0000000002b126da: cmp    0x140(%r9),%r8
  0x0000000002b126e1: jne    0x0000000002b126f0
  0x0000000002b126e3: addq   $0x1,0x148(%r9)
  0x0000000002b126eb: jmpq   0x0000000002b12740
  0x0000000002b126f0: cmpq   $0x0,0x130(%r9)
  0x0000000002b126fb: jne    0x0000000002b12714
  0x0000000002b126fd: mov    %r8,0x130(%r9)
  0x0000000002b12704: movq   $0x1,0x138(%r9)
  0x0000000002b1270f: jmpq   0x0000000002b12740
  0x0000000002b12714: cmpq   $0x0,0x140(%r9)
  0x0000000002b1271f: jne    0x0000000002b12738
  0x0000000002b12721: mov    %r8,0x140(%r9)
  0x0000000002b12728: movq   $0x1,0x148(%r9)
  0x0000000002b12733: jmpq   0x0000000002b12740
  0x0000000002b12738: addq   $0x1,0x128(%r9)
  0x0000000002b12740: movabs $0x1b772908,%r8    ;   {metadata(method data for {method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1274a: mov    0xdc(%r8),%r9d
  0x0000000002b12751: add    $0x8,%r9d
  0x0000000002b12755: mov    %r9d,0xdc(%r8)
  0x0000000002b1275c: movabs $0x1b594db8,%r8    ;   {metadata({method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b12766: and    $0x7ffff8,%r9d
  0x0000000002b1276d: cmp    $0x0,%r9d
  0x0000000002b12771: je     0x0000000002b1293f
  0x0000000002b12777: mov    %rsi,%r8
  0x0000000002b1277a: movabs $0x1b772908,%r9    ;   {metadata(method data for {method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b12784: mov    0x8(%r8),%r8d
  0x0000000002b12788: shl    $0x3,%r8
  0x0000000002b1278c: cmp    0x110(%r9),%r8
  0x0000000002b12793: jne    0x0000000002b127a2
  0x0000000002b12795: addq   $0x1,0x118(%r9)
  0x0000000002b1279d: jmpq   0x0000000002b12808
  0x0000000002b127a2: cmp    0x120(%r9),%r8
  0x0000000002b127a9: jne    0x0000000002b127b8
  0x0000000002b127ab: addq   $0x1,0x128(%r9)
  0x0000000002b127b3: jmpq   0x0000000002b12808
  0x0000000002b127b8: cmpq   $0x0,0x110(%r9)
  0x0000000002b127c3: jne    0x0000000002b127dc
  0x0000000002b127c5: mov    %r8,0x110(%r9)
  0x0000000002b127cc: movq   $0x1,0x118(%r9)
  0x0000000002b127d7: jmpq   0x0000000002b12808
  0x0000000002b127dc: cmpq   $0x0,0x120(%r9)
  0x0000000002b127e7: jne    0x0000000002b12800
  0x0000000002b127e9: mov    %r8,0x120(%r9)
  0x0000000002b127f0: movq   $0x1,0x128(%r9)
  0x0000000002b127fb: jmpq   0x0000000002b12808
  0x0000000002b12800: addq   $0x1,0x108(%r9)
  0x0000000002b12808: mov    $0x0,%r8d
  0x0000000002b1280e: mov    $0x0,%r9d
  0x0000000002b12814: mov    %rdx,0x40(%rsp)
  0x0000000002b12819: mov    %rsi,%rdx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3
                                                ; - java.io.File::isInvalid@13

  0x0000000002b1281c: nop
  0x0000000002b1281d: nop
  0x0000000002b1281e: nop
  0x0000000002b1281f: callq  0x0000000002a461a0  ; OopMap{[64]=Oop off=548}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3
                                                ; - java.io.File::isInvalid@13
                                                ;   {optimized virtual_call}
  0x0000000002b12824: cmp    $0x0,%eax
  0x0000000002b12827: movabs $0x1b7a6f68,%rax   ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b12831: movabs $0x158,%rsi
  0x0000000002b1283b: jge    0x0000000002b1284b
  0x0000000002b12841: movabs $0x168,%rsi
  0x0000000002b1284b: mov    (%rax,%rsi,1),%rdi
  0x0000000002b1284f: lea    0x1(%rdi),%rdi
  0x0000000002b12853: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b12857: jge    0x0000000002b1287c  ;*ifge
                                                ; - java.io.File::isInvalid@16

  0x0000000002b1285d: movabs $0x1b7a6f68,%rax   ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b12867: incl   0x178(%rax)
  0x0000000002b1286d: movabs $0x76bd7fe38,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002b12877: jmpq   0x0000000002b12886  ;*goto
                                                ; - java.io.File::isInvalid@22

  0x0000000002b1287c: movabs $0x76bd7fde8,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002b12886: mov    0x40(%rsp),%rdx
  0x0000000002b1288b: mov    %rax,%r10
  0x0000000002b1288e: shr    $0x3,%r10
  0x0000000002b12892: mov    %r10d,0x14(%rdx)
  0x0000000002b12896: mov    %rdx,%rax
  0x0000000002b12899: shr    $0x9,%rax
  0x0000000002b1289d: movabs $0xe7a5000,%rsi
  0x0000000002b128a7: movb   $0x0,(%rax,%rsi,1)  ;*putfield status
                                                ; - java.io.File::isInvalid@28

  0x0000000002b128ab: mov    0x14(%rdx),%eax
  0x0000000002b128ae: shl    $0x3,%rax          ;*getfield status
                                                ; - java.io.File::isInvalid@32

  0x0000000002b128b2: movabs $0x76bd7fde8,%r10  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002b128bc: cmp    %r10,%rax
  0x0000000002b128bf: movabs $0x1b7a6f68,%rax   ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b128c9: movabs $0x190,%rsi
  0x0000000002b128d3: jne    0x0000000002b128e3
  0x0000000002b128d9: movabs $0x1a0,%rsi
  0x0000000002b128e3: mov    (%rax,%rsi,1),%rdi
  0x0000000002b128e7: lea    0x1(%rdi),%rdi
  0x0000000002b128eb: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b128ef: jne    0x0000000002b1290f  ;*if_acmpne
                                                ; - java.io.File::isInvalid@38

  0x0000000002b128f5: movabs $0x1b7a6f68,%rax   ;   {metadata(method data for {method} {0x000000001b60fcf8} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b128ff: incl   0x1b0(%rax)
  0x0000000002b12905: mov    $0x1,%eax
  0x0000000002b1290a: jmpq   0x0000000002b12914  ;*goto
                                                ; - java.io.File::isInvalid@42

  0x0000000002b1290f: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.File::isInvalid@46

  0x0000000002b12914: and    $0x1,%eax
  0x0000000002b12917: add    $0x50,%rsp
  0x0000000002b1291b: pop    %rbp
  0x0000000002b1291c: test   %eax,-0x1f22822(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b12922: retq   
  0x0000000002b12923: mov    %r8,0x8(%rsp)
  0x0000000002b12928: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b12930: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=821}
                                                ;*synchronization entry
                                                ; - java.io.File::isInvalid@-1
                                                ;   {runtime_call}
  0x0000000002b12935: jmpq   0x0000000002b12663
  0x0000000002b1293a: callq  0x0000000002afc580  ; OopMap{rdx=Oop rsi=Oop off=831}
                                                ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13
                                                ;   {runtime_call}
  0x0000000002b1293f: mov    %r8,0x8(%rsp)
  0x0000000002b12944: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1294c: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1
                                                ; - java.io.File::isInvalid@13
                                                ;   {runtime_call}
  0x0000000002b12951: jmpq   0x0000000002b12777
  0x0000000002b12956: nop
  0x0000000002b12957: nop
  0x0000000002b12958: mov    0x2a8(%r15),%rax
  0x0000000002b1295f: movabs $0x0,%r10
  0x0000000002b12969: mov    %r10,0x2a8(%r15)
  0x0000000002b12970: movabs $0x0,%r10
  0x0000000002b1297a: mov    %r10,0x2b0(%r15)
  0x0000000002b12981: add    $0x50,%rsp
  0x0000000002b12985: pop    %rbp
  0x0000000002b12986: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b1298b: hlt    
  0x0000000002b1298c: hlt    
  0x0000000002b1298d: hlt    
  0x0000000002b1298e: hlt    
  0x0000000002b1298f: hlt    
  0x0000000002b12990: hlt    
  0x0000000002b12991: hlt    
  0x0000000002b12992: hlt    
  0x0000000002b12993: hlt    
  0x0000000002b12994: hlt    
  0x0000000002b12995: hlt    
  0x0000000002b12996: hlt    
  0x0000000002b12997: hlt    
  0x0000000002b12998: hlt    
  0x0000000002b12999: hlt    
  0x0000000002b1299a: hlt    
  0x0000000002b1299b: hlt    
  0x0000000002b1299c: hlt    
  0x0000000002b1299d: hlt    
  0x0000000002b1299e: hlt    
  0x0000000002b1299f: hlt    
[Stub Code]
  0x0000000002b129a0: nop                       ;   {no_reloc}
  0x0000000002b129a1: nop
  0x0000000002b129a2: nop
  0x0000000002b129a3: nop
  0x0000000002b129a4: nop
  0x0000000002b129a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b129af: jmpq   0x0000000002b129af  ;   {runtime_call}
[Exception Handler]
  0x0000000002b129b4: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b129b9: mov    %rsp,-0x28(%rsp)
  0x0000000002b129be: sub    $0x80,%rsp
  0x0000000002b129c5: mov    %rax,0x78(%rsp)
  0x0000000002b129ca: mov    %rcx,0x70(%rsp)
  0x0000000002b129cf: mov    %rdx,0x68(%rsp)
  0x0000000002b129d4: mov    %rbx,0x60(%rsp)
  0x0000000002b129d9: mov    %rbp,0x50(%rsp)
  0x0000000002b129de: mov    %rsi,0x48(%rsp)
  0x0000000002b129e3: mov    %rdi,0x40(%rsp)
  0x0000000002b129e8: mov    %r8,0x38(%rsp)
  0x0000000002b129ed: mov    %r9,0x30(%rsp)
  0x0000000002b129f2: mov    %r10,0x28(%rsp)
  0x0000000002b129f7: mov    %r11,0x20(%rsp)
  0x0000000002b129fc: mov    %r12,0x18(%rsp)
  0x0000000002b12a01: mov    %r13,0x10(%rsp)
  0x0000000002b12a06: mov    %r14,0x8(%rsp)
  0x0000000002b12a0b: mov    %r15,(%rsp)
  0x0000000002b12a0f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b12a19: movabs $0x2b129b9,%rdx    ;   {internal_word}
  0x0000000002b12a23: mov    %rsp,%r8
  0x0000000002b12a26: and    $0xfffffffffffffff0,%rsp
  0x0000000002b12a2a: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b12a2f: hlt    
[Deopt Handler Code]
  0x0000000002b12a30: movabs $0x2b12a30,%r10    ;   {section_word}
  0x0000000002b12a3a: push   %r10
  0x0000000002b12a3c: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b12a41: hlt    
  0x0000000002b12a42: hlt    
  0x0000000002b12a43: hlt    
  0x0000000002b12a44: hlt    
  0x0000000002b12a45: hlt    
  0x0000000002b12a46: hlt    
  0x0000000002b12a47: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x0000000002b12600' size='1944' address='0x0000000002b12490' relocation_offset='288' insts_offset='368' stub_offset='1296' scopes_data_offset='1480' scopes_pcs_offset='1616' dependencies_offset='1920' nul_chk_table_offset='1928' method='java/io/File isInvalid ()Z' bytes='47' count='772' iicount='772' stamp='0.499'/>
<writer thread='53496'/>
<task_queued compile_id='25' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='512' iicount='512' level='3' stamp='0.499' comment='tiered' hot_count='512'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b12010:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b675e08} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap$Node&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002b12160: mov    0x8(%rdx),%r10d
  0x0000000002b12164: shl    $0x3,%r10
  0x0000000002b12168: cmp    %rax,%r10
  0x0000000002b1216b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b12171: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1217c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b12180: mov    %eax,-0x6000(%rsp)
  0x0000000002b12187: push   %rbp
  0x0000000002b12188: sub    $0x30,%rsp
  0x0000000002b1218c: movabs $0x1b8302b8,%rbx   ;   {metadata(method data for {method} {0x000000001b675e08} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002b12196: mov    0xdc(%rbx),%eax
  0x0000000002b1219c: add    $0x8,%eax
  0x0000000002b1219f: mov    %eax,0xdc(%rbx)
  0x0000000002b121a5: movabs $0x1b675e00,%rbx   ;   {metadata({method} {0x000000001b675e08} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002b121af: and    $0x1ff8,%eax
  0x0000000002b121b5: cmp    $0x0,%eax
  0x0000000002b121b8: je     0x0000000002b1225e  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0

  0x0000000002b121be: mov    %rdx,%rbx
  0x0000000002b121c1: movabs $0x1b8302b8,%rax   ;   {metadata(method data for {method} {0x000000001b675e08} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002b121cb: addq   $0x1,0x108(%rax)
  0x0000000002b121d3: movabs $0x1b6baa98,%rbx   ;   {metadata(method data for {method} {0x000000001b590470} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b121dd: mov    0xdc(%rbx),%eax
  0x0000000002b121e3: add    $0x8,%eax
  0x0000000002b121e6: mov    %eax,0xdc(%rbx)
  0x0000000002b121ec: movabs $0x1b590468,%rbx   ;   {metadata({method} {0x000000001b590470} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b121f6: and    $0x7ffff8,%eax
  0x0000000002b121fc: cmp    $0x0,%eax
  0x0000000002b121ff: je     0x0000000002b12275
  0x0000000002b12205: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6

  0x0000000002b12209: mov    %r9,%r10
  0x0000000002b1220c: shr    $0x3,%r10
  0x0000000002b12210: mov    %r10d,0x10(%rdx)
  0x0000000002b12214: mov    %rdx,%rbx
  0x0000000002b12217: shr    $0x9,%rbx
  0x0000000002b1221b: movabs $0xe7a5000,%rax
  0x0000000002b12225: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11

  0x0000000002b12229: mov    %rdi,%r10
  0x0000000002b1222c: shr    $0x3,%r10
  0x0000000002b12230: mov    %r10d,0x14(%rdx)
  0x0000000002b12234: mov    %rdx,%rdi
  0x0000000002b12237: shr    $0x9,%rdi
  0x0000000002b1223b: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16

  0x0000000002b1223f: mov    %rsi,%r10
  0x0000000002b12242: shr    $0x3,%r10
  0x0000000002b12246: mov    %r10d,0x18(%rdx)
  0x0000000002b1224a: shr    $0x9,%rdx
  0x0000000002b1224e: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22

  0x0000000002b12252: add    $0x30,%rsp
  0x0000000002b12256: pop    %rbp
  0x0000000002b12257: test   %eax,-0x1f2215d(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1225d: retq   
  0x0000000002b1225e: mov    %rbx,0x8(%rsp)
  0x0000000002b12263: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1226b: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1
                                                ;   {runtime_call}
  0x0000000002b12270: jmpq   0x0000000002b121be
  0x0000000002b12275: mov    %rbx,0x8(%rsp)
  0x0000000002b1227a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b12282: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1
                                                ;   {runtime_call}
  0x0000000002b12287: jmpq   0x0000000002b12205
  0x0000000002b1228c: nop
  0x0000000002b1228d: nop
  0x0000000002b1228e: mov    0x2a8(%r15),%rax
  0x0000000002b12295: movabs $0x0,%r10
  0x0000000002b1229f: mov    %r10,0x2a8(%r15)
  0x0000000002b122a6: movabs $0x0,%r10
  0x0000000002b122b0: mov    %r10,0x2b0(%r15)
  0x0000000002b122b7: add    $0x30,%rsp
  0x0000000002b122bb: pop    %rbp
  0x0000000002b122bc: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b122c1: hlt    
  0x0000000002b122c2: hlt    
  0x0000000002b122c3: hlt    
  0x0000000002b122c4: hlt    
  0x0000000002b122c5: hlt    
  0x0000000002b122c6: hlt    
  0x0000000002b122c7: hlt    
  0x0000000002b122c8: hlt    
  0x0000000002b122c9: hlt    
  0x0000000002b122ca: hlt    
  0x0000000002b122cb: hlt    
  0x0000000002b122cc: hlt    
  0x0000000002b122cd: hlt    
  0x0000000002b122ce: hlt    
  0x0000000002b122cf: hlt    
  0x0000000002b122d0: hlt    
  0x0000000002b122d1: hlt    
  0x0000000002b122d2: hlt    
  0x0000000002b122d3: hlt    
  0x0000000002b122d4: hlt    
  0x0000000002b122d5: hlt    
  0x0000000002b122d6: hlt    
  0x0000000002b122d7: hlt    
  0x0000000002b122d8: hlt    
  0x0000000002b122d9: hlt    
  0x0000000002b122da: hlt    
  0x0000000002b122db: hlt    
  0x0000000002b122dc: hlt    
  0x0000000002b122dd: hlt    
  0x0000000002b122de: hlt    
  0x0000000002b122df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b122e0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b122e5: mov    %rsp,-0x28(%rsp)
  0x0000000002b122ea: sub    $0x80,%rsp
  0x0000000002b122f1: mov    %rax,0x78(%rsp)
  0x0000000002b122f6: mov    %rcx,0x70(%rsp)
  0x0000000002b122fb: mov    %rdx,0x68(%rsp)
  0x0000000002b12300: mov    %rbx,0x60(%rsp)
  0x0000000002b12305: mov    %rbp,0x50(%rsp)
  0x0000000002b1230a: mov    %rsi,0x48(%rsp)
  0x0000000002b1230f: mov    %rdi,0x40(%rsp)
  0x0000000002b12314: mov    %r8,0x38(%rsp)
  0x0000000002b12319: mov    %r9,0x30(%rsp)
  0x0000000002b1231e: mov    %r10,0x28(%rsp)
  0x0000000002b12323: mov    %r11,0x20(%rsp)
  0x0000000002b12328: mov    %r12,0x18(%rsp)
  0x0000000002b1232d: mov    %r13,0x10(%rsp)
  0x0000000002b12332: mov    %r14,0x8(%rsp)
  0x0000000002b12337: mov    %r15,(%rsp)
  0x0000000002b1233b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b12345: movabs $0x2b122e5,%rdx    ;   {internal_word}
  0x0000000002b1234f: mov    %rsp,%r8
  0x0000000002b12352: and    $0xfffffffffffffff0,%rsp
  0x0000000002b12356: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1235b: hlt    
[Deopt Handler Code]
  0x0000000002b1235c: movabs $0x2b1235c,%r10    ;   {section_word}
  0x0000000002b12366: push   %r10
  0x0000000002b12368: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1236d: hlt    
  0x0000000002b1236e: hlt    
  0x0000000002b1236f: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000002b12160' size='1112' address='0x0000000002b12010' relocation_offset='288' insts_offset='336' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='513' iicount='513' stamp='0.504'/>
<writer thread='53496'/>
<task_queued compile_id='26' method='java/lang/String getChars (II[CI)V' bytes='62' count='1920' iicount='1920' level='3' stamp='0.504' comment='tiered' hot_count='1920'/>
<writer thread='18132'/>
Decoding compiled method 0x0000000002b15550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b6017c8} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x80]  (sp of caller)
  0x0000000002b156a0: mov    0x8(%rdx),%r10d
  0x0000000002b156a4: shl    $0x3,%r10
  0x0000000002b156a8: cmp    %r10,%rax
  0x0000000002b156ab: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b156b1: data16 xchg %ax,%ax
  0x0000000002b156b4: nopl   0x0(%rax,%rax,1)
  0x0000000002b156bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b156c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b156c7: push   %rbp
  0x0000000002b156c8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1

  0x0000000002b156cc: mov    %r8d,0x20(%rsp)
  0x0000000002b156d1: mov    %rdx,%rbx
  0x0000000002b156d4: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b156d8: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; implicit exception: dispatches to 0x0000000002b159a3
  0x0000000002b156dd: mov    0xc(%rdx),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2

  0x0000000002b156e0: mov    %ecx,%r11d
  0x0000000002b156e3: sub    %ebp,%r11d
  0x0000000002b156e6: mov    %r9,%rsi
  0x0000000002b156e9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b156ed: inc    %r11d
  0x0000000002b156f0: mov    %ecx,%r8d
  0x0000000002b156f3: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6

  0x0000000002b156f6: test   %r11d,%r11d
  0x0000000002b156f9: jg     0x0000000002b1572f  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16

  0x0000000002b156fb: mov    %r8d,0xc(%rbx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22

  0x0000000002b156ff: test   %rsi,%rsi
  0x0000000002b15702: je     0x0000000002b1592d
  0x0000000002b15708: mov    0xc(%rsi),%r11d
  0x0000000002b1570c: cmp    %r11d,%ecx
  0x0000000002b1570f: jae    0x0000000002b15941
  0x0000000002b15715: mov    0x20(%rsp),%r11d
  0x0000000002b1571a: mov    %r11w,0x10(%rsi,%rcx,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1

  0x0000000002b15720: mov    %rbx,%rax
  0x0000000002b15723: add    $0x70,%rsp
  0x0000000002b15727: pop    %rbp
  0x0000000002b15728: test   %eax,-0x1f2572e(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b1572e: retq   
  0x0000000002b1572f: mov    %ebp,%r10d
  0x0000000002b15732: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15735: mov    %r10d,%edi
  0x0000000002b15738: sub    %ecx,%edi
  0x0000000002b1573a: inc    %edi
  0x0000000002b1573c: test   %edi,%edi
  0x0000000002b1573e: jge    0x0000000002b1588c  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15744: mov    %r8d,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15747: test   %r10d,%r10d
  0x0000000002b1574a: jle    0x0000000002b15758  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1574c: mov    $0x7ffffff7,%ecx
  0x0000000002b15751: sub    %r10d,%ecx
  0x0000000002b15754: test   %ecx,%ecx
  0x0000000002b15756: jge    0x0000000002b1577e  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15758: mov    %r9d,0x24(%rsp)
  0x0000000002b1575d: mov    %rsi,0x30(%rsp)
  0x0000000002b15762: mov    %rdx,0x28(%rsp)
  0x0000000002b15767: callq  0x0000000002a461a0  ; OopMap{[36]=NarrowOop [40]=Oop [48]=Oop off=204}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ;   {optimized virtual_call}
  0x0000000002b1576c: mov    0x28(%rsp),%rbx
  0x0000000002b15771: mov    0x30(%rsp),%rsi
  0x0000000002b15776: mov    %eax,%r10d
  0x0000000002b15779: mov    0x24(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1577e: cmp    $0x80000,%r10d
  0x0000000002b15785: ja     0x0000000002b15959
  0x0000000002b1578b: movslq %r10d,%r11
  0x0000000002b1578e: shl    %r11
  0x0000000002b15791: add    $0x17,%r11
  0x0000000002b15795: mov    %r11,%rdi
  0x0000000002b15798: and    $0xfffffffffffffff8,%rdi
  0x0000000002b1579c: cmp    $0x80000,%r10d
  0x0000000002b157a3: ja     0x0000000002b158d8
  0x0000000002b157a9: mov    0x60(%r15),%r13
  0x0000000002b157ad: mov    %r13,%r8
  0x0000000002b157b0: add    %rdi,%r8
  0x0000000002b157b3: cmp    0x70(%r15),%r8
  0x0000000002b157b7: jae    0x0000000002b158d8
  0x0000000002b157bd: mov    %r8,0x60(%r15)
  0x0000000002b157c1: prefetchw 0xc0(%r8)
  0x0000000002b157c9: movq   $0x1,0x0(%r13)
  0x0000000002b157d1: prefetchw 0x100(%r8)
  0x0000000002b157d9: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x0000000002b157e1: mov    %r10d,0xc(%r13)
  0x0000000002b157e5: prefetchw 0x140(%r8)
  0x0000000002b157ed: prefetchw 0x180(%r8)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b157f5: cmp    %r10d,%ebp
  0x0000000002b157f8: mov    %r10d,%esi
  0x0000000002b157fb: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b157fe: mov    %r13,%r14
  0x0000000002b15801: add    $0x10,%r14
  0x0000000002b15805: shr    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15809: mov    %r13,%r8
  0x0000000002b1580c: shr    $0x3,%r8           ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15810: mov    %r8d,0x24(%rsp)
  0x0000000002b15815: mov    %r11,%rcx
  0x0000000002b15818: add    $0xfffffffffffffffe,%rcx  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1581c: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15820: cmp    %esi,%ebp
  0x0000000002b15822: jb     0x0000000002b15961
  0x0000000002b15828: cmp    %esi,%r10d
  0x0000000002b1582b: jb     0x0000000002b15961
  0x0000000002b15831: test   %esi,%esi
  0x0000000002b15833: jle    0x0000000002b15991
  0x0000000002b15839: lea    0x10(%r12,%r9,8),%r9
  0x0000000002b1583e: cmp    %r10d,%esi
  0x0000000002b15841: jl     0x0000000002b15895
  0x0000000002b15843: add    $0xfffffffffffffff0,%rdi
  0x0000000002b15847: shr    $0x3,%rdi
  0x0000000002b1584b: mov    %r9,%rcx
  0x0000000002b1584e: mov    %r14,%rdx
  0x0000000002b15851: mov    %rdi,%r8
  0x0000000002b15854: movabs $0x2a52ca0,%r10
  0x0000000002b1585e: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15861: mov    0x24(%rsp),%r11d
  0x0000000002b15866: mov    %r11d,0x10(%rbx)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1586a: mov    0xc(%rbx),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16

  0x0000000002b1586d: mov    %rbx,%r10
  0x0000000002b15870: mov    %ecx,%r8d
  0x0000000002b15873: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x0000000002b15876: shr    $0x9,%r10
  0x0000000002b1587a: mov    $0xe7a5000,%r11d
  0x0000000002b15880: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15884: mov    %r13,%rsi
  0x0000000002b15887: jmpq   0x0000000002b156fb
  0x0000000002b1588c: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b15890: jmpq   0x0000000002b15747
  0x0000000002b15895: movslq %esi,%r8
  0x0000000002b15898: mov    %r8,%r10
  0x0000000002b1589b: shl    %r10
  0x0000000002b1589e: add    $0x10,%r10
  0x0000000002b158a2: mov    %r10,%rcx
  0x0000000002b158a5: and    $0xfffffffffffffff9,%rcx
  0x0000000002b158a9: mov    %r13,%rdi
  0x0000000002b158ac: add    %rcx,%rdi
  0x0000000002b158af: shr    $0x3,%r10
  0x0000000002b158b3: sub    %r10,%r11
  0x0000000002b158b6: mov    %r11,%rcx
  0x0000000002b158b9: xor    %rax,%rax
  0x0000000002b158bc: shl    $0x3,%rcx
  0x0000000002b158c0: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b158c3: mov    %r9,%rcx
  0x0000000002b158c6: mov    %r14,%rdx
  0x0000000002b158c9: movabs $0x2a52980,%r10
  0x0000000002b158d3: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b158d6: jmp    0x0000000002b15861
  0x0000000002b158d8: mov    %r9d,0x50(%rsp)
  0x0000000002b158dd: mov    %rdi,0x38(%rsp)
  0x0000000002b158e2: mov    %r11,0x30(%rsp)
  0x0000000002b158e7: mov    %r10d,0x24(%rsp)
  0x0000000002b158ec: mov    %rbx,0x28(%rsp)
  0x0000000002b158f1: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b158fb: mov    0x24(%rsp),%r8d
  0x0000000002b15900: mov    %rsi,0x48(%rsp)
  0x0000000002b15905: xchg   %ax,%ax
  0x0000000002b15907: callq  0x0000000002b04e60  ; OopMap{[40]=Oop [72]=Oop [80]=NarrowOop off=620}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ;   {runtime_call}
  0x0000000002b1590c: mov    0x28(%rsp),%rbx
  0x0000000002b15911: mov    0x24(%rsp),%r10d
  0x0000000002b15916: mov    0x30(%rsp),%r11
  0x0000000002b1591b: mov    0x38(%rsp),%rdi
  0x0000000002b15920: mov    %rax,%r13
  0x0000000002b15923: mov    0x50(%rsp),%r9d
  0x0000000002b15928: jmpq   0x0000000002b157f5
  0x0000000002b1592d: mov    $0xfffffff6,%edx
  0x0000000002b15932: mov    0x20(%rsp),%ebp
  0x0000000002b15936: mov    %ecx,0x20(%rsp)
  0x0000000002b1593a: nop
  0x0000000002b1593b: callq  0x0000000002a457a0  ; OopMap{off=672}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ;   {runtime_call}
  0x0000000002b15940: int3   
  0x0000000002b15941: mov    $0xffffffe4,%edx
  0x0000000002b15946: mov    %rbx,%rbp
  0x0000000002b15949: mov    %rsi,0x28(%rsp)
  0x0000000002b1594e: mov    %ecx,0x24(%rsp)
  0x0000000002b15952: nop
  0x0000000002b15953: callq  0x0000000002a457a0  ; OopMap{rbp=Oop [40]=Oop off=696}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ;   {runtime_call}
  0x0000000002b15958: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26

  0x0000000002b15959: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1595c: jmpq   0x0000000002b1578e
  0x0000000002b15961: mov    %r13,0x28(%rsp)
  0x0000000002b15966: mov    %rbx,%rbp
  0x0000000002b15969: mov    %r14,%rdi
  0x0000000002b1596c: xor    %rax,%rax
  0x0000000002b1596f: shl    $0x3,%rcx
  0x0000000002b15973: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b15976: xor    %r8d,%r8d
  0x0000000002b15979: mov    %r13,%r9
  0x0000000002b1597c: xor    %edi,%edi
  0x0000000002b1597e: nop
  0x0000000002b1597f: callq  0x0000000002b0e460  ; OopMap{rbp=Oop [36]=NarrowOop [40]=Oop off=740}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ;   {runtime_call}
  0x0000000002b15984: mov    %rbp,%rbx
  0x0000000002b15987: mov    0x28(%rsp),%r13
  0x0000000002b1598c: jmpq   0x0000000002b15861
  0x0000000002b15991: mov    %r14,%rdi
  0x0000000002b15994: xor    %rax,%rax
  0x0000000002b15997: shl    $0x3,%rcx
  0x0000000002b1599b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b1599e: jmpq   0x0000000002b15861
  0x0000000002b159a3: mov    $0xfffffff6,%edx
  0x0000000002b159a8: data16 xchg %ax,%ax
  0x0000000002b159ab: callq  0x0000000002a457a0  ; OopMap{off=784}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ;   {runtime_call}
  0x0000000002b159b0: int3   
  0x0000000002b159b1: jmp    0x0000000002b159b3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b159b3: mov    %rax,%rdx
  0x0000000002b159b6: jmp    0x0000000002b159bb  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7

  0x0000000002b159b8: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1

  0x0000000002b159bb: add    $0x70,%rsp
  0x0000000002b159bf: pop    %rbp
  0x0000000002b159c0: jmpq   0x0000000002b0e5e0  ;   {runtime_call}
  0x0000000002b159c5: hlt    
  0x0000000002b159c6: hlt    
  0x0000000002b159c7: hlt    
  0x0000000002b159c8: hlt    
  0x0000000002b159c9: hlt    
  0x0000000002b159ca: hlt    
  0x0000000002b159cb: hlt    
  0x0000000002b159cc: hlt    
  0x0000000002b159cd: hlt    
  0x0000000002b159ce: hlt    
  0x0000000002b159cf: hlt    
  0x0000000002b159d0: hlt    
  0x0000000002b159d1: hlt    
  0x0000000002b159d2: hlt    
  0x0000000002b159d3: hlt    
  0x0000000002b159d4: hlt    
  0x0000000002b159d5: hlt    
  0x0000000002b159d6: hlt    
  0x0000000002b159d7: hlt    
  0x0000000002b159d8: hlt    
  0x0000000002b159d9: hlt    
  0x0000000002b159da: hlt    
  0x0000000002b159db: hlt    
  0x0000000002b159dc: hlt    
  0x0000000002b159dd: hlt    
  0x0000000002b159de: hlt    
  0x0000000002b159df: hlt    
[Stub Code]
  0x0000000002b159e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002b159ea: jmpq   0x0000000002b159ea  ;   {runtime_call}
[Exception Handler]
  0x0000000002b159ef: jmpq   0x0000000002a6f2a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002b159f4: callq  0x0000000002b159f9
  0x0000000002b159f9: subq   $0x5,(%rsp)
  0x0000000002b159fe: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b15a03: hlt    
  0x0000000002b15a04: hlt    
  0x0000000002b15a05: hlt    
  0x0000000002b15a06: hlt    
  0x0000000002b15a07: hlt    
<nmethod compile_id='22' compiler='C2' level='4' entry='0x0000000002b156a0' size='2336' address='0x0000000002b15550' relocation_offset='288' insts_offset='336' stub_offset='1168' scopes_data_offset='1248' scopes_pcs_offset='1568' dependencies_offset='2240' handler_table_offset='2248' nul_chk_table_offset='2320' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='32573' iicount='32573' stamp='0.514'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b14c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002b14e00: mov    0x8(%rdx),%r10d
  0x0000000002b14e04: shl    $0x3,%r10
  0x0000000002b14e08: cmp    %rax,%r10
  0x0000000002b14e0b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b14e11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b14e1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b14e20: mov    %eax,-0x6000(%rsp)
  0x0000000002b14e27: push   %rbp
  0x0000000002b14e28: sub    $0x60,%rsp
  0x0000000002b14e2c: movabs $0x1b7847a8,%rbx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14e36: mov    0xdc(%rbx),%eax
  0x0000000002b14e3c: add    $0x8,%eax
  0x0000000002b14e3f: mov    %eax,0xdc(%rbx)
  0x0000000002b14e45: movabs $0x1b594010,%rbx   ;   {metadata({method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14e4f: and    $0x1ff8,%eax
  0x0000000002b14e55: cmp    $0x0,%eax
  0x0000000002b14e58: je     0x0000000002b1508e  ;*iload_1
                                                ; - java.lang.String::getChars@0

  0x0000000002b14e5e: cmp    $0x0,%r8d
  0x0000000002b14e62: movabs $0x1b7847a8,%rbx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14e6c: movabs $0x108,%rax
  0x0000000002b14e76: jge    0x0000000002b14e86
  0x0000000002b14e7c: movabs $0x118,%rax
  0x0000000002b14e86: mov    (%rbx,%rax,1),%rcx
  0x0000000002b14e8a: lea    0x1(%rcx),%rcx
  0x0000000002b14e8e: mov    %rcx,(%rbx,%rax,1)
  0x0000000002b14e92: jl     0x0000000002b1504e  ;*ifge
                                                ; - java.lang.String::getChars@1

  0x0000000002b14e98: mov    0xc(%rdx),%edx
  0x0000000002b14e9b: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15

  0x0000000002b14e9f: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18
                                                ; implicit exception: dispatches to 0x0000000002b150a5
  0x0000000002b14ea2: cmp    %ebx,%r9d
  0x0000000002b14ea5: movabs $0x1b7847a8,%rbx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14eaf: movabs $0x138,%rax
  0x0000000002b14eb9: jle    0x0000000002b14ec9
  0x0000000002b14ebf: movabs $0x148,%rax
  0x0000000002b14ec9: mov    (%rbx,%rax,1),%rcx
  0x0000000002b14ecd: lea    0x1(%rcx),%rcx
  0x0000000002b14ed1: mov    %rcx,(%rbx,%rax,1)
  0x0000000002b14ed5: jg     0x0000000002b1500e  ;*if_icmple
                                                ; - java.lang.String::getChars@19

  0x0000000002b14edb: cmp    %r9d,%r8d
  0x0000000002b14ede: movabs $0x1b7847a8,%rbx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14ee8: movabs $0x168,%rax
  0x0000000002b14ef2: jle    0x0000000002b14f02
  0x0000000002b14ef8: movabs $0x178,%rax
  0x0000000002b14f02: mov    (%rbx,%rax,1),%rcx
  0x0000000002b14f06: lea    0x1(%rcx),%rcx
  0x0000000002b14f0a: mov    %rcx,(%rbx,%rax,1)
  0x0000000002b14f0e: jg     0x0000000002b14fc2  ;*if_icmple
                                                ; - java.lang.String::getChars@33

  0x0000000002b14f14: movabs $0x1b7847a8,%rbx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14f1e: addq   $0x1,0x198(%rbx)
  0x0000000002b14f26: mov    %r9,%rbx
  0x0000000002b14f29: sub    %r8d,%ebx
  0x0000000002b14f2c: mov    %rdi,%r9
  0x0000000002b14f2f: mov    %rsi,%rdi
  0x0000000002b14f32: mov    %rbx,%rsi
  0x0000000002b14f35: test   %r9,%r9
  0x0000000002b14f38: je     0x0000000002b150aa
  0x0000000002b14f3e: test   %r8d,%r8d
  0x0000000002b14f41: jl     0x0000000002b150aa
  0x0000000002b14f47: test   %edi,%edi
  0x0000000002b14f49: jl     0x0000000002b150aa
  0x0000000002b14f4f: lea    (%r8,%rsi,1),%rcx
  0x0000000002b14f53: cmp    0xc(%rdx),%ecx
  0x0000000002b14f56: ja     0x0000000002b150aa
  0x0000000002b14f5c: lea    (%rdi,%rsi,1),%rcx
  0x0000000002b14f60: cmp    0xc(%r9),%ecx
  0x0000000002b14f64: ja     0x0000000002b150aa
  0x0000000002b14f6a: test   %esi,%esi
  0x0000000002b14f6c: jl     0x0000000002b150aa
  0x0000000002b14f72: je     0x0000000002b14fb6
  0x0000000002b14f78: movslq %r8d,%r8
  0x0000000002b14f7b: movslq %edi,%rdi
  0x0000000002b14f7e: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002b14f83: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002b14f88: mov    %rsi,%r8
  0x0000000002b14f8b: sub    $0x20,%rsp
  0x0000000002b14f8f: test   $0xf,%esp
  0x0000000002b14f95: je     0x0000000002b14fad
  0x0000000002b14f9b: sub    $0x8,%rsp
  0x0000000002b14f9f: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002b14fa4: add    $0x8,%rsp
  0x0000000002b14fa8: jmpq   0x0000000002b14fb2
  0x0000000002b14fad: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002b14fb2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58

  0x0000000002b14fb6: add    $0x60,%rsp
  0x0000000002b14fba: pop    %rbp
  0x0000000002b14fbb: test   %eax,-0x1f24ec1(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b14fc1: retq                      ;*return
                                                ; - java.lang.String::getChars@61

  0x0000000002b14fc2: nopw   0x0(%rax,%rax,1)
  0x0000000002b14fc8: jmpq   0x0000000002b150c8  ;   {no_reloc}
  0x0000000002b14fcd: add    %al,(%rax)
  0x0000000002b14fcf: add    %al,(%rax)
  0x0000000002b14fd1: add    %ch,%cl
  0x0000000002b14fd3: sti    
  0x0000000002b14fd4: add    %al,(%rax)
  0x0000000002b14fd6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36

  0x0000000002b14fd9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b14fdc: test   $0x47,%al
  0x0000000002b14fde: js     0x0000000002b14ffb
  0x0000000002b14fe0: add    %al,(%rax)
  0x0000000002b14fe2: add    %al,(%rax)
  0x0000000002b14fe4: addq   $0x1,0x188(%rsi)
  0x0000000002b14fec: sub    %r8d,%r9d
  0x0000000002b14fef: mov    %r9,%r8
  0x0000000002b14ff2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43

  0x0000000002b14ff5: mov    %rax,0x38(%rsp)
  0x0000000002b14ffa: nop
  0x0000000002b14ffb: nop
  0x0000000002b14ffc: nop
  0x0000000002b14ffd: nop
  0x0000000002b14ffe: nop
  0x0000000002b14fff: callq  0x0000000002a461a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43
                                                ;   {optimized virtual_call}
  0x0000000002b15004: mov    0x38(%rsp),%rax
  0x0000000002b15009: jmpq   0x0000000002b15156  ;*athrow
                                                ; - java.lang.String::getChars@46

  0x0000000002b1500e: xchg   %ax,%ax
  0x0000000002b15010: jmpq   0x0000000002b150ee  ;   {no_reloc}
  0x0000000002b15015: add    %al,(%rax)
  0x0000000002b15017: add    %al,(%rax)
  0x0000000002b15019: add    %ch,%cl
  0x0000000002b1501b: flds   (%rax)
  0x0000000002b1501d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22

  0x0000000002b1501f: mov    %rax,%r8
  0x0000000002b15022: movabs $0x1b7847a8,%rdx   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1502c: addq   $0x1,0x158(%rdx)
  0x0000000002b15034: mov    %r9,%r8
  0x0000000002b15037: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27

  0x0000000002b1503a: mov    %rax,0x40(%rsp)
  0x0000000002b1503f: callq  0x0000000002a461a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27
                                                ;   {optimized virtual_call}
  0x0000000002b15044: mov    0x40(%rsp),%rax
  0x0000000002b15049: jmpq   0x0000000002b15156  ;*athrow
                                                ; - java.lang.String::getChars@30

  0x0000000002b1504e: xchg   %ax,%ax
  0x0000000002b15050: jmpq   0x0000000002b15114  ;   {no_reloc}
  0x0000000002b15055: add    %al,(%rax)
  0x0000000002b15057: add    %al,(%rax)
  0x0000000002b15059: add    %ch,%cl
  0x0000000002b1505b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4

  0x0000000002b15060: mov    %eax,%edx
  0x0000000002b15062: movabs $0x1b7847a8,%rsi   ;   {metadata(method data for {method} {0x000000001b594018} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1506c: addq   $0x1,0x128(%rsi)
  0x0000000002b15074: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9

  0x0000000002b15077: mov    %rax,0x48(%rsp)
  0x0000000002b1507c: nop
  0x0000000002b1507d: nop
  0x0000000002b1507e: nop
  0x0000000002b1507f: callq  0x0000000002a461a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9
                                                ;   {optimized virtual_call}
  0x0000000002b15084: mov    0x48(%rsp),%rax
  0x0000000002b15089: jmpq   0x0000000002b15156
  0x0000000002b1508e: mov    %rbx,0x8(%rsp)
  0x0000000002b15093: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1509b: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1
                                                ;   {runtime_call}
  0x0000000002b150a0: jmpq   0x0000000002b14e5e
  0x0000000002b150a5: callq  0x0000000002afc580  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18
                                                ;   {runtime_call}
  0x0000000002b150aa: nop
  0x0000000002b150ab: nop
  0x0000000002b150ac: nop
  0x0000000002b150ad: nop
  0x0000000002b150ae: nop
  0x0000000002b150af: callq  0x0000000002a46620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58
                                                ;   {static_call}
  0x0000000002b150b4: jmpq   0x0000000002b14fb6
  0x0000000002b150b9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b150c3: mov    $0xa050f00,%eax
  0x0000000002b150c8: callq  0x0000000002b00660  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36
                                                ;   {runtime_call}
  0x0000000002b150cd: jmpq   0x0000000002b14fc8
  0x0000000002b150d2: mov    %rdx,%rdx
  0x0000000002b150d5: callq  0x0000000002afca20  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36
                                                ;   {runtime_call}
  0x0000000002b150da: jmpq   0x0000000002b14fd7
  0x0000000002b150df: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b150e9: mov    $0xa050f00,%eax
  0x0000000002b150ee: callq  0x0000000002b00660  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22
                                                ;   {runtime_call}
  0x0000000002b150f3: jmpq   0x0000000002b15010
  0x0000000002b150f8: mov    %rdx,%rdx
  0x0000000002b150fb: callq  0x0000000002afca20  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22
                                                ;   {runtime_call}
  0x0000000002b15100: jmpq   0x0000000002b1501f
  0x0000000002b15105: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b1510f: mov    $0xa050f00,%eax
  0x0000000002b15114: callq  0x0000000002b00660  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4
                                                ;   {runtime_call}
  0x0000000002b15119: jmpq   0x0000000002b15050
  0x0000000002b1511e: mov    %rdx,%rdx
  0x0000000002b15121: callq  0x0000000002afca20  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4
                                                ;   {runtime_call}
  0x0000000002b15126: jmpq   0x0000000002b1505f
  0x0000000002b1512b: nop
  0x0000000002b1512c: nop
  0x0000000002b1512d: mov    0x2a8(%r15),%rax
  0x0000000002b15134: movabs $0x0,%r10
  0x0000000002b1513e: mov    %r10,0x2a8(%r15)
  0x0000000002b15145: movabs $0x0,%r10
  0x0000000002b1514f: mov    %r10,0x2b0(%r15)
  0x0000000002b15156: add    $0x60,%rsp
  0x0000000002b1515a: pop    %rbp
  0x0000000002b1515b: jmpq   0x0000000002a6efa0  ;   {runtime_call}
[Stub Code]
  0x0000000002b15160: nop                       ;   {no_reloc}
  0x0000000002b15161: nop
  0x0000000002b15162: nop
  0x0000000002b15163: nop
  0x0000000002b15164: nop
  0x0000000002b15165: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1516f: jmpq   0x0000000002b1516f  ;   {runtime_call}
  0x0000000002b15174: nop
  0x0000000002b15175: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1517f: jmpq   0x0000000002b1517f  ;   {runtime_call}
  0x0000000002b15184: nop
  0x0000000002b15185: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1518f: jmpq   0x0000000002b1518f  ;   {runtime_call}
  0x0000000002b15194: nop
  0x0000000002b15195: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1519f: jmpq   0x0000000002b1519f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b151a4: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b151a9: mov    %rsp,-0x28(%rsp)
  0x0000000002b151ae: sub    $0x80,%rsp
  0x0000000002b151b5: mov    %rax,0x78(%rsp)
  0x0000000002b151ba: mov    %rcx,0x70(%rsp)
  0x0000000002b151bf: mov    %rdx,0x68(%rsp)
  0x0000000002b151c4: mov    %rbx,0x60(%rsp)
  0x0000000002b151c9: mov    %rbp,0x50(%rsp)
  0x0000000002b151ce: mov    %rsi,0x48(%rsp)
  0x0000000002b151d3: mov    %rdi,0x40(%rsp)
  0x0000000002b151d8: mov    %r8,0x38(%rsp)
  0x0000000002b151dd: mov    %r9,0x30(%rsp)
  0x0000000002b151e2: mov    %r10,0x28(%rsp)
  0x0000000002b151e7: mov    %r11,0x20(%rsp)
  0x0000000002b151ec: mov    %r12,0x18(%rsp)
  0x0000000002b151f1: mov    %r13,0x10(%rsp)
  0x0000000002b151f6: mov    %r14,0x8(%rsp)
  0x0000000002b151fb: mov    %r15,(%rsp)
  0x0000000002b151ff: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b15209: movabs $0x2b151a9,%rdx    ;   {internal_word}
  0x0000000002b15213: mov    %rsp,%r8
  0x0000000002b15216: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1521a: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1521f: hlt    
[Deopt Handler Code]
  0x0000000002b15220: movabs $0x2b15220,%r10    ;   {section_word}
  0x0000000002b1522a: push   %r10
  0x0000000002b1522c: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b15231: hlt    
  0x0000000002b15232: hlt    
  0x0000000002b15233: hlt    
  0x0000000002b15234: hlt    
  0x0000000002b15235: hlt    
  0x0000000002b15236: hlt    
  0x0000000002b15237: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002b14e00' size='2256' address='0x0000000002b14c50' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='1920' iicount='1920' stamp='0.521'/>
Decoding compiled method 0x0000000002b18410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;
  # this:     rdx:rdx   = &apos;java/io/ExpiringCache&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002b185a0: mov    0x8(%rdx),%r10d
  0x0000000002b185a4: shl    $0x3,%r10
  0x0000000002b185a8: cmp    %rax,%r10
  0x0000000002b185ab: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b185b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b185bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b185c0: mov    %eax,-0x6000(%rsp)
  0x0000000002b185c7: push   %rbp
  0x0000000002b185c8: sub    $0x60,%rsp
  0x0000000002b185cc: movabs $0x1b819968,%rsi   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b185d6: mov    0xdc(%rsi),%edi
  0x0000000002b185dc: add    $0x8,%edi
  0x0000000002b185df: mov    %edi,0xdc(%rsi)
  0x0000000002b185e5: movabs $0x1b7062d0,%rsi   ;   {metadata({method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b185ef: and    $0x1ff8,%edi
  0x0000000002b185f5: cmp    $0x0,%edi
  0x0000000002b185f8: je     0x0000000002b189ad  ;*aload_0
                                                ; - java.io.ExpiringCache::entryFor@0

  0x0000000002b185fe: mov    0x20(%rdx),%esi
  0x0000000002b18601: shl    $0x3,%rsi          ;*getfield map
                                                ; - java.io.ExpiringCache::entryFor@1

  0x0000000002b18605: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002b189c4
  0x0000000002b18608: mov    %rsi,%rdi
  0x0000000002b1860b: movabs $0x1b819968,%rbx   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b18615: mov    0x8(%rdi),%edi
  0x0000000002b18618: shl    $0x3,%rdi
  0x0000000002b1861c: cmp    0x110(%rbx),%rdi
  0x0000000002b18623: jne    0x0000000002b18632
  0x0000000002b18625: addq   $0x1,0x118(%rbx)
  0x0000000002b1862d: jmpq   0x0000000002b18698
  0x0000000002b18632: cmp    0x120(%rbx),%rdi
  0x0000000002b18639: jne    0x0000000002b18648
  0x0000000002b1863b: addq   $0x1,0x128(%rbx)
  0x0000000002b18643: jmpq   0x0000000002b18698
  0x0000000002b18648: cmpq   $0x0,0x110(%rbx)
  0x0000000002b18653: jne    0x0000000002b1866c
  0x0000000002b18655: mov    %rdi,0x110(%rbx)
  0x0000000002b1865c: movq   $0x1,0x118(%rbx)
  0x0000000002b18667: jmpq   0x0000000002b18698
  0x0000000002b1866c: cmpq   $0x0,0x120(%rbx)
  0x0000000002b18677: jne    0x0000000002b18690
  0x0000000002b18679: mov    %rdi,0x120(%rbx)
  0x0000000002b18680: movq   $0x1,0x128(%rbx)
  0x0000000002b1868b: jmpq   0x0000000002b18698
  0x0000000002b18690: addq   $0x1,0x108(%rbx)
  0x0000000002b18698: mov    %r8,%rdi
  0x0000000002b1869b: mov    %rdi,%r8
  0x0000000002b1869e: mov    %rdx,0x40(%rsp)
  0x0000000002b186a3: mov    %rsi,%rdx          ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5

  0x0000000002b186a6: mov    %rdi,0x48(%rsp)
  0x0000000002b186ab: nop
  0x0000000002b186ac: nop
  0x0000000002b186ad: movabs $0xffffffffffffffff,%rax
  0x0000000002b186b7: callq  0x0000000002a463e0  ; OopMap{[72]=Oop [64]=Oop off=284}
                                                ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5
                                                ;   {virtual_call}
  0x0000000002b186bc: cmp    $0x0,%rax
  0x0000000002b186c0: jne    0x0000000002b186db
  0x0000000002b186c2: movabs $0x1b819968,%rbx   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b186cc: orl    $0x100,0x130(%rbx)
  0x0000000002b186d6: jmpq   0x0000000002b1879b
  0x0000000002b186db: movabs $0x7c002fe78,%rsi  ;   {metadata(&apos;java/io/ExpiringCache$Entry&apos;)}
  0x0000000002b186e5: mov    0x8(%rax),%edi
  0x0000000002b186e8: shl    $0x3,%rdi
  0x0000000002b186ec: cmp    %rdi,%rsi
  0x0000000002b186ef: jne    0x0000000002b1877f
  0x0000000002b186f5: movabs $0x1b819968,%rbx   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b186ff: mov    0x8(%rax),%esi
  0x0000000002b18702: shl    $0x3,%rsi
  0x0000000002b18706: cmp    0x140(%rbx),%rsi
  0x0000000002b1870d: jne    0x0000000002b1871c
  0x0000000002b1870f: addq   $0x1,0x148(%rbx)
  0x0000000002b18717: jmpq   0x0000000002b1879b
  0x0000000002b1871c: cmp    0x150(%rbx),%rsi
  0x0000000002b18723: jne    0x0000000002b18732
  0x0000000002b18725: addq   $0x1,0x158(%rbx)
  0x0000000002b1872d: jmpq   0x0000000002b1879b
  0x0000000002b18732: cmpq   $0x0,0x140(%rbx)
  0x0000000002b1873d: jne    0x0000000002b18756
  0x0000000002b1873f: mov    %rsi,0x140(%rbx)
  0x0000000002b18746: movq   $0x1,0x148(%rbx)
  0x0000000002b18751: jmpq   0x0000000002b1879b
  0x0000000002b18756: cmpq   $0x0,0x150(%rbx)
  0x0000000002b18761: jne    0x0000000002b1877a
  0x0000000002b18763: mov    %rsi,0x150(%rbx)
  0x0000000002b1876a: movq   $0x1,0x158(%rbx)
  0x0000000002b18775: jmpq   0x0000000002b1879b
  0x0000000002b1877a: jmpq   0x0000000002b1879b
  0x0000000002b1877f: movabs $0x1b819968,%rbx   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b18789: subq   $0x1,0x138(%rbx)
  0x0000000002b18791: jmpq   0x0000000002b189c9
  0x0000000002b18796: jmpq   0x0000000002b1879b
  0x0000000002b1879b: mov    %rax,%rsi          ;*checkcast
                                                ; - java.io.ExpiringCache::entryFor@10

  0x0000000002b1879e: cmp    $0x0,%rsi
  0x0000000002b187a2: movabs $0x1b819968,%rdi   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b187ac: movabs $0x168,%rbx
  0x0000000002b187b6: je     0x0000000002b187c6
  0x0000000002b187bc: movabs $0x178,%rbx
  0x0000000002b187c6: mov    (%rdi,%rbx,1),%rax
  0x0000000002b187ca: lea    0x1(%rax),%rax
  0x0000000002b187ce: mov    %rax,(%rdi,%rbx,1)
  0x0000000002b187d2: je     0x0000000002b1899e  ;*ifnull
                                                ; - java.io.ExpiringCache::entryFor@15

  0x0000000002b187d8: mov    %rsi,0x50(%rsp)
  0x0000000002b187dd: movabs $0x1b819968,%rdi   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b187e7: addq   $0x1,0x188(%rdi)
  0x0000000002b187ef: callq  0x0000000065429b00  ;*invokestatic currentTimeMillis
                                                ; - java.io.ExpiringCache::entryFor@18
                                                ;   {runtime_call}
  0x0000000002b187f4: mov    0x50(%rsp),%rsi
  0x0000000002b187f9: cmp    (%rsi),%rax        ;*invokevirtual timestamp
                                                ; - java.io.ExpiringCache::entryFor@22
                                                ; implicit exception: dispatches to 0x0000000002b189d2
  0x0000000002b187fc: mov    %rsi,%r8
  0x0000000002b187ff: movabs $0x1b819968,%rdx   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b18809: addq   $0x1,0x1a8(%rdx)
  0x0000000002b18811: movabs $0x1b833788,%r8    ;   {metadata(method data for {method} {0x000000001b716018} &apos;timestamp&apos; &apos;()J&apos; in &apos;java/io/ExpiringCache$Entry&apos;)}
  0x0000000002b1881b: mov    0xdc(%r8),%edx
  0x0000000002b18822: add    $0x8,%edx
  0x0000000002b18825: mov    %edx,0xdc(%r8)
  0x0000000002b1882c: movabs $0x1b716010,%r8    ;   {metadata({method} {0x000000001b716018} &apos;timestamp&apos; &apos;()J&apos; in &apos;java/io/ExpiringCache$Entry&apos;)}
  0x0000000002b18836: and    $0x7ffff8,%edx
  0x0000000002b1883c: cmp    $0x0,%edx
  0x0000000002b1883f: je     0x0000000002b189d7
  0x0000000002b18845: mov    0x10(%rsi),%r8     ;*getfield timestamp
                                                ; - java.io.ExpiringCache$Entry::timestamp@1
                                                ; - java.io.ExpiringCache::entryFor@22

  0x0000000002b18849: sub    %r8,%rax
  0x0000000002b1884c: movabs $0x0,%r8
  0x0000000002b18856: mov    %rax,%rdx
  0x0000000002b18859: cmp    %r8,%rdx
  0x0000000002b1885c: movabs $0x1b819968,%r8    ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b18866: movabs $0x1d8,%rdx
  0x0000000002b18870: jge    0x0000000002b18880
  0x0000000002b18876: movabs $0x1c8,%rdx
  0x0000000002b18880: mov    (%r8,%rdx,1),%rdi
  0x0000000002b18884: lea    0x1(%rdi),%rdi
  0x0000000002b18888: mov    %rdi,(%r8,%rdx,1)
  0x0000000002b1888c: jge    0x0000000002b188a1  ;*lcmp
                                                ; - java.io.ExpiringCache::entryFor@29

  0x0000000002b18892: mov    0x48(%rsp),%r8
  0x0000000002b18897: mov    0x40(%rsp),%rdx
  0x0000000002b1889c: jmpq   0x0000000002b188e8  ;*aload_0
                                                ; - java.io.ExpiringCache::entryFor@42

  0x0000000002b188a1: mov    0x40(%rsp),%rdx
  0x0000000002b188a6: mov    0x10(%rdx),%r8     ;*getfield millisUntilExpiration
                                                ; - java.io.ExpiringCache::entryFor@35

  0x0000000002b188aa: cmp    %r8,%rax
  0x0000000002b188ad: movabs $0x1b819968,%r8    ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b188b7: movabs $0x1f8,%rdi
  0x0000000002b188c1: jge    0x0000000002b188d1
  0x0000000002b188c7: movabs $0x1e8,%rdi
  0x0000000002b188d1: mov    (%r8,%rdi,1),%rbx
  0x0000000002b188d5: lea    0x1(%rbx),%rbx
  0x0000000002b188d9: mov    %rbx,(%r8,%rdi,1)
  0x0000000002b188dd: jl     0x0000000002b1899e  ;*lcmp
                                                ; - java.io.ExpiringCache::entryFor@38

  0x0000000002b188e3: mov    0x48(%rsp),%r8
  0x0000000002b188e8: mov    0x20(%rdx),%edx
  0x0000000002b188eb: shl    $0x3,%rdx          ;*getfield map
                                                ; - java.io.ExpiringCache::entryFor@43

  0x0000000002b188ef: cmp    (%rdx),%rax        ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47
                                                ; implicit exception: dispatches to 0x0000000002b189ee
  0x0000000002b188f2: mov    %rdx,%rsi
  0x0000000002b188f5: movabs $0x1b819968,%rdi   ;   {metadata(method data for {method} {0x000000001b7062d8} &apos;entryFor&apos; &apos;(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;&apos; in &apos;java/io/ExpiringCache&apos;)}
  0x0000000002b188ff: mov    0x8(%rsi),%esi
  0x0000000002b18902: shl    $0x3,%rsi
  0x0000000002b18906: cmp    0x210(%rdi),%rsi
  0x0000000002b1890d: jne    0x0000000002b1891c
  0x0000000002b1890f: addq   $0x1,0x218(%rdi)
  0x0000000002b18917: jmpq   0x0000000002b18982
  0x0000000002b1891c: cmp    0x220(%rdi),%rsi
  0x0000000002b18923: jne    0x0000000002b18932
  0x0000000002b18925: addq   $0x1,0x228(%rdi)
  0x0000000002b1892d: jmpq   0x0000000002b18982
  0x0000000002b18932: cmpq   $0x0,0x210(%rdi)
  0x0000000002b1893d: jne    0x0000000002b18956
  0x0000000002b1893f: mov    %rsi,0x210(%rdi)
  0x0000000002b18946: movq   $0x1,0x218(%rdi)
  0x0000000002b18951: jmpq   0x0000000002b18982
  0x0000000002b18956: cmpq   $0x0,0x220(%rdi)
  0x0000000002b18961: jne    0x0000000002b1897a
  0x0000000002b18963: mov    %rsi,0x220(%rdi)
  0x0000000002b1896a: movq   $0x1,0x228(%rdi)
  0x0000000002b18975: jmpq   0x0000000002b18982
  0x0000000002b1897a: addq   $0x1,0x208(%rdi)
  0x0000000002b18982: nop
  0x0000000002b18983: nop
  0x0000000002b18984: nop
  0x0000000002b18985: movabs $0xffffffffffffffff,%rax
  0x0000000002b1898f: callq  0x0000000002a463e0  ; OopMap{off=1012}
                                                ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47
                                                ;   {virtual_call}
  0x0000000002b18994: movabs $0x0,%rsi          ;*aload_2
                                                ; - java.io.ExpiringCache::entryFor@55
                                                ;   {oop(NULL)}
  0x0000000002b1899e: mov    %rsi,%rax
  0x0000000002b189a1: add    $0x60,%rsp
  0x0000000002b189a5: pop    %rbp
  0x0000000002b189a6: test   %eax,-0x1f288ac(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b189ac: retq   
  0x0000000002b189ad: mov    %rsi,0x8(%rsp)
  0x0000000002b189b2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b189ba: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop off=1055}
                                                ;*synchronization entry
                                                ; - java.io.ExpiringCache::entryFor@-1
                                                ;   {runtime_call}
  0x0000000002b189bf: jmpq   0x0000000002b185fe
  0x0000000002b189c4: callq  0x0000000002afc580  ; OopMap{rdx=Oop r8=Oop rsi=Oop off=1065}
                                                ;*invokeinterface get
                                                ; - java.io.ExpiringCache::entryFor@5
                                                ;   {runtime_call}
  0x0000000002b189c9: mov    %rax,(%rsp)
  0x0000000002b189cd: callq  0x0000000002afe880  ; OopMap{[72]=Oop [64]=Oop off=1074}
                                                ;*checkcast
                                                ; - java.io.ExpiringCache::entryFor@10
                                                ;   {runtime_call}
  0x0000000002b189d2: callq  0x0000000002afc580  ; OopMap{[72]=Oop [64]=Oop rsi=Oop off=1079}
                                                ;*invokevirtual timestamp
                                                ; - java.io.ExpiringCache::entryFor@22
                                                ;   {runtime_call}
  0x0000000002b189d7: mov    %r8,0x8(%rsp)
  0x0000000002b189dc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b189e4: callq  0x0000000002b01ae0  ; OopMap{[72]=Oop [64]=Oop rsi=Oop off=1097}
                                                ;*synchronization entry
                                                ; - java.io.ExpiringCache$Entry::timestamp@-1
                                                ; - java.io.ExpiringCache::entryFor@22
                                                ;   {runtime_call}
  0x0000000002b189e9: jmpq   0x0000000002b18845
  0x0000000002b189ee: callq  0x0000000002afc580  ; OopMap{r8=Oop rdx=Oop off=1107}
                                                ;*invokeinterface remove
                                                ; - java.io.ExpiringCache::entryFor@47
                                                ;   {runtime_call}
  0x0000000002b189f3: nop
  0x0000000002b189f4: nop
  0x0000000002b189f5: mov    0x2a8(%r15),%rax
  0x0000000002b189fc: movabs $0x0,%r10
  0x0000000002b18a06: mov    %r10,0x2a8(%r15)
  0x0000000002b18a0d: movabs $0x0,%r10
  0x0000000002b18a17: mov    %r10,0x2b0(%r15)
  0x0000000002b18a1e: add    $0x60,%rsp
  0x0000000002b18a22: pop    %rbp
  0x0000000002b18a23: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b18a28: hlt    
  0x0000000002b18a29: hlt    
  0x0000000002b18a2a: hlt    
  0x0000000002b18a2b: hlt    
  0x0000000002b18a2c: hlt    
  0x0000000002b18a2d: hlt    
  0x0000000002b18a2e: hlt    
  0x0000000002b18a2f: hlt    
  0x0000000002b18a30: hlt    
  0x0000000002b18a31: hlt    
  0x0000000002b18a32: hlt    
  0x0000000002b18a33: hlt    
  0x0000000002b18a34: hlt    
  0x0000000002b18a35: hlt    
  0x0000000002b18a36: hlt    
  0x0000000002b18a37: hlt    
  0x0000000002b18a38: hlt    
  0x0000000002b18a39: hlt    
  0x0000000002b18a3a: hlt    
  0x0000000002b18a3b: hlt    
  0x0000000002b18a3c: hlt    
  0x0000000002b18a3d: hlt    
  0x0000000002b18a3e: hlt    
  0x0000000002b18a3f: hlt    
[Stub Code]
  0x0000000002b18a40: nop                       ;   {no_reloc}
  0x0000000002b18a41: nop
  0x0000000002b18a42: nop
  0x0000000002b18a43: nop
  0x0000000002b18a44: nop
  0x0000000002b18a45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b18a4f: jmpq   0x0000000002b18a4f  ;   {runtime_call}
  0x0000000002b18a54: nop
  0x0000000002b18a55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b18a5f: jmpq   0x0000000002b18a5f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b18a64: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b18a69: mov    %rsp,-0x28(%rsp)
  0x0000000002b18a6e: sub    $0x80,%rsp
  0x0000000002b18a75: mov    %rax,0x78(%rsp)
  0x0000000002b18a7a: mov    %rcx,0x70(%rsp)
  0x0000000002b18a7f: mov    %rdx,0x68(%rsp)
  0x0000000002b18a84: mov    %rbx,0x60(%rsp)
  0x0000000002b18a89: mov    %rbp,0x50(%rsp)
  0x0000000002b18a8e: mov    %rsi,0x48(%rsp)
  0x0000000002b18a93: mov    %rdi,0x40(%rsp)
  0x0000000002b18a98: mov    %r8,0x38(%rsp)
  0x0000000002b18a9d: mov    %r9,0x30(%rsp)
  0x0000000002b18aa2: mov    %r10,0x28(%rsp)
  0x0000000002b18aa7: mov    %r11,0x20(%rsp)
  0x0000000002b18aac: mov    %r12,0x18(%rsp)
  0x0000000002b18ab1: mov    %r13,0x10(%rsp)
  0x0000000002b18ab6: mov    %r14,0x8(%rsp)
  0x0000000002b18abb: mov    %r15,(%rsp)
  0x0000000002b18abf: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b18ac9: movabs $0x2b18a69,%rdx    ;   {internal_word}
  0x0000000002b18ad3: mov    %rsp,%r8
  0x0000000002b18ad6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b18ada: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b18adf: hlt    
[Deopt Handler Code]
  0x0000000002b18ae0: movabs $0x2b18ae0,%r10    ;   {section_word}
  0x0000000002b18aea: push   %r10
  0x0000000002b18aec: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b18af1: hlt    
  0x0000000002b18af2: hlt    
  0x0000000002b18af3: hlt    
  0x0000000002b18af4: hlt    
  0x0000000002b18af5: hlt    
  0x0000000002b18af6: hlt    
  0x0000000002b18af7: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000002b185a0' size='2432' address='0x0000000002b18410' relocation_offset='288' insts_offset='400' stub_offset='1584' scopes_data_offset='1792' scopes_pcs_offset='1992' dependencies_offset='2392' nul_chk_table_offset='2400' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='519' iicount='519' stamp='0.531'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b16310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b5fccc0} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000000002b16460: mov    0x8(%rdx),%r10d
  0x0000000002b16464: shl    $0x3,%r10
  0x0000000002b16468: cmp    %r10,%rax
  0x0000000002b1646b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b16471: data16 xchg %ax,%ax
  0x0000000002b16474: nopl   0x0(%rax,%rax,1)
  0x0000000002b1647c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b16480: mov    %eax,-0x6000(%rsp)
  0x0000000002b16487: push   %rbp
  0x0000000002b16488: sub    $0x80,%rsp
  0x0000000002b1648f: mov    %r8d,0x30(%rsp)
  0x0000000002b16494: mov    %rdx,%rbp
  0x0000000002b16497: mov    (%rdx),%rax
  0x0000000002b1649a: mov    %rax,%r10
  0x0000000002b1649d: and    $0x7,%r10
  0x0000000002b164a1: cmp    $0x5,%r10
  0x0000000002b164a5: jne    0x0000000002b1676a
  0x0000000002b164ab: mov    $0xf8001b07,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002b164b1: movabs $0x0,%r10
  0x0000000002b164bb: lea    (%r10,%r11,8),%r10
  0x0000000002b164bf: mov    0xa8(%r10),%r10
  0x0000000002b164c6: mov    %r10,%r11
  0x0000000002b164c9: or     %r15,%r11
  0x0000000002b164cc: mov    %r11,%r8
  0x0000000002b164cf: xor    %rax,%r8
  0x0000000002b164d2: test   $0xffffffffffffff87,%r8
  0x0000000002b164d9: jne    0x0000000002b167cd  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1

  0x0000000002b164df: mov    0x10(%rbp),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b164e3: mov    %r12d,0x14(%rbp)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2

  0x0000000002b164e7: mov    0xc(%r12,%r9,8),%edi  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ; implicit exception: dispatches to 0x0000000002b168e4
  0x0000000002b164ec: mov    0xc(%rbp),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b164ef: mov    %ecx,%r10d
  0x0000000002b164f2: sub    %edi,%r10d
  0x0000000002b164f5: mov    %r9,%rsi
  0x0000000002b164f8: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b164fc: inc    %r10d
  0x0000000002b164ff: mov    %ecx,%r8d
  0x0000000002b16502: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16505: test   %r10d,%r10d
  0x0000000002b16508: jg     0x0000000002b16555  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1650a: mov    %r8d,0xc(%rbp)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1650e: test   %rsi,%rsi
  0x0000000002b16511: je     0x0000000002b16740
  0x0000000002b16517: mov    0xc(%rsi),%r10d
  0x0000000002b1651b: cmp    %r10d,%ecx
  0x0000000002b1651e: jae    0x0000000002b16751
  0x0000000002b16524: mov    0x30(%rsp),%r11d
  0x0000000002b16529: mov    %r11w,0x10(%rsi,%rcx,2)
  0x0000000002b1652f: mov    $0x7,%r10d
  0x0000000002b16535: and    0x0(%rbp),%r10
  0x0000000002b16539: cmp    $0x5,%r10
  0x0000000002b1653d: jne    0x0000000002b167f8  ;*areturn
                                                ; - java.lang.StringBuffer::append@12

  0x0000000002b16543: mov    %rbp,%rax
  0x0000000002b16546: add    $0x80,%rsp
  0x0000000002b1654d: pop    %rbp
  0x0000000002b1654e: test   %eax,-0x1f26554(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b16554: retq   
  0x0000000002b16555: mov    %edi,%r10d
  0x0000000002b16558: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1655b: mov    %r10d,%edx
  0x0000000002b1655e: sub    %ecx,%edx
  0x0000000002b16560: inc    %edx
  0x0000000002b16562: test   %edx,%edx
  0x0000000002b16564: jge    0x0000000002b166a0  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1656a: mov    %r8d,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1656d: test   %r10d,%r10d
  0x0000000002b16570: jle    0x0000000002b1657e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16572: mov    $0x7ffffff7,%ebx
  0x0000000002b16577: sub    %r10d,%ebx
  0x0000000002b1657a: test   %ebx,%ebx
  0x0000000002b1657c: jge    0x0000000002b165a5  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1657e: mov    %edi,0x48(%rsp)
  0x0000000002b16582: mov    %r9d,0x34(%rsp)
  0x0000000002b16587: mov    %rsi,0x20(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1658c: mov    %rbp,%rdx
  0x0000000002b1658f: callq  0x0000000002a461a0  ; OopMap{rbp=Oop [32]=Oop [52]=NarrowOop off=308}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {optimized virtual_call}
  0x0000000002b16594: mov    0x20(%rsp),%rsi
  0x0000000002b16599: mov    %eax,%r10d
  0x0000000002b1659c: mov    0x34(%rsp),%r9d
  0x0000000002b165a1: mov    0x48(%rsp),%edi    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b165a5: cmp    $0x80000,%r10d
  0x0000000002b165ac: ja     0x0000000002b168a0
  0x0000000002b165b2: movslq %r10d,%r11
  0x0000000002b165b5: shl    %r11
  0x0000000002b165b8: add    $0x17,%r11
  0x0000000002b165bc: mov    %r11,%r8
  0x0000000002b165bf: and    $0xfffffffffffffff8,%r8
  0x0000000002b165c3: cmp    $0x80000,%r10d
  0x0000000002b165ca: ja     0x0000000002b166ec
  0x0000000002b165d0: mov    0x60(%r15),%rbx
  0x0000000002b165d4: mov    %rbx,%rcx
  0x0000000002b165d7: add    %r8,%rcx
  0x0000000002b165da: cmp    0x70(%r15),%rcx
  0x0000000002b165de: jae    0x0000000002b166ec
  0x0000000002b165e4: mov    %rcx,0x60(%r15)
  0x0000000002b165e8: prefetchw 0xc0(%rcx)
  0x0000000002b165ef: movq   $0x1,(%rbx)
  0x0000000002b165f6: prefetchw 0x100(%rcx)
  0x0000000002b165fd: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002b16604: mov    %r10d,0xc(%rbx)
  0x0000000002b16608: prefetchw 0x140(%rcx)
  0x0000000002b1660f: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16616: cmp    %r10d,%edi
  0x0000000002b16619: mov    %r10d,%esi
  0x0000000002b1661c: cmovl  %edi,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1661f: mov    %rbx,%r13
  0x0000000002b16622: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16626: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b1662a: shr    $0x3,%r11
  0x0000000002b1662e: mov    %r11,%rcx
  0x0000000002b16631: add    $0xfffffffffffffffe,%rcx
  0x0000000002b16635: cmp    %esi,%edi
  0x0000000002b16637: jb     0x0000000002b168a8
  0x0000000002b1663d: cmp    %esi,%r10d
  0x0000000002b16640: jb     0x0000000002b168a8
  0x0000000002b16646: test   %esi,%esi
  0x0000000002b16648: jle    0x0000000002b168d2
  0x0000000002b1664e: lea    0x10(%r12,%r9,8),%r9
  0x0000000002b16653: cmp    %r10d,%esi
  0x0000000002b16656: jl     0x0000000002b166a9
  0x0000000002b16658: add    $0xfffffffffffffff0,%r8
  0x0000000002b1665c: shr    $0x3,%r8
  0x0000000002b16660: mov    %r9,%rcx
  0x0000000002b16663: mov    %r13,%rdx
  0x0000000002b16666: movabs $0x2a52ca0,%r10
  0x0000000002b16670: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16673: mov    0xc(%rbp),%ecx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16676: mov    %rbx,%r10
  0x0000000002b16679: shr    $0x3,%r10
  0x0000000002b1667d: mov    %r10d,0x10(%rbp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16681: mov    %ecx,%r8d
  0x0000000002b16684: inc    %r8d               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16687: mov    %rbp,%r10
  0x0000000002b1668a: shr    $0x9,%r10
  0x0000000002b1668e: mov    $0xe7a5000,%r11d
  0x0000000002b16694: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16698: mov    %rbx,%rsi
  0x0000000002b1669b: jmpq   0x0000000002b1650a
  0x0000000002b166a0: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b166a4: jmpq   0x0000000002b1656d
  0x0000000002b166a9: movslq %esi,%r8
  0x0000000002b166ac: mov    %r8,%r10
  0x0000000002b166af: shl    %r10
  0x0000000002b166b2: add    $0x10,%r10
  0x0000000002b166b6: mov    %r10,%rcx
  0x0000000002b166b9: and    $0xfffffffffffffff9,%rcx
  0x0000000002b166bd: mov    %rbx,%rdi
  0x0000000002b166c0: add    %rcx,%rdi
  0x0000000002b166c3: shr    $0x3,%r10
  0x0000000002b166c7: sub    %r10,%r11
  0x0000000002b166ca: mov    %r11,%rcx
  0x0000000002b166cd: xor    %rax,%rax
  0x0000000002b166d0: shl    $0x3,%rcx
  0x0000000002b166d4: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b166d7: mov    %r9,%rcx
  0x0000000002b166da: mov    %r13,%rdx
  0x0000000002b166dd: movabs $0x2a52980,%r10
  0x0000000002b166e7: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b166ea: jmp    0x0000000002b16673
  0x0000000002b166ec: mov    %edi,0x60(%rsp)
  0x0000000002b166f0: mov    %r9d,0x34(%rsp)
  0x0000000002b166f5: mov    %r8,0x38(%rsp)
  0x0000000002b166fa: mov    %r11,0x28(%rsp)
  0x0000000002b166ff: mov    %r10d,0x20(%rsp)   ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16704: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b1670e: mov    0x20(%rsp),%r8d
  0x0000000002b16713: mov    %rsi,0x58(%rsp)
  0x0000000002b16718: data16 xchg %ax,%ax
  0x0000000002b1671b: callq  0x0000000002b04e60  ; OopMap{rbp=Oop [52]=NarrowOop [88]=Oop off=704}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x0000000002b16720: mov    0x20(%rsp),%r10d
  0x0000000002b16725: mov    0x28(%rsp),%r11
  0x0000000002b1672a: mov    0x38(%rsp),%r8
  0x0000000002b1672f: mov    0x34(%rsp),%r9d
  0x0000000002b16734: mov    0x60(%rsp),%edi
  0x0000000002b16738: mov    %rax,%rbx
  0x0000000002b1673b: jmpq   0x0000000002b16616
  0x0000000002b16740: mov    $0xfffffff6,%edx
  0x0000000002b16745: mov    %ecx,0x24(%rsp)
  0x0000000002b16749: xchg   %ax,%ax
  0x0000000002b1674b: callq  0x0000000002a457a0  ; OopMap{rbp=Oop off=752}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x0000000002b16750: int3   
  0x0000000002b16751: mov    $0xffffffe4,%edx
  0x0000000002b16756: mov    %rsi,0x38(%rsp)
  0x0000000002b1675b: mov    %ecx,0x34(%rsp)
  0x0000000002b1675f: callq  0x0000000002a457a0  ; OopMap{rbp=Oop [56]=Oop off=772}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x0000000002b16764: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b16765: lock cmpxchg %r10,(%rdx)
  0x0000000002b1676a: lea    0x70(%rsp),%rbx
  0x0000000002b1676f: mov    (%rdx),%rax
  0x0000000002b16772: test   $0x2,%rax
  0x0000000002b16778: jne    0x0000000002b1679e
  0x0000000002b1677a: or     $0x1,%rax
  0x0000000002b1677e: mov    %rax,(%rbx)
  0x0000000002b16781: lock cmpxchg %rbx,(%rdx)
  0x0000000002b16786: je     0x0000000002b167b7
  0x0000000002b1678c: sub    %rsp,%rax
  0x0000000002b1678f: and    $0xfffffffffffff007,%rax
  0x0000000002b16796: mov    %rax,(%rbx)
  0x0000000002b16799: jmpq   0x0000000002b167b7
  0x0000000002b1679e: movq   $0x3,(%rbx)
  0x0000000002b167a5: mov    %rax,%rbx
  0x0000000002b167a8: mov    0x16(%rbx),%rax
  0x0000000002b167ac: test   %rax,%rax
  0x0000000002b167af: jne    0x0000000002b167b7
  0x0000000002b167b1: lock cmpxchg %r15,0x16(%rbx)
  0x0000000002b167b7: je     0x0000000002b164df
  0x0000000002b167bd: lea    0x70(%rsp),%r8
  0x0000000002b167c2: nop
  0x0000000002b167c3: callq  0x0000000002b04f60  ; OopMap{rbp=Oop off=872}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1
                                                ;   {runtime_call}
  0x0000000002b167c8: jmpq   0x0000000002b164df
  0x0000000002b167cd: test   $0x7,%r8
  0x0000000002b167d4: jne    0x0000000002b16765
  0x0000000002b167d6: test   $0x300,%r8
  0x0000000002b167dd: jne    0x0000000002b167ec
  0x0000000002b167df: and    $0x37f,%rax
  0x0000000002b167e6: mov    %rax,%r11
  0x0000000002b167e9: or     %r15,%r11
  0x0000000002b167ec: lock cmpxchg %r11,(%rdx)
  0x0000000002b167f1: jne    0x0000000002b167bd
  0x0000000002b167f3: jmpq   0x0000000002b164df
  0x0000000002b167f8: lea    0x70(%rsp),%rax
  0x0000000002b167fd: cmpq   $0x0,(%rax)
  0x0000000002b16804: je     0x0000000002b16880
  0x0000000002b1680a: mov    0x0(%rbp),%r10
  0x0000000002b1680e: test   $0x2,%r10
  0x0000000002b16815: je     0x0000000002b16877
  0x0000000002b16817: mov    0x16(%r10),%rax
  0x0000000002b1681b: xor    %r15,%rax
  0x0000000002b1681e: or     0x26(%r10),%rax
  0x0000000002b16822: jne    0x0000000002b16880
  0x0000000002b16824: mov    0x36(%r10),%rax
  0x0000000002b16828: or     0x3e(%r10),%rax
  0x0000000002b1682c: jne    0x0000000002b16838
  0x0000000002b1682e: movq   $0x0,0x16(%r10)
  0x0000000002b16836: jmp    0x0000000002b16880
  0x0000000002b16838: cmpq   $0x0,0x46(%r10)
  0x0000000002b16840: je     0x0000000002b1686b
  0x0000000002b16842: movq   $0x0,0x16(%r10)
  0x0000000002b1684a: lock addl $0x0,(%rsp)
  0x0000000002b1684f: cmpq   $0x0,0x46(%r10)
  0x0000000002b16857: jne    0x0000000002b16870
  0x0000000002b16859: movabs $0x0,%rax
  0x0000000002b16863: lock cmpxchg %r15,0x16(%r10)
  0x0000000002b16869: jne    0x0000000002b16870
  0x0000000002b1686b: or     $0x1,%eax
  0x0000000002b1686e: jmp    0x0000000002b16880
  0x0000000002b16870: test   $0x0,%eax
  0x0000000002b16875: jmp    0x0000000002b16880
  0x0000000002b16877: mov    (%rax),%r10
  0x0000000002b1687a: lock cmpxchg %r10,0x0(%rbp)
  0x0000000002b16880: je     0x0000000002b16543
  0x0000000002b16886: mov    %rbp,%rcx
  0x0000000002b16889: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1

  0x0000000002b1688e: movabs $0x653bdf90,%r10
  0x0000000002b16898: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12

  0x0000000002b1689b: jmpq   0x0000000002b16543
  0x0000000002b168a0: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b168a3: jmpq   0x0000000002b165b5
  0x0000000002b168a8: mov    %r13,%rdi
  0x0000000002b168ab: xor    %rax,%rax
  0x0000000002b168ae: shl    $0x3,%rcx
  0x0000000002b168b2: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b168b5: xor    %r8d,%r8d
  0x0000000002b168b8: mov    %rbx,%r9
  0x0000000002b168bb: xor    %edi,%edi
  0x0000000002b168bd: mov    %rbx,0x48(%rsp)
  0x0000000002b168c2: nop
  0x0000000002b168c3: callq  0x0000000002b0e460  ; OopMap{rbp=Oop [72]=Oop off=1128}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x0000000002b168c8: mov    0x48(%rsp),%rbx
  0x0000000002b168cd: jmpq   0x0000000002b16673
  0x0000000002b168d2: mov    %r13,%rdi
  0x0000000002b168d5: xor    %rax,%rax
  0x0000000002b168d8: shl    $0x3,%rcx
  0x0000000002b168dc: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b168df: jmpq   0x0000000002b16673
  0x0000000002b168e4: mov    $0xfffffff6,%edx
  0x0000000002b168e9: xchg   %ax,%ax
  0x0000000002b168eb: callq  0x0000000002a457a0  ; OopMap{rbp=Oop off=1168}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x0000000002b168f0: int3   
  0x0000000002b168f1: jmp    0x0000000002b168f3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b168f3: mov    %rax,%rbx
  0x0000000002b168f6: jmp    0x0000000002b168fb  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b168f8: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x0000000002b168fb: mov    $0x7,%r10d
  0x0000000002b16901: and    0x0(%rbp),%r10
  0x0000000002b16905: cmp    $0x5,%r10
  0x0000000002b16909: jne    0x0000000002b1691b
  0x0000000002b1690b: mov    %rbx,%rdx
  0x0000000002b1690e: add    $0x80,%rsp
  0x0000000002b16915: pop    %rbp
  0x0000000002b16916: jmpq   0x0000000002b0e5e0  ;   {runtime_call}
  0x0000000002b1691b: lea    0x70(%rsp),%rax
  0x0000000002b16920: cmpq   $0x0,(%rax)
  0x0000000002b16927: je     0x0000000002b169a3
  0x0000000002b1692d: mov    0x0(%rbp),%r10
  0x0000000002b16931: test   $0x2,%r10
  0x0000000002b16938: je     0x0000000002b1699a
  0x0000000002b1693a: mov    0x16(%r10),%rax
  0x0000000002b1693e: xor    %r15,%rax
  0x0000000002b16941: or     0x26(%r10),%rax
  0x0000000002b16945: jne    0x0000000002b169a3
  0x0000000002b16947: mov    0x36(%r10),%rax
  0x0000000002b1694b: or     0x3e(%r10),%rax
  0x0000000002b1694f: jne    0x0000000002b1695b
  0x0000000002b16951: movq   $0x0,0x16(%r10)
  0x0000000002b16959: jmp    0x0000000002b169a3
  0x0000000002b1695b: cmpq   $0x0,0x46(%r10)
  0x0000000002b16963: je     0x0000000002b1698e
  0x0000000002b16965: movq   $0x0,0x16(%r10)
  0x0000000002b1696d: lock addl $0x0,(%rsp)
  0x0000000002b16972: cmpq   $0x0,0x46(%r10)
  0x0000000002b1697a: jne    0x0000000002b16993
  0x0000000002b1697c: movabs $0x0,%rax
  0x0000000002b16986: lock cmpxchg %r15,0x16(%r10)
  0x0000000002b1698c: jne    0x0000000002b16993
  0x0000000002b1698e: or     $0x1,%eax
  0x0000000002b16991: jmp    0x0000000002b169a3
  0x0000000002b16993: test   $0x0,%eax
  0x0000000002b16998: jmp    0x0000000002b169a3
  0x0000000002b1699a: mov    (%rax),%r10
  0x0000000002b1699d: lock cmpxchg %r10,0x0(%rbp)
  0x0000000002b169a3: je     0x0000000002b1690b
  0x0000000002b169a9: mov    %rbp,%rcx
  0x0000000002b169ac: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1

  0x0000000002b169b1: movabs $0x653bdf90,%r10
  0x0000000002b169bb: callq  *%r10
  0x0000000002b169be: jmpq   0x0000000002b1690b
  0x0000000002b169c3: hlt    
  0x0000000002b169c4: hlt    
  0x0000000002b169c5: hlt    
  0x0000000002b169c6: hlt    
  0x0000000002b169c7: hlt    
  0x0000000002b169c8: hlt    
  0x0000000002b169c9: hlt    
  0x0000000002b169ca: hlt    
  0x0000000002b169cb: hlt    
  0x0000000002b169cc: hlt    
  0x0000000002b169cd: hlt    
  0x0000000002b169ce: hlt    
  0x0000000002b169cf: hlt    
  0x0000000002b169d0: hlt    
  0x0000000002b169d1: hlt    
  0x0000000002b169d2: hlt    
  0x0000000002b169d3: hlt    
  0x0000000002b169d4: hlt    
  0x0000000002b169d5: hlt    
  0x0000000002b169d6: hlt    
  0x0000000002b169d7: hlt    
  0x0000000002b169d8: hlt    
  0x0000000002b169d9: hlt    
  0x0000000002b169da: hlt    
  0x0000000002b169db: hlt    
  0x0000000002b169dc: hlt    
  0x0000000002b169dd: hlt    
  0x0000000002b169de: hlt    
  0x0000000002b169df: hlt    
[Stub Code]
  0x0000000002b169e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002b169ea: jmpq   0x0000000002b169ea  ;   {runtime_call}
[Exception Handler]
  0x0000000002b169ef: jmpq   0x0000000002a6f2a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002b169f4: callq  0x0000000002b169f9
  0x0000000002b169f9: subq   $0x5,(%rsp)
  0x0000000002b169fe: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b16a03: hlt    
  0x0000000002b16a04: hlt    
  0x0000000002b16a05: hlt    
  0x0000000002b16a06: hlt    
  0x0000000002b16a07: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x0000000002b16460' size='3040' address='0x0000000002b16310' relocation_offset='288' insts_offset='336' stub_offset='1744' scopes_data_offset='1840' scopes_pcs_offset='2192' dependencies_offset='2944' handler_table_offset='2952' nul_chk_table_offset='3024' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='32264' iicount='32264' stamp='0.547'/>
<writer thread='49028'/>
<task_queued compile_id='27' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='1152' iicount='1152' level='3' stamp='0.547' comment='tiered' hot_count='1152'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b17bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002b17d60: mov    0x8(%rdx),%r10d
  0x0000000002b17d64: shl    $0x3,%r10
  0x0000000002b17d68: cmp    %rax,%r10
  0x0000000002b17d6b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b17d71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b17d7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b17d80: mov    %eax,-0x6000(%rsp)
  0x0000000002b17d87: push   %rbp
  0x0000000002b17d88: sub    $0x40,%rsp
  0x0000000002b17d8c: movabs $0x1b8363d0,%r8    ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17d96: mov    0xdc(%r8),%esi
  0x0000000002b17d9d: add    $0x8,%esi
  0x0000000002b17da0: mov    %esi,0xdc(%r8)
  0x0000000002b17da7: movabs $0x1b610d78,%r8    ;   {metadata({method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17db1: and    $0x1ff8,%esi
  0x0000000002b17db7: cmp    $0x0,%esi
  0x0000000002b17dba: je     0x0000000002b180af  ;*invokestatic getSecurityManager
                                                ; - java.io.File::exists@0

  0x0000000002b17dc0: movabs $0x1b8363d0,%r8    ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17dca: addq   $0x1,0x108(%r8)
  0x0000000002b17dd2: movabs $0x1b797368,%r8    ;   {metadata(method data for {method} {0x000000001b5a8710} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002b17ddc: mov    0xdc(%r8),%esi
  0x0000000002b17de3: add    $0x8,%esi
  0x0000000002b17de6: mov    %esi,0xdc(%r8)
  0x0000000002b17ded: movabs $0x1b5a8708,%r8    ;   {metadata({method} {0x000000001b5a8710} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002b17df7: and    $0x7ffff8,%esi
  0x0000000002b17dfd: cmp    $0x0,%esi
  0x0000000002b17e00: je     0x0000000002b180c6
  0x0000000002b17e06: movabs $0x76bd00c78,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002b17e10: mov    0x74(%r8),%esi
  0x0000000002b17e14: shl    $0x3,%rsi          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0
                                                ; - java.io.File::exists@0

  0x0000000002b17e18: cmp    $0x0,%rsi
  0x0000000002b17e1c: movabs $0x1b8363d0,%r8    ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17e26: movabs $0x118,%rdi
  0x0000000002b17e30: je     0x0000000002b17e40
  0x0000000002b17e36: movabs $0x128,%rdi
  0x0000000002b17e40: mov    (%r8,%rdi,1),%rbx
  0x0000000002b17e44: lea    0x1(%rbx),%rbx
  0x0000000002b17e48: mov    %rbx,(%r8,%rdi,1)
  0x0000000002b17e4c: jne    0x0000000002b17e5c  ;*ifnull
                                                ; - java.io.File::exists@5

  0x0000000002b17e52: mov    %rdx,0x28(%rsp)
  0x0000000002b17e57: jmpq   0x0000000002b17f14  ;*aload_0
                                                ; - java.io.File::exists@16

  0x0000000002b17e5c: mov    0x10(%rdx),%r8d
  0x0000000002b17e60: shl    $0x3,%r8           ;*getfield path
                                                ; - java.io.File::exists@10

  0x0000000002b17e64: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002b180dd
  0x0000000002b17e67: mov    %rsi,%rdi
  0x0000000002b17e6a: movabs $0x1b8363d0,%rbx   ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17e74: mov    0x8(%rdi),%edi
  0x0000000002b17e77: shl    $0x3,%rdi
  0x0000000002b17e7b: cmp    0x140(%rbx),%rdi
  0x0000000002b17e82: jne    0x0000000002b17e91
  0x0000000002b17e84: addq   $0x1,0x148(%rbx)
  0x0000000002b17e8c: jmpq   0x0000000002b17ef7
  0x0000000002b17e91: cmp    0x150(%rbx),%rdi
  0x0000000002b17e98: jne    0x0000000002b17ea7
  0x0000000002b17e9a: addq   $0x1,0x158(%rbx)
  0x0000000002b17ea2: jmpq   0x0000000002b17ef7
  0x0000000002b17ea7: cmpq   $0x0,0x140(%rbx)
  0x0000000002b17eb2: jne    0x0000000002b17ecb
  0x0000000002b17eb4: mov    %rdi,0x140(%rbx)
  0x0000000002b17ebb: movq   $0x1,0x148(%rbx)
  0x0000000002b17ec6: jmpq   0x0000000002b17ef7
  0x0000000002b17ecb: cmpq   $0x0,0x150(%rbx)
  0x0000000002b17ed6: jne    0x0000000002b17eef
  0x0000000002b17ed8: mov    %rdi,0x150(%rbx)
  0x0000000002b17edf: movq   $0x1,0x158(%rbx)
  0x0000000002b17eea: jmpq   0x0000000002b17ef7
  0x0000000002b17eef: addq   $0x1,0x138(%rbx)
  0x0000000002b17ef7: mov    %rdx,0x28(%rsp)
  0x0000000002b17efc: mov    %rsi,%rdx          ;*invokevirtual checkRead
                                                ; - java.io.File::exists@13

  0x0000000002b17eff: nop
  0x0000000002b17f00: nop
  0x0000000002b17f01: nop
  0x0000000002b17f02: nop
  0x0000000002b17f03: nop
  0x0000000002b17f04: nop
  0x0000000002b17f05: movabs $0xffffffffffffffff,%rax
  0x0000000002b17f0f: callq  0x0000000002a463e0  ; OopMap{[40]=Oop off=436}
                                                ;*invokevirtual checkRead
                                                ; - java.io.File::exists@13
                                                ;   {virtual_call}
  0x0000000002b17f14: mov    0x28(%rsp),%rdx
  0x0000000002b17f19: movabs $0x1b8363d0,%rsi   ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17f23: mov    0x8(%rdx),%edx
  0x0000000002b17f26: shl    $0x3,%rdx
  0x0000000002b17f2a: cmp    0x170(%rsi),%rdx
  0x0000000002b17f31: jne    0x0000000002b17f40
  0x0000000002b17f33: addq   $0x1,0x178(%rsi)
  0x0000000002b17f3b: jmpq   0x0000000002b17fa6
  0x0000000002b17f40: cmp    0x180(%rsi),%rdx
  0x0000000002b17f47: jne    0x0000000002b17f56
  0x0000000002b17f49: addq   $0x1,0x188(%rsi)
  0x0000000002b17f51: jmpq   0x0000000002b17fa6
  0x0000000002b17f56: cmpq   $0x0,0x170(%rsi)
  0x0000000002b17f61: jne    0x0000000002b17f7a
  0x0000000002b17f63: mov    %rdx,0x170(%rsi)
  0x0000000002b17f6a: movq   $0x1,0x178(%rsi)
  0x0000000002b17f75: jmpq   0x0000000002b17fa6
  0x0000000002b17f7a: cmpq   $0x0,0x180(%rsi)
  0x0000000002b17f85: jne    0x0000000002b17f9e
  0x0000000002b17f87: mov    %rdx,0x180(%rsi)
  0x0000000002b17f8e: movq   $0x1,0x188(%rsi)
  0x0000000002b17f99: jmpq   0x0000000002b17fa6
  0x0000000002b17f9e: addq   $0x1,0x168(%rsi)
  0x0000000002b17fa6: mov    0x28(%rsp),%rdx    ;*invokevirtual isInvalid
                                                ; - java.io.File::exists@17

  0x0000000002b17fab: nop
  0x0000000002b17fac: nop
  0x0000000002b17fad: nop
  0x0000000002b17fae: nop
  0x0000000002b17faf: callq  0x0000000002a461a0  ; OopMap{[40]=Oop off=596}
                                                ;*invokevirtual isInvalid
                                                ; - java.io.File::exists@17
                                                ;   {optimized virtual_call}
  0x0000000002b17fb4: cmp    $0x0,%eax
  0x0000000002b17fb7: movabs $0x1b8363d0,%r8    ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b17fc1: movabs $0x198,%rdx
  0x0000000002b17fcb: je     0x0000000002b17fdb
  0x0000000002b17fd1: movabs $0x1a8,%rdx
  0x0000000002b17fdb: mov    (%r8,%rdx,1),%rsi
  0x0000000002b17fdf: lea    0x1(%rsi),%rsi
  0x0000000002b17fe3: mov    %rsi,(%r8,%rdx,1)
  0x0000000002b17fe7: jne    0x0000000002b1809e  ;*ifeq
                                                ; - java.io.File::exists@20

  0x0000000002b17fed: mov    0x28(%rsp),%rdx
  0x0000000002b17ff2: movabs $0x76bd71070,%rsi  ;   {oop(a &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b17ffc: mov    %rsi,%r8
  0x0000000002b17fff: movabs $0x1b8363d0,%rdi   ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b18009: movabs $0x7c002cc20,%r10  ;   {metadata(&apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b18013: mov    %r10,0x1c0(%rdi)
  0x0000000002b1801a: addq   $0x1,0x1c8(%rdi)
  0x0000000002b18022: mov    %rdx,%r8
  0x0000000002b18025: mov    %rsi,%rdx          ;*invokevirtual getBooleanAttributes
                                                ; - java.io.File::exists@29

  0x0000000002b18028: nop
  0x0000000002b18029: nop
  0x0000000002b1802a: nop
  0x0000000002b1802b: nop
  0x0000000002b1802c: nop
  0x0000000002b1802d: nop
  0x0000000002b1802e: nop
  0x0000000002b1802f: callq  0x0000000002a461a0  ; OopMap{off=724}
                                                ;*invokevirtual getBooleanAttributes
                                                ; - java.io.File::exists@29
                                                ;   {optimized virtual_call}
  0x0000000002b18034: and    $0x1,%eax
  0x0000000002b18037: cmp    $0x0,%eax
  0x0000000002b1803a: movabs $0x1b8363d0,%rax   ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b18044: movabs $0x1e8,%rsi
  0x0000000002b1804e: je     0x0000000002b1805e
  0x0000000002b18054: movabs $0x1f8,%rsi
  0x0000000002b1805e: mov    (%rax,%rsi,1),%rdi
  0x0000000002b18062: lea    0x1(%rdi),%rdi
  0x0000000002b18066: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b1806a: je     0x0000000002b1808a  ;*ifeq
                                                ; - java.io.File::exists@34

  0x0000000002b18070: movabs $0x1b8363d0,%rax   ;   {metadata(method data for {method} {0x000000001b610d80} &apos;exists&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002b1807a: incl   0x208(%rax)
  0x0000000002b18080: mov    $0x1,%eax
  0x0000000002b18085: jmpq   0x0000000002b1808f  ;*goto
                                                ; - java.io.File::exists@38

  0x0000000002b1808a: mov    $0x0,%eax
  0x0000000002b1808f: and    $0x1,%eax
  0x0000000002b18092: add    $0x40,%rsp
  0x0000000002b18096: pop    %rbp
  0x0000000002b18097: test   %eax,-0x1f27f9d(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1809d: retq                      ;*ireturn
                                                ; - java.io.File::exists@42

  0x0000000002b1809e: mov    $0x0,%eax
  0x0000000002b180a3: add    $0x40,%rsp
  0x0000000002b180a7: pop    %rbp
  0x0000000002b180a8: test   %eax,-0x1f27fae(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b180ae: retq   
  0x0000000002b180af: mov    %r8,0x8(%rsp)
  0x0000000002b180b4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b180bc: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=865}
                                                ;*synchronization entry
                                                ; - java.io.File::exists@-1
                                                ;   {runtime_call}
  0x0000000002b180c1: jmpq   0x0000000002b17dc0
  0x0000000002b180c6: mov    %r8,0x8(%rsp)
  0x0000000002b180cb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b180d3: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=888}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1
                                                ; - java.io.File::exists@0
                                                ;   {runtime_call}
  0x0000000002b180d8: jmpq   0x0000000002b17e06
  0x0000000002b180dd: callq  0x0000000002afc580  ; OopMap{rdx=Oop rsi=Oop r8=Oop off=898}
                                                ;*invokevirtual checkRead
                                                ; - java.io.File::exists@13
                                                ;   {runtime_call}
  0x0000000002b180e2: nop
  0x0000000002b180e3: nop
  0x0000000002b180e4: mov    0x2a8(%r15),%rax
  0x0000000002b180eb: movabs $0x0,%r10
  0x0000000002b180f5: mov    %r10,0x2a8(%r15)
  0x0000000002b180fc: movabs $0x0,%r10
  0x0000000002b18106: mov    %r10,0x2b0(%r15)
  0x0000000002b1810d: add    $0x40,%rsp
  0x0000000002b18111: pop    %rbp
  0x0000000002b18112: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b18117: hlt    
  0x0000000002b18118: hlt    
  0x0000000002b18119: hlt    
  0x0000000002b1811a: hlt    
  0x0000000002b1811b: hlt    
  0x0000000002b1811c: hlt    
  0x0000000002b1811d: hlt    
  0x0000000002b1811e: hlt    
  0x0000000002b1811f: hlt    
[Stub Code]
  0x0000000002b18120: nop                       ;   {no_reloc}
  0x0000000002b18121: nop
  0x0000000002b18122: nop
  0x0000000002b18123: nop
  0x0000000002b18124: nop
  0x0000000002b18125: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1812f: jmpq   0x0000000002b1812f  ;   {runtime_call}
  0x0000000002b18134: nop
  0x0000000002b18135: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1813f: jmpq   0x0000000002b1813f  ;   {runtime_call}
  0x0000000002b18144: nop
  0x0000000002b18145: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1814f: jmpq   0x0000000002b1814f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b18154: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b18159: mov    %rsp,-0x28(%rsp)
  0x0000000002b1815e: sub    $0x80,%rsp
  0x0000000002b18165: mov    %rax,0x78(%rsp)
  0x0000000002b1816a: mov    %rcx,0x70(%rsp)
  0x0000000002b1816f: mov    %rdx,0x68(%rsp)
  0x0000000002b18174: mov    %rbx,0x60(%rsp)
  0x0000000002b18179: mov    %rbp,0x50(%rsp)
  0x0000000002b1817e: mov    %rsi,0x48(%rsp)
  0x0000000002b18183: mov    %rdi,0x40(%rsp)
  0x0000000002b18188: mov    %r8,0x38(%rsp)
  0x0000000002b1818d: mov    %r9,0x30(%rsp)
  0x0000000002b18192: mov    %r10,0x28(%rsp)
  0x0000000002b18197: mov    %r11,0x20(%rsp)
  0x0000000002b1819c: mov    %r12,0x18(%rsp)
  0x0000000002b181a1: mov    %r13,0x10(%rsp)
  0x0000000002b181a6: mov    %r14,0x8(%rsp)
  0x0000000002b181ab: mov    %r15,(%rsp)
  0x0000000002b181af: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b181b9: movabs $0x2b18159,%rdx    ;   {internal_word}
  0x0000000002b181c3: mov    %rsp,%r8
  0x0000000002b181c6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b181ca: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b181cf: hlt    
[Deopt Handler Code]
  0x0000000002b181d0: movabs $0x2b181d0,%r10    ;   {section_word}
  0x0000000002b181da: push   %r10
  0x0000000002b181dc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b181e1: hlt    
  0x0000000002b181e2: hlt    
  0x0000000002b181e3: hlt    
  0x0000000002b181e4: hlt    
  0x0000000002b181e5: hlt    
  0x0000000002b181e6: hlt    
  0x0000000002b181e7: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000002b17d60' size='2064' address='0x0000000002b17bd0' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1584' scopes_pcs_offset='1720' dependencies_offset='2040' nul_chk_table_offset='2048' method='java/io/File exists ()Z' bytes='43' count='260' iicount='260' stamp='0.555'/>
<writer thread='53496'/>
<task_queued compile_id='28' method='cs/JitTest add (II)I' bytes='4' count='256' iicount='256' level='3' stamp='0.555' comment='tiered' hot_count='256'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b15fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;
  # this:     rdx:rdx   = &apos;cs/JitTest&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b16120: mov    0x8(%rdx),%r10d
  0x0000000002b16124: shl    $0x3,%r10
  0x0000000002b16128: cmp    %rax,%r10
  0x0000000002b1612b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b16131: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1613c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b16140: mov    %eax,-0x6000(%rsp)
  0x0000000002b16147: push   %rbp
  0x0000000002b16148: sub    $0x30,%rsp
  0x0000000002b1614c: movabs $0x1b992eb0,%rax   ;   {metadata(method data for {method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b16156: mov    0xdc(%rax),%esi
  0x0000000002b1615c: add    $0x8,%esi
  0x0000000002b1615f: mov    %esi,0xdc(%rax)
  0x0000000002b16165: movabs $0x1b992c08,%rax   ;   {metadata({method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b1616f: and    $0x1ff8,%esi
  0x0000000002b16175: cmp    $0x0,%esi
  0x0000000002b16178: je     0x0000000002b16190  ;*iload_1
                                                ; - cs.JitTest::add@0 (line 24)

  0x0000000002b1617e: add    %r9d,%r8d
  0x0000000002b16181: mov    %r8,%rax
  0x0000000002b16184: add    $0x30,%rsp
  0x0000000002b16188: pop    %rbp
  0x0000000002b16189: test   %eax,-0x1f2608f(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1618f: retq   
  0x0000000002b16190: mov    %rax,0x8(%rsp)
  0x0000000002b16195: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1619d: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=130}
                                                ;*synchronization entry
                                                ; - cs.JitTest::add@-1 (line 24)
                                                ;   {runtime_call}
  0x0000000002b161a2: jmp    0x0000000002b1617e
  0x0000000002b161a4: nop
  0x0000000002b161a5: nop
  0x0000000002b161a6: mov    0x2a8(%r15),%rax
  0x0000000002b161ad: movabs $0x0,%r10
  0x0000000002b161b7: mov    %r10,0x2a8(%r15)
  0x0000000002b161be: movabs $0x0,%r10
  0x0000000002b161c8: mov    %r10,0x2b0(%r15)
  0x0000000002b161cf: add    $0x30,%rsp
  0x0000000002b161d3: pop    %rbp
  0x0000000002b161d4: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b161d9: hlt    
  0x0000000002b161da: hlt    
  0x0000000002b161db: hlt    
  0x0000000002b161dc: hlt    
  0x0000000002b161dd: hlt    
  0x0000000002b161de: hlt    
  0x0000000002b161df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b161e0: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b161e5: mov    %rsp,-0x28(%rsp)
  0x0000000002b161ea: sub    $0x80,%rsp
  0x0000000002b161f1: mov    %rax,0x78(%rsp)
  0x0000000002b161f6: mov    %rcx,0x70(%rsp)
  0x0000000002b161fb: mov    %rdx,0x68(%rsp)
  0x0000000002b16200: mov    %rbx,0x60(%rsp)
  0x0000000002b16205: mov    %rbp,0x50(%rsp)
  0x0000000002b1620a: mov    %rsi,0x48(%rsp)
  0x0000000002b1620f: mov    %rdi,0x40(%rsp)
  0x0000000002b16214: mov    %r8,0x38(%rsp)
  0x0000000002b16219: mov    %r9,0x30(%rsp)
  0x0000000002b1621e: mov    %r10,0x28(%rsp)
  0x0000000002b16223: mov    %r11,0x20(%rsp)
  0x0000000002b16228: mov    %r12,0x18(%rsp)
  0x0000000002b1622d: mov    %r13,0x10(%rsp)
  0x0000000002b16232: mov    %r14,0x8(%rsp)
  0x0000000002b16237: mov    %r15,(%rsp)
  0x0000000002b1623b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b16245: movabs $0x2b161e5,%rdx    ;   {internal_word}
  0x0000000002b1624f: mov    %rsp,%r8
  0x0000000002b16252: and    $0xfffffffffffffff0,%rsp
  0x0000000002b16256: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1625b: hlt    
[Deopt Handler Code]
  0x0000000002b1625c: movabs $0x2b1625c,%r10    ;   {section_word}
  0x0000000002b16266: push   %r10
  0x0000000002b16268: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1626d: hlt    
  0x0000000002b1626e: hlt    
  0x0000000002b1626f: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000002b16120' size='784' address='0x0000000002b15fd0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='688' scopes_pcs_offset='712' dependencies_offset='776' oops_offset='672' method='cs/JitTest add (II)I' bytes='4' count='28416' iicount='28428' stamp='0.558'/>
<writer thread='53496'/>
<task_queued compile_id='29' method='cs/JitTest add (II)I' bytes='4' count='29184' iicount='29184' level='1' stamp='0.558' comment='tiered' hot_count='29184'/>
<writer thread='49028'/>
<task_queued compile_id='30' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='34432' iicount='34432' stamp='0.558' comment='tiered' hot_count='34432'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b14990:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;
  # this:     rdx:rdx   = &apos;cs/JitTest&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b14ae0: mov    0x8(%rdx),%r10d
  0x0000000002b14ae4: shl    $0x3,%r10
  0x0000000002b14ae8: cmp    %rax,%r10
  0x0000000002b14aeb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b14af1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b14afc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b14b00: mov    %eax,-0x6000(%rsp)
  0x0000000002b14b07: push   %rbp
  0x0000000002b14b08: sub    $0x30,%rsp         ;*iload_1
                                                ; - cs.JitTest::add@0 (line 24)

  0x0000000002b14b0c: add    %r9d,%r8d
  0x0000000002b14b0f: mov    %r8,%rax
  0x0000000002b14b12: add    $0x30,%rsp
  0x0000000002b14b16: pop    %rbp
  0x0000000002b14b17: test   %eax,-0x1f24a1d(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b14b1d: retq   
  0x0000000002b14b1e: nop
  0x0000000002b14b1f: nop
  0x0000000002b14b20: mov    0x2a8(%r15),%rax
  0x0000000002b14b27: movabs $0x0,%r10
  0x0000000002b14b31: mov    %r10,0x2a8(%r15)
  0x0000000002b14b38: movabs $0x0,%r10
  0x0000000002b14b42: mov    %r10,0x2b0(%r15)
  0x0000000002b14b49: add    $0x30,%rsp
  0x0000000002b14b4d: pop    %rbp
  0x0000000002b14b4e: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b14b53: hlt    
  0x0000000002b14b54: hlt    
  0x0000000002b14b55: hlt    
  0x0000000002b14b56: hlt    
  0x0000000002b14b57: hlt    
  0x0000000002b14b58: hlt    
  0x0000000002b14b59: hlt    
  0x0000000002b14b5a: hlt    
  0x0000000002b14b5b: hlt    
  0x0000000002b14b5c: hlt    
  0x0000000002b14b5d: hlt    
  0x0000000002b14b5e: hlt    
  0x0000000002b14b5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b14b60: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b14b65: mov    %rsp,-0x28(%rsp)
  0x0000000002b14b6a: sub    $0x80,%rsp
  0x0000000002b14b71: mov    %rax,0x78(%rsp)
  0x0000000002b14b76: mov    %rcx,0x70(%rsp)
  0x0000000002b14b7b: mov    %rdx,0x68(%rsp)
  0x0000000002b14b80: mov    %rbx,0x60(%rsp)
  0x0000000002b14b85: mov    %rbp,0x50(%rsp)
  0x0000000002b14b8a: mov    %rsi,0x48(%rsp)
  0x0000000002b14b8f: mov    %rdi,0x40(%rsp)
  0x0000000002b14b94: mov    %r8,0x38(%rsp)
  0x0000000002b14b99: mov    %r9,0x30(%rsp)
  0x0000000002b14b9e: mov    %r10,0x28(%rsp)
  0x0000000002b14ba3: mov    %r11,0x20(%rsp)
  0x0000000002b14ba8: mov    %r12,0x18(%rsp)
  0x0000000002b14bad: mov    %r13,0x10(%rsp)
  0x0000000002b14bb2: mov    %r14,0x8(%rsp)
  0x0000000002b14bb7: mov    %r15,(%rsp)
  0x0000000002b14bbb: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b14bc5: movabs $0x2b14b65,%rdx    ;   {internal_word}
  0x0000000002b14bcf: mov    %rsp,%r8
  0x0000000002b14bd2: and    $0xfffffffffffffff0,%rsp
  0x0000000002b14bd6: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b14bdb: hlt    
[Deopt Handler Code]
  0x0000000002b14bdc: movabs $0x2b14bdc,%r10    ;   {section_word}
  0x0000000002b14be6: push   %r10
  0x0000000002b14be8: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b14bed: hlt    
  0x0000000002b14bee: hlt    
  0x0000000002b14bef: hlt    
<nmethod compile_id='29' compiler='C1' level='1' entry='0x0000000002b14ae0' size='688' address='0x0000000002b14990' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='624' scopes_pcs_offset='632' dependencies_offset='680' oops_offset='608' method='cs/JitTest add (II)I' bytes='4' count='72704' iicount='72704' stamp='0.561'/>
<make_not_entrant thread='53160' compile_id='28' compiler='C1' level='3' stamp='0.561'/>
Decoding compiled method 0x0000000002b174d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002b17640: mov    0x8(%rdx),%r10d
  0x0000000002b17644: shl    $0x3,%r10
  0x0000000002b17648: cmp    %rax,%r10
  0x0000000002b1764b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b17651: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1765c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b17660: mov    %eax,-0x6000(%rsp)
  0x0000000002b17667: push   %rbp
  0x0000000002b17668: sub    $0x30,%rsp
  0x0000000002b1766c: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b17676: mov    0xdc(%rax),%esi
  0x0000000002b1767c: add    $0x8,%esi
  0x0000000002b1767f: mov    %esi,0xdc(%rax)
  0x0000000002b17685: movabs $0x1b7016e8,%rax   ;   {metadata({method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b1768f: and    $0x1ff8,%esi
  0x0000000002b17695: cmp    $0x0,%esi
  0x0000000002b17698: je     0x0000000002b177b4  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0

  0x0000000002b1769e: cmp    $0x61,%r8d
  0x0000000002b176a2: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b176ac: movabs $0x108,%rsi
  0x0000000002b176b6: jl     0x0000000002b176c6
  0x0000000002b176bc: movabs $0x118,%rsi
  0x0000000002b176c6: mov    (%rax,%rsi,1),%rdi
  0x0000000002b176ca: lea    0x1(%rdi),%rdi
  0x0000000002b176ce: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b176d2: jl     0x0000000002b17712  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3

  0x0000000002b176d8: cmp    $0x7a,%r8d
  0x0000000002b176dc: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b176e6: movabs $0x128,%rsi
  0x0000000002b176f0: jle    0x0000000002b17700
  0x0000000002b176f6: movabs $0x138,%rsi
  0x0000000002b17700: mov    (%rax,%rsi,1),%rdi
  0x0000000002b17704: lea    0x1(%rdi),%rdi
  0x0000000002b17708: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b1770c: jle    0x0000000002b17790  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::isLetter@9

  0x0000000002b17712: cmp    $0x41,%r8d
  0x0000000002b17716: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b17720: movabs $0x148,%rsi
  0x0000000002b1772a: jl     0x0000000002b1773a
  0x0000000002b17730: movabs $0x158,%rsi
  0x0000000002b1773a: mov    (%rax,%rsi,1),%rdi
  0x0000000002b1773e: lea    0x1(%rdi),%rdi
  0x0000000002b17742: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b17746: jl     0x0000000002b17786  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15

  0x0000000002b1774c: cmp    $0x5a,%r8d
  0x0000000002b17750: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b1775a: movabs $0x168,%rsi
  0x0000000002b17764: jg     0x0000000002b17774
  0x0000000002b1776a: movabs $0x178,%rsi
  0x0000000002b17774: mov    (%rax,%rsi,1),%rdi
  0x0000000002b17778: lea    0x1(%rdi),%rdi
  0x0000000002b1777c: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b17780: jle    0x0000000002b17790  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21

  0x0000000002b17786: mov    $0x0,%eax
  0x0000000002b1778b: jmpq   0x0000000002b177a5  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isLetter@29

  0x0000000002b17790: movabs $0x1b7b5298,%rax   ;   {metadata(method data for {method} {0x000000001b7016f0} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002b1779a: incl   0x188(%rax)
  0x0000000002b177a0: mov    $0x1,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isLetter@25

  0x0000000002b177a5: and    $0x1,%eax
  0x0000000002b177a8: add    $0x30,%rsp
  0x0000000002b177ac: pop    %rbp
  0x0000000002b177ad: test   %eax,-0x1f276b3(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b177b3: retq   
  0x0000000002b177b4: mov    %rax,0x8(%rsp)
  0x0000000002b177b9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b177c1: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=390}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isLetter@-1
                                                ;   {runtime_call}
  0x0000000002b177c6: jmpq   0x0000000002b1769e
  0x0000000002b177cb: nop
  0x0000000002b177cc: nop
  0x0000000002b177cd: mov    0x2a8(%r15),%rax
  0x0000000002b177d4: movabs $0x0,%r10
  0x0000000002b177de: mov    %r10,0x2a8(%r15)
  0x0000000002b177e5: movabs $0x0,%r10
  0x0000000002b177ef: mov    %r10,0x2b0(%r15)
  0x0000000002b177f6: add    $0x30,%rsp
  0x0000000002b177fa: pop    %rbp
  0x0000000002b177fb: jmpq   0x0000000002a6efa0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002b17800: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b17805: mov    %rsp,-0x28(%rsp)
  0x0000000002b1780a: sub    $0x80,%rsp
  0x0000000002b17811: mov    %rax,0x78(%rsp)
  0x0000000002b17816: mov    %rcx,0x70(%rsp)
  0x0000000002b1781b: mov    %rdx,0x68(%rsp)
  0x0000000002b17820: mov    %rbx,0x60(%rsp)
  0x0000000002b17825: mov    %rbp,0x50(%rsp)
  0x0000000002b1782a: mov    %rsi,0x48(%rsp)
  0x0000000002b1782f: mov    %rdi,0x40(%rsp)
  0x0000000002b17834: mov    %r8,0x38(%rsp)
  0x0000000002b17839: mov    %r9,0x30(%rsp)
  0x0000000002b1783e: mov    %r10,0x28(%rsp)
  0x0000000002b17843: mov    %r11,0x20(%rsp)
  0x0000000002b17848: mov    %r12,0x18(%rsp)
  0x0000000002b1784d: mov    %r13,0x10(%rsp)
  0x0000000002b17852: mov    %r14,0x8(%rsp)
  0x0000000002b17857: mov    %r15,(%rsp)
  0x0000000002b1785b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b17865: movabs $0x2b17805,%rdx    ;   {internal_word}
  0x0000000002b1786f: mov    %rsp,%r8
  0x0000000002b17872: and    $0xfffffffffffffff0,%rsp
  0x0000000002b17876: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1787b: hlt    
[Deopt Handler Code]
  0x0000000002b1787c: movabs $0x2b1787c,%r10    ;   {section_word}
  0x0000000002b17886: push   %r10
  0x0000000002b17888: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1788d: hlt    
  0x0000000002b1788e: hlt    
  0x0000000002b1788f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002b17640' size='1192' address='0x0000000002b174d0' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1024' dependencies_offset='1184' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='1152' iicount='1152' stamp='0.564'/>
<writer thread='49028'/>
<task_queued compile_id='31' method='java/lang/String indexOf (II)I' bytes='70' count='1614' backedge_count='104719' iicount='1614' stamp='0.565' comment='tiered' hot_count='1614'/>
<task_queued compile_id='32' method='java/lang/String indexOf (I)I' bytes='7' count='1664' iicount='1664' level='3' stamp='0.565' comment='tiered' hot_count='1664'/>
<writer thread='53496'/>
<task_queued compile_id='33' compile_kind='osr' method='cs/JitTest &lt;init&gt; ()V' bytes='54' count='1' backedge_count='72704' iicount='1' osr_bci='8' level='3' stamp='0.565' comment='tiered' hot_count='72704'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b19b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;
  0x0000000002b19d80: mov    0x8(%rdx),%r10d
  0x0000000002b19d84: shl    $0x3,%r10
  0x0000000002b19d88: cmp    %rax,%r10
  0x0000000002b19d8b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b19d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b19d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b19da0: mov    %eax,-0x6000(%rsp)
  0x0000000002b19da7: push   %rbp
  0x0000000002b19da8: sub    $0x70,%rsp
  0x0000000002b19dac: movabs $0x1b993028,%rcx   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19db6: mov    0xdc(%rcx),%esi
  0x0000000002b19dbc: add    $0x8,%esi
  0x0000000002b19dbf: mov    %esi,0xdc(%rcx)
  0x0000000002b19dc5: movabs $0x1b992b38,%rcx   ;   {metadata({method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19dcf: and    $0x1ff8,%esi
  0x0000000002b19dd5: cmp    $0x0,%esi
  0x0000000002b19dd8: je     0x0000000002b1a27f  ;*aload_0
                                                ; - cs.JitTest::&lt;init&gt;@0 (line 10)

  0x0000000002b19dde: mov    %rdx,%rcx
  0x0000000002b19de1: movabs $0x1b993028,%rsi   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19deb: addq   $0x1,0x108(%rsi)
  0x0000000002b19df3: movabs $0x1b6baa98,%rcx   ;   {metadata(method data for {method} {0x000000001b590470} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b19dfd: mov    0xdc(%rcx),%esi
  0x0000000002b19e03: add    $0x8,%esi
  0x0000000002b19e06: mov    %esi,0xdc(%rcx)
  0x0000000002b19e0c: movabs $0x1b590468,%rcx   ;   {metadata({method} {0x000000001b590470} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002b19e16: and    $0x7ffff8,%esi
  0x0000000002b19e1c: cmp    $0x0,%esi
  0x0000000002b19e1f: je     0x0000000002b1a296
  0x0000000002b19e25: mov    $0x0,%esi
  0x0000000002b19e2a: mov    $0x0,%edi
  0x0000000002b19e2f: jmpq   0x0000000002b19ee0  ;*iload_2
                                                ; - cs.JitTest::&lt;init&gt;@8 (line 14)

  0x0000000002b19e34: nopl   0x0(%rax)
  0x0000000002b19e38: cmp    (%rdx),%rax        ;*invokevirtual add
                                                ; - cs.JitTest::&lt;init&gt;@18 (line 16)
                                                ; implicit exception: dispatches to 0x0000000002b1a2ad
  0x0000000002b19e3b: mov    %rdx,%rax
  0x0000000002b19e3e: movabs $0x1b993028,%rbx   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19e48: movabs $0x7c0060828,%r10  ;   {metadata(&apos;cs/JitTest&apos;)}
  0x0000000002b19e52: mov    %r10,0x140(%rbx)
  0x0000000002b19e59: addq   $0x1,0x148(%rbx)
  0x0000000002b19e61: movabs $0x1b992eb0,%rax   ;   {metadata(method data for {method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19e6b: mov    0xdc(%rax),%ebx
  0x0000000002b19e71: add    $0x8,%ebx
  0x0000000002b19e74: mov    %ebx,0xdc(%rax)
  0x0000000002b19e7a: movabs $0x1b992c08,%rax   ;   {metadata({method} {0x000000001b992c10} &apos;add&apos; &apos;(II)I&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19e84: and    $0x7ffff8,%ebx
  0x0000000002b19e8a: cmp    $0x0,%ebx
  0x0000000002b19e8d: je     0x0000000002b1a2b2
  0x0000000002b19e93: add    $0x63,%edi
  0x0000000002b19e96: inc    %esi
  0x0000000002b19e98: movabs $0x1b993028,%rax   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19ea2: mov    0xe0(%rax),%ebx
  0x0000000002b19ea8: add    $0x8,%ebx
  0x0000000002b19eab: mov    %ebx,0xe0(%rax)
  0x0000000002b19eb1: movabs $0x1b992b38,%rax   ;   {metadata({method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19ebb: and    $0xfff8,%ebx
  0x0000000002b19ec1: cmp    $0x0,%ebx
  0x0000000002b19ec4: je     0x0000000002b1a2c9  ; OopMap{rdx=Oop off=330}
                                                ;*goto
                                                ; - cs.JitTest::&lt;init&gt;@25 (line 14)

  0x0000000002b19eca: test   %eax,-0x1f29dd0(%rip)        # 0x0000000000bf0100
                                                ;   {poll}
  0x0000000002b19ed0: movabs $0x1b993028,%rax   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19eda: incl   0x168(%rax)        ;*goto
                                                ; - cs.JitTest::&lt;init&gt;@25 (line 14)

  0x0000000002b19ee0: cmp    $0x186a0,%esi
  0x0000000002b19ee6: movabs $0x1b993028,%rax   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19ef0: movabs $0x118,%rbx
  0x0000000002b19efa: jge    0x0000000002b19f0a
  0x0000000002b19f00: movabs $0x128,%rbx
  0x0000000002b19f0a: mov    (%rax,%rbx,1),%rcx
  0x0000000002b19f0e: lea    0x1(%rcx),%rcx
  0x0000000002b19f12: mov    %rcx,(%rax,%rbx,1)
  0x0000000002b19f16: jl     0x0000000002b19e38  ;*if_icmpge
                                                ; - cs.JitTest::&lt;init&gt;@11 (line 14)

  0x0000000002b19f1c: mov    %edi,0x58(%rsp)
  0x0000000002b19f20: jmpq   0x0000000002b1a33d  ;   {no_reloc}
  0x0000000002b19f25: add    %al,(%rax)
  0x0000000002b19f27: add    %al,(%rax)
  0x0000000002b19f29: add    %ah,0xf(%rsi)
  0x0000000002b19f2c: (bad)  
  0x0000000002b19f2d: add    %r8b,(%rax)
  0x0000000002b19f30: jmpq   0x0000000002b1a357  ; implicit exception: dispatches to 0x0000000002b1a347
  0x0000000002b19f35: nop
  0x0000000002b19f36: shl    $0x3,%rsi          ;*getstatic out
                                                ; - cs.JitTest::&lt;init&gt;@28 (line 19)

  0x0000000002b19f3a: nopw   0x0(%rax,%rax,1)
  0x0000000002b19f40: jmpq   0x0000000002b1a370  ;   {no_reloc}
  0x0000000002b19f45: add    %al,(%rax)
  0x0000000002b19f47: add    %al,(%rax)
  0x0000000002b19f49: add    %ch,%cl
  0x0000000002b19f4b: sub    (%rax,%rax,1),%eax
  0x0000000002b19f4e: add    %cl,-0x75(%rax)    ;*new  ; - cs.JitTest::&lt;init&gt;@31 (line 19)

  0x0000000002b19f51: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19f54: sub    %dh,(%rax)
  0x0000000002b19f56: cltd   
  0x0000000002b19f57: sbb    (%rax),%eax
  0x0000000002b19f59: add    %al,(%rax)
  0x0000000002b19f5b: add    %cl,-0x7d(%rax)
  0x0000000002b19f5e: addl   $0x48,0x1000001(%rax)
  0x0000000002b19f65: mov    %eax,%edx          ;*invokespecial &lt;init&gt;
                                                ; - cs.JitTest::&lt;init&gt;@35 (line 19)

  0x0000000002b19f67: mov    %rsi,0x60(%rsp)
  0x0000000002b19f6c: mov    %rax,0x50(%rsp)
  0x0000000002b19f71: nop
  0x0000000002b19f72: nop
  0x0000000002b19f73: nop
  0x0000000002b19f74: nop
  0x0000000002b19f75: nop
  0x0000000002b19f76: nop
  0x0000000002b19f77: callq  0x0000000002a461a0  ; OopMap{[80]=Oop [96]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - cs.JitTest::&lt;init&gt;@35 (line 19)
                                                ;   {optimized virtual_call}
  0x0000000002b19f7c: mov    0x50(%rsp),%rax
  0x0000000002b19f81: movabs $0x1b993028,%r8    ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b19f8b: mov    0x8(%rax),%eax
  0x0000000002b19f8e: shl    $0x3,%rax
  0x0000000002b19f92: cmp    0x198(%r8),%rax
  0x0000000002b19f99: jne    0x0000000002b19fa8
  0x0000000002b19f9b: addq   $0x1,0x1a0(%r8)
  0x0000000002b19fa3: jmpq   0x0000000002b1a00e
  0x0000000002b19fa8: cmp    0x1a8(%r8),%rax
  0x0000000002b19faf: jne    0x0000000002b19fbe
  0x0000000002b19fb1: addq   $0x1,0x1b0(%r8)
  0x0000000002b19fb9: jmpq   0x0000000002b1a00e
  0x0000000002b19fbe: cmpq   $0x0,0x198(%r8)
  0x0000000002b19fc9: jne    0x0000000002b19fe2
  0x0000000002b19fcb: mov    %rax,0x198(%r8)
  0x0000000002b19fd2: movq   $0x1,0x1a0(%r8)
  0x0000000002b19fdd: jmpq   0x0000000002b1a00e
  0x0000000002b19fe2: cmpq   $0x0,0x1a8(%r8)
  0x0000000002b19fed: jne    0x0000000002b1a006
  0x0000000002b19fef: mov    %rax,0x1a8(%r8)
  0x0000000002b19ff6: movq   $0x1,0x1b0(%r8)
  0x0000000002b1a001: jmpq   0x0000000002b1a00e
  0x0000000002b1a006: addq   $0x1,0x190(%r8)
  0x0000000002b1a00e: movabs $0x76c217548,%r8   ;   {oop(&quot;Sum:&quot;)}
  0x0000000002b1a018: mov    0x50(%rsp),%rdx    ;*invokevirtual append
                                                ; - cs.JitTest::&lt;init&gt;@40 (line 19)

  0x0000000002b1a01d: movabs $0xffffffffffffffff,%rax
  0x0000000002b1a027: callq  0x0000000002a463e0  ; OopMap{[96]=Oop off=684}
                                                ;*invokevirtual append
                                                ; - cs.JitTest::&lt;init&gt;@40 (line 19)
                                                ;   {virtual_call}
  0x0000000002b1a02c: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002b1a387
  0x0000000002b1a02f: mov    %rax,%r8
  0x0000000002b1a032: movabs $0x1b993028,%rdx   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b1a03c: mov    0x8(%r8),%r8d
  0x0000000002b1a040: shl    $0x3,%r8
  0x0000000002b1a044: cmp    0x1c8(%rdx),%r8
  0x0000000002b1a04b: jne    0x0000000002b1a05a
  0x0000000002b1a04d: addq   $0x1,0x1d0(%rdx)
  0x0000000002b1a055: jmpq   0x0000000002b1a0c0
  0x0000000002b1a05a: cmp    0x1d8(%rdx),%r8
  0x0000000002b1a061: jne    0x0000000002b1a070
  0x0000000002b1a063: addq   $0x1,0x1e0(%rdx)
  0x0000000002b1a06b: jmpq   0x0000000002b1a0c0
  0x0000000002b1a070: cmpq   $0x0,0x1c8(%rdx)
  0x0000000002b1a07b: jne    0x0000000002b1a094
  0x0000000002b1a07d: mov    %r8,0x1c8(%rdx)
  0x0000000002b1a084: movq   $0x1,0x1d0(%rdx)
  0x0000000002b1a08f: jmpq   0x0000000002b1a0c0
  0x0000000002b1a094: cmpq   $0x0,0x1d8(%rdx)
  0x0000000002b1a09f: jne    0x0000000002b1a0b8
  0x0000000002b1a0a1: mov    %r8,0x1d8(%rdx)
  0x0000000002b1a0a8: movq   $0x1,0x1e0(%rdx)
  0x0000000002b1a0b3: jmpq   0x0000000002b1a0c0
  0x0000000002b1a0b8: addq   $0x1,0x1c0(%rdx)
  0x0000000002b1a0c0: mov    0x58(%rsp),%r8d
  0x0000000002b1a0c5: mov    %rax,%rdx          ;*invokevirtual append
                                                ; - cs.JitTest::&lt;init&gt;@44 (line 19)

  0x0000000002b1a0c8: nop
  0x0000000002b1a0c9: nop
  0x0000000002b1a0ca: nop
  0x0000000002b1a0cb: nop
  0x0000000002b1a0cc: nop
  0x0000000002b1a0cd: movabs $0xffffffffffffffff,%rax
  0x0000000002b1a0d7: callq  0x0000000002a463e0  ; OopMap{[96]=Oop off=860}
                                                ;*invokevirtual append
                                                ; - cs.JitTest::&lt;init&gt;@44 (line 19)
                                                ;   {virtual_call}
  0x0000000002b1a0dc: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002b1a38c
  0x0000000002b1a0df: mov    %rax,%rdx
  0x0000000002b1a0e2: movabs $0x1b993028,%rsi   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b1a0ec: mov    0x8(%rdx),%edx
  0x0000000002b1a0ef: shl    $0x3,%rdx
  0x0000000002b1a0f3: cmp    0x1f8(%rsi),%rdx
  0x0000000002b1a0fa: jne    0x0000000002b1a109
  0x0000000002b1a0fc: addq   $0x1,0x200(%rsi)
  0x0000000002b1a104: jmpq   0x0000000002b1a16f
  0x0000000002b1a109: cmp    0x208(%rsi),%rdx
  0x0000000002b1a110: jne    0x0000000002b1a11f
  0x0000000002b1a112: addq   $0x1,0x210(%rsi)
  0x0000000002b1a11a: jmpq   0x0000000002b1a16f
  0x0000000002b1a11f: cmpq   $0x0,0x1f8(%rsi)
  0x0000000002b1a12a: jne    0x0000000002b1a143
  0x0000000002b1a12c: mov    %rdx,0x1f8(%rsi)
  0x0000000002b1a133: movq   $0x1,0x200(%rsi)
  0x0000000002b1a13e: jmpq   0x0000000002b1a16f
  0x0000000002b1a143: cmpq   $0x0,0x208(%rsi)
  0x0000000002b1a14e: jne    0x0000000002b1a167
  0x0000000002b1a150: mov    %rdx,0x208(%rsi)
  0x0000000002b1a157: movq   $0x1,0x210(%rsi)
  0x0000000002b1a162: jmpq   0x0000000002b1a16f
  0x0000000002b1a167: addq   $0x1,0x1f0(%rsi)
  0x0000000002b1a16f: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - cs.JitTest::&lt;init&gt;@47 (line 19)

  0x0000000002b1a172: nop
  0x0000000002b1a173: nop
  0x0000000002b1a174: nop
  0x0000000002b1a175: movabs $0xffffffffffffffff,%rax
  0x0000000002b1a17f: callq  0x0000000002a463e0  ; OopMap{[96]=Oop off=1028}
                                                ;*invokevirtual toString
                                                ; - cs.JitTest::&lt;init&gt;@47 (line 19)
                                                ;   {virtual_call}
  0x0000000002b1a184: mov    0x60(%rsp),%rsi
  0x0000000002b1a189: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002b1a391
  0x0000000002b1a18c: mov    %rsi,%r8
  0x0000000002b1a18f: movabs $0x1b993028,%rdx   ;   {metadata(method data for {method} {0x000000001b992b40} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;cs/JitTest&apos;)}
  0x0000000002b1a199: mov    0x8(%r8),%r8d
  0x0000000002b1a19d: shl    $0x3,%r8
  0x0000000002b1a1a1: cmp    0x228(%rdx),%r8
  0x0000000002b1a1a8: jne    0x0000000002b1a1b7
  0x0000000002b1a1aa: addq   $0x1,0x230(%rdx)
  0x0000000002b1a1b2: jmpq   0x0000000002b1a21d
  0x0000000002b1a1b7: cmp    0x238(%rdx),%r8
  0x0000000002b1a1be: jne    0x0000000002b1a1cd
  0x0000000002b1a1c0: addq   $0x1,0x240(%rdx)
  0x0000000002b1a1c8: jmpq   0x0000000002b1a21d
  0x0000000002b1a1cd: cmpq   $0x0,0x228(%rdx)
  0x0000000002b1a1d8: jne    0x0000000002b1a1f1
  0x0000000002b1a1da: mov    %r8,0x228(%rdx)
  0x0000000002b1a1e1: movq   $0x1,0x230(%rdx)
  0x0000000002b1a1ec: jmpq   0x0000000002b1a21d
  0x0000000002b1a1f1: cmpq   $0x0,0x238(%rdx)
  0x0000000002b1a1fc: jne    0x0000000002b1a215
  0x0000000002b1a1fe: mov    %r8,0x238(%rdx)
  0x0000000002b1a205: movq   $0x1,0x240(%rdx)
  0x0000000002b1a210: jmpq   0x0000000002b1a21d
  0x0000000002b1a215: addq   $0x1,0x220(%rdx)
  0x0000000002b1a21d: mov    %rax,%r8
  0x0000000002b1a220: mov    %rsi,%rdx          ;*invokevirtual println
                                                ; - cs.JitTest::&lt;init&gt;@50 (line 19)

  0x0000000002b1a223: nop
  0x0000000002b1a224: nop
  0x0000000002b1a225: movabs $0xffffffffffffffff,%rax
  0x0000000002b1a22f: callq  0x0000000002a463e0  ; OopMap{off=1204}
                                                ;*invokevirtual println
                                                ; - cs.JitTest::&lt;init&gt;@50 (line 19)
                                                ;   {virtual_call}
  0x0000000002b1a234: add    $0x70,%rsp
  0x0000000002b1a238: pop    %rbp
  0x0000000002b1a239: test   %eax,-0x1f2a13f(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1a23f: retq                      ;*return
                                                ; - cs.JitTest::&lt;init&gt;@53 (line 20)

  0x0000000002b1a240: mov    %eax,-0x6000(%rsp)
  0x0000000002b1a247: push   %rbp
  0x0000000002b1a248: sub    $0x70,%rsp
  0x0000000002b1a24c: mov    0x10(%rdx),%rsi
  0x0000000002b1a250: mov    0x8(%rdx),%edi
  0x0000000002b1a253: mov    (%rdx),%ebx
  0x0000000002b1a255: mov    %rdx,%rcx
  0x0000000002b1a258: mov    %rsi,0x48(%rsp)
  0x0000000002b1a25d: mov    %edi,0x44(%rsp)
  0x0000000002b1a261: mov    %ebx,0x40(%rsp)
  0x0000000002b1a265: callq  0x00000000653bd850  ;   {runtime_call}
  0x0000000002b1a26a: mov    0x40(%rsp),%ebx
  0x0000000002b1a26e: mov    %rbx,%rsi
  0x0000000002b1a271: mov    0x44(%rsp),%edi
  0x0000000002b1a275: mov    0x48(%rsp),%rdx
  0x0000000002b1a27a: jmpq   0x0000000002b19ee0
  0x0000000002b1a27f: mov    %rcx,0x8(%rsp)
  0x0000000002b1a284: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1a28c: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=1297}
                                                ;*synchronization entry
                                                ; - cs.JitTest::&lt;init&gt;@-1 (line 10)
                                                ;   {runtime_call}
  0x0000000002b1a291: jmpq   0x0000000002b19dde
  0x0000000002b1a296: mov    %rcx,0x8(%rsp)
  0x0000000002b1a29b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1a2a3: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=1320}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1
                                                ; - cs.JitTest::&lt;init&gt;@1 (line 10)
                                                ;   {runtime_call}
  0x0000000002b1a2a8: jmpq   0x0000000002b19e25
  0x0000000002b1a2ad: callq  0x0000000002afc580  ; OopMap{rdx=Oop off=1330}
                                                ;*invokevirtual add
                                                ; - cs.JitTest::&lt;init&gt;@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002b1a2b2: mov    %rax,0x8(%rsp)
  0x0000000002b1a2b7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1a2bf: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=1348}
                                                ;*synchronization entry
                                                ; - cs.JitTest::add@-1 (line 24)
                                                ; - cs.JitTest::&lt;init&gt;@18 (line 16)
                                                ;   {runtime_call}
  0x0000000002b1a2c4: jmpq   0x0000000002b19e93
  0x0000000002b1a2c9: mov    %rax,0x8(%rsp)
  0x0000000002b1a2ce: movq   $0x19,(%rsp)
  0x0000000002b1a2d6: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=1371}
                                                ;*goto
                                                ; - cs.JitTest::&lt;init&gt;@25 (line 14)
                                                ;   {runtime_call}
  0x0000000002b1a2db: jmpq   0x0000000002b19eca
  0x0000000002b1a2e0: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x0000000002b1a2ea: push   %rax
  0x0000000002b1a2eb: push   %rbx
  0x0000000002b1a2ec: mov    0x48(%rdx),%rbx
  0x0000000002b1a2f0: push   %rdi
  0x0000000002b1a2f1: push   %rsi
  0x0000000002b1a2f2: push   %rdx
  0x0000000002b1a2f3: push   %rcx
  0x0000000002b1a2f4: push   %r8
  0x0000000002b1a2f6: push   %r9
  0x0000000002b1a2f8: push   %r10
  0x0000000002b1a2fa: mov    %rsp,%r10
  0x0000000002b1a2fd: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1a301: push   %r10
  0x0000000002b1a303: push   %r11
  0x0000000002b1a305: mov    $0x7,%ecx
  0x0000000002b1a30a: movabs $0x7ff91c0c5e40,%r10  ;   {runtime_call}
  0x0000000002b1a314: callq  *%r10
  0x0000000002b1a317: pop    %r11
  0x0000000002b1a319: pop    %rsp
  0x0000000002b1a31a: pop    %r10
  0x0000000002b1a31c: pop    %r9
  0x0000000002b1a31e: pop    %r8
  0x0000000002b1a320: pop    %rcx
  0x0000000002b1a321: pop    %rdx
  0x0000000002b1a322: pop    %rsi
  0x0000000002b1a323: pop    %rdi
  0x0000000002b1a324: cmp    0x118(%rbx),%rax
  0x0000000002b1a32b: pop    %rbx
  0x0000000002b1a32c: pop    %rax
  0x0000000002b1a32d: jne    0x0000000002b1a33d
  0x0000000002b1a333: jmpq   0x0000000002b19f2a
  0x0000000002b1a338: mov    $0xa535d00,%eax
  0x0000000002b1a33d: callq  0x0000000002b00ce0  ; OopMap{off=1474}
                                                ;*getstatic out
                                                ; - cs.JitTest::&lt;init&gt;@28 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a342: jmpq   0x0000000002b19f20
  0x0000000002b1a347: callq  0x0000000002afc580  ; OopMap{rdx=Oop off=1484}
                                                ;*getstatic out
                                                ; - cs.JitTest::&lt;init&gt;@28 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a34c: mov    0x0(%rdx),%esi
  0x0000000002b1a352: mov    $0x6050b00,%eax
  0x0000000002b1a357: callq  0x0000000002afffe0  ; OopMap{rdx=Oop off=1500}
                                                ;*getstatic out
                                                ; - cs.JitTest::&lt;init&gt;@28 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a35c: jmpq   0x0000000002b19f30
  0x0000000002b1a361: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002b1a36b: mov    $0xa050f00,%eax
  0x0000000002b1a370: callq  0x0000000002b00660  ; OopMap{rsi=Oop off=1525}
                                                ;*new  ; - cs.JitTest::&lt;init&gt;@31 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a375: jmpq   0x0000000002b19f40
  0x0000000002b1a37a: mov    %rdx,%rdx
  0x0000000002b1a37d: callq  0x0000000002afca20  ; OopMap{rsi=Oop off=1538}
                                                ;*new  ; - cs.JitTest::&lt;init&gt;@31 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a382: jmpq   0x0000000002b19f4f
  0x0000000002b1a387: callq  0x0000000002afc580  ; OopMap{[96]=Oop rax=Oop off=1548}
                                                ;*invokevirtual append
                                                ; - cs.JitTest::&lt;init&gt;@44 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a38c: callq  0x0000000002afc580  ; OopMap{[96]=Oop rax=Oop off=1553}
                                                ;*invokevirtual toString
                                                ; - cs.JitTest::&lt;init&gt;@47 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a391: callq  0x0000000002afc580  ; OopMap{rax=Oop rsi=Oop off=1558}
                                                ;*invokevirtual println
                                                ; - cs.JitTest::&lt;init&gt;@50 (line 19)
                                                ;   {runtime_call}
  0x0000000002b1a396: nop
  0x0000000002b1a397: nop
  0x0000000002b1a398: mov    0x2a8(%r15),%rax
  0x0000000002b1a39f: movabs $0x0,%r10
  0x0000000002b1a3a9: mov    %r10,0x2a8(%r15)
  0x0000000002b1a3b0: movabs $0x0,%r10
  0x0000000002b1a3ba: mov    %r10,0x2b0(%r15)
  0x0000000002b1a3c1: add    $0x70,%rsp
  0x0000000002b1a3c5: pop    %rbp
  0x0000000002b1a3c6: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b1a3cb: hlt    
  0x0000000002b1a3cc: hlt    
  0x0000000002b1a3cd: hlt    
  0x0000000002b1a3ce: hlt    
  0x0000000002b1a3cf: hlt    
  0x0000000002b1a3d0: hlt    
  0x0000000002b1a3d1: hlt    
  0x0000000002b1a3d2: hlt    
  0x0000000002b1a3d3: hlt    
  0x0000000002b1a3d4: hlt    
  0x0000000002b1a3d5: hlt    
  0x0000000002b1a3d6: hlt    
  0x0000000002b1a3d7: hlt    
  0x0000000002b1a3d8: hlt    
  0x0000000002b1a3d9: hlt    
  0x0000000002b1a3da: hlt    
  0x0000000002b1a3db: hlt    
  0x0000000002b1a3dc: hlt    
  0x0000000002b1a3dd: hlt    
  0x0000000002b1a3de: hlt    
  0x0000000002b1a3df: hlt    
[Stub Code]
  0x0000000002b1a3e0: nop                       ;   {no_reloc}
  0x0000000002b1a3e1: nop
  0x0000000002b1a3e2: nop
  0x0000000002b1a3e3: nop
  0x0000000002b1a3e4: nop
  0x0000000002b1a3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1a3ef: jmpq   0x0000000002b1a3ef  ;   {runtime_call}
  0x0000000002b1a3f4: nop
  0x0000000002b1a3f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1a3ff: jmpq   0x0000000002b1a3ff  ;   {runtime_call}
  0x0000000002b1a404: nop
  0x0000000002b1a405: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1a40f: jmpq   0x0000000002b1a40f  ;   {runtime_call}
  0x0000000002b1a414: nop
  0x0000000002b1a415: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1a41f: jmpq   0x0000000002b1a41f  ;   {runtime_call}
  0x0000000002b1a424: nop
  0x0000000002b1a425: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1a42f: jmpq   0x0000000002b1a42f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b1a434: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b1a439: mov    %rsp,-0x28(%rsp)
  0x0000000002b1a43e: sub    $0x80,%rsp
  0x0000000002b1a445: mov    %rax,0x78(%rsp)
  0x0000000002b1a44a: mov    %rcx,0x70(%rsp)
  0x0000000002b1a44f: mov    %rdx,0x68(%rsp)
  0x0000000002b1a454: mov    %rbx,0x60(%rsp)
  0x0000000002b1a459: mov    %rbp,0x50(%rsp)
  0x0000000002b1a45e: mov    %rsi,0x48(%rsp)
  0x0000000002b1a463: mov    %rdi,0x40(%rsp)
  0x0000000002b1a468: mov    %r8,0x38(%rsp)
  0x0000000002b1a46d: mov    %r9,0x30(%rsp)
  0x0000000002b1a472: mov    %r10,0x28(%rsp)
  0x0000000002b1a477: mov    %r11,0x20(%rsp)
  0x0000000002b1a47c: mov    %r12,0x18(%rsp)
  0x0000000002b1a481: mov    %r13,0x10(%rsp)
  0x0000000002b1a486: mov    %r14,0x8(%rsp)
  0x0000000002b1a48b: mov    %r15,(%rsp)
  0x0000000002b1a48f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b1a499: movabs $0x2b1a439,%rdx    ;   {internal_word}
  0x0000000002b1a4a3: mov    %rsp,%r8
  0x0000000002b1a4a6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1a4aa: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1a4af: hlt    
[Deopt Handler Code]
  0x0000000002b1a4b0: movabs $0x2b1a4b0,%r10    ;   {section_word}
  0x0000000002b1a4ba: push   %r10
  0x0000000002b1a4bc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1a4c1: hlt    
  0x0000000002b1a4c2: hlt    
  0x0000000002b1a4c3: hlt    
  0x0000000002b1a4c4: hlt    
  0x0000000002b1a4c5: hlt    
  0x0000000002b1a4c6: hlt    
  0x0000000002b1a4c7: hlt    
<nmethod compile_id='33' compile_kind='osr' compiler='C1' level='3' entry='0x0000000002b19d80' size='3248' address='0x0000000002b19b90' relocation_offset='288' insts_offset='496' stub_offset='2128' scopes_data_offset='2400' scopes_pcs_offset='2648' dependencies_offset='3192' nul_chk_table_offset='3200' oops_offset='2360' method='cs/JitTest &lt;init&gt; ()V' bytes='54' count='1' backedge_count='100000' iicount='1' stamp='0.578'/>
<writer thread='26752'/>
Decoding compiled method 0x0000000002b19490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594e90} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b195e0: mov    0x8(%rdx),%r10d
  0x0000000002b195e4: shl    $0x3,%r10
  0x0000000002b195e8: cmp    %r10,%rax
  0x0000000002b195eb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b195f1: data16 xchg %ax,%ax
  0x0000000002b195f4: nopl   0x0(%rax,%rax,1)
  0x0000000002b195fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b19600: mov    %eax,-0x6000(%rsp)
  0x0000000002b19607: push   %rbp
  0x0000000002b19608: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1

  0x0000000002b1960c: mov    %rdx,%r10
  0x0000000002b1960f: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1

  0x0000000002b19612: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4
                                                ; implicit exception: dispatches to 0x0000000002b1979d
  0x0000000002b19617: test   %r9d,%r9d
  0x0000000002b1961a: jl     0x0000000002b19765  ;*ifge
                                                ; - java.lang.String::indexOf@7

  0x0000000002b19620: mov    $0xffffffff,%eax
  0x0000000002b19625: cmp    %ebp,%r9d
  0x0000000002b19628: jge    0x0000000002b19713  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17

  0x0000000002b1962e: cmp    $0x10000,%r8d
  0x0000000002b19635: jge    0x0000000002b19781  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25

  0x0000000002b1963b: cmp    %ebp,%r9d
  0x0000000002b1963e: jae    0x0000000002b1974b
  0x0000000002b19644: mov    %ebp,%r10d
  0x0000000002b19647: dec    %r10d
  0x0000000002b1964a: cmp    %ebp,%r10d
  0x0000000002b1964d: jae    0x0000000002b1974b
  0x0000000002b19653: lea    (%r12,%rcx,8),%rbx
  0x0000000002b19657: mov    %r9d,%r11d
  0x0000000002b1965a: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43

  0x0000000002b1965d: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b19663: cmp    %r8d,%ecx
  0x0000000002b19666: je     0x0000000002b19722  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b1966c: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b1966f: cmp    %r11d,%r9d
  0x0000000002b19672: jl     0x0000000002b1965d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b19674: mov    %ebp,%r11d
  0x0000000002b19677: add    $0xfffffff9,%r11d
  0x0000000002b1967b: mov    $0x80000000,%ecx
  0x0000000002b19680: cmp    %r11d,%r10d
  0x0000000002b19683: cmovl  %ecx,%r11d
  0x0000000002b19687: cmp    %r11d,%r9d
  0x0000000002b1968a: jge    0x0000000002b196f8
  0x0000000002b1968c: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43

  0x0000000002b19690: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b19696: cmp    %r8d,%r10d
  0x0000000002b19699: je     0x0000000002b19722  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b1969f: movslq %r9d,%r10
  0x0000000002b196a2: movzwl 0x12(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196a8: cmp    %r8d,%edi
  0x0000000002b196ab: je     0x0000000002b1971f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196ad: movzwl 0x14(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196b3: cmp    %r8d,%edi
  0x0000000002b196b6: je     0x0000000002b19727  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196b8: movzwl 0x16(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196be: cmp    %r8d,%edi
  0x0000000002b196c1: je     0x0000000002b1972d  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196c3: movzwl 0x18(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196c9: cmp    %r8d,%edi
  0x0000000002b196cc: je     0x0000000002b19733  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196ce: movzwl 0x1a(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196d4: cmp    %r8d,%edi
  0x0000000002b196d7: je     0x0000000002b19739  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196d9: movzwl 0x1c(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196df: cmp    %r8d,%edi
  0x0000000002b196e2: je     0x0000000002b1973f  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196e4: movzwl 0x1e(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b196ea: cmp    %r8d,%ecx
  0x0000000002b196ed: je     0x0000000002b19745  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b196ef: add    $0x8,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b196f3: cmp    %r11d,%r9d
  0x0000000002b196f6: jl     0x0000000002b19690  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x0000000002b196f8: cmp    %ebp,%r9d
  0x0000000002b196fb: jge    0x0000000002b19713
  0x0000000002b196fd: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43

  0x0000000002b19700: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x0000000002b19706: cmp    %r8d,%r11d
  0x0000000002b19709: je     0x0000000002b19722  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x0000000002b1970b: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b1970e: cmp    %ebp,%r9d
  0x0000000002b19711: jl     0x0000000002b19700  ;*ifge
                                                ; - java.lang.String::indexOf@7

  0x0000000002b19713: add    $0x30,%rsp
  0x0000000002b19717: pop    %rbp
  0x0000000002b19718: test   %eax,-0x1f2971e(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b1971e: retq   
  0x0000000002b1971f: inc    %r9d
  0x0000000002b19722: mov    %r9d,%eax
  0x0000000002b19725: jmp    0x0000000002b19713
  0x0000000002b19727: add    $0x2,%r9d
  0x0000000002b1972b: jmp    0x0000000002b19722
  0x0000000002b1972d: add    $0x3,%r9d
  0x0000000002b19731: jmp    0x0000000002b19722
  0x0000000002b19733: add    $0x4,%r9d
  0x0000000002b19737: jmp    0x0000000002b19722
  0x0000000002b19739: add    $0x5,%r9d
  0x0000000002b1973d: jmp    0x0000000002b19722
  0x0000000002b1973f: add    $0x6,%r9d
  0x0000000002b19743: jmp    0x0000000002b19722
  0x0000000002b19745: add    $0x7,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55

  0x0000000002b19749: jmp    0x0000000002b19722
  0x0000000002b1974b: mov    $0xffffff86,%edx
  0x0000000002b19750: mov    %r8d,(%rsp)
  0x0000000002b19754: mov    %r9d,0x4(%rsp)
  0x0000000002b19759: mov    %ecx,0x8(%rsp)
  0x0000000002b1975d: xchg   %ax,%ax
  0x0000000002b1975f: callq  0x0000000002a457a0  ; OopMap{[8]=NarrowOop off=388}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43
                                                ;   {runtime_call}
  0x0000000002b19764: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43

  0x0000000002b19765: mov    $0xffffff65,%edx
  0x0000000002b1976a: mov    %r8d,(%rsp)
  0x0000000002b1976e: mov    %r9d,0x8(%rsp)
  0x0000000002b19773: mov    %r10,0x10(%rsp)
  0x0000000002b19778: data16 xchg %ax,%ax
  0x0000000002b1977b: callq  0x0000000002a457a0  ; OopMap{[16]=Oop off=416}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7
                                                ;   {runtime_call}
  0x0000000002b19780: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7

  0x0000000002b19781: mov    $0xffffff65,%edx
  0x0000000002b19786: mov    %r9d,0x4(%rsp)
  0x0000000002b1978b: mov    %r8d,0x8(%rsp)
  0x0000000002b19790: mov    %r10,0x10(%rsp)
  0x0000000002b19795: xchg   %ax,%ax
  0x0000000002b19797: callq  0x0000000002a457a0  ; OopMap{[16]=Oop off=444}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25
                                                ;   {runtime_call}
  0x0000000002b1979c: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25

  0x0000000002b1979d: mov    $0xfffffff6,%edx
  0x0000000002b197a2: nop
  0x0000000002b197a3: callq  0x0000000002a457a0  ; OopMap{off=456}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4
                                                ;   {runtime_call}
  0x0000000002b197a8: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4

  0x0000000002b197a9: hlt    
  0x0000000002b197aa: hlt    
  0x0000000002b197ab: hlt    
  0x0000000002b197ac: hlt    
  0x0000000002b197ad: hlt    
  0x0000000002b197ae: hlt    
  0x0000000002b197af: hlt    
  0x0000000002b197b0: hlt    
  0x0000000002b197b1: hlt    
  0x0000000002b197b2: hlt    
  0x0000000002b197b3: hlt    
  0x0000000002b197b4: hlt    
  0x0000000002b197b5: hlt    
  0x0000000002b197b6: hlt    
  0x0000000002b197b7: hlt    
  0x0000000002b197b8: hlt    
  0x0000000002b197b9: hlt    
  0x0000000002b197ba: hlt    
  0x0000000002b197bb: hlt    
  0x0000000002b197bc: hlt    
  0x0000000002b197bd: hlt    
  0x0000000002b197be: hlt    
  0x0000000002b197bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b197c0: jmpq   0x0000000002a6f2a0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002b197c5: callq  0x0000000002b197ca
  0x0000000002b197ca: subq   $0x5,(%rsp)
  0x0000000002b197cf: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b197d4: hlt    
  0x0000000002b197d5: hlt    
  0x0000000002b197d6: hlt    
  0x0000000002b197d7: hlt    
<nmethod compile_id='31' compiler='C2' level='4' entry='0x0000000002b195e0' size='1768' address='0x0000000002b19490' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='848' scopes_pcs_offset='1008' dependencies_offset='1744' nul_chk_table_offset='1752' method='java/lang/String indexOf (II)I' bytes='70' count='1730' backedge_count='104940' iicount='1730' stamp='0.584'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b19050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002b191c0: mov    0x8(%rdx),%r10d
  0x0000000002b191c4: shl    $0x3,%r10
  0x0000000002b191c8: cmp    %rax,%r10
  0x0000000002b191cb: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b191d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b191dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b191e0: mov    %eax,-0x6000(%rsp)
  0x0000000002b191e7: push   %rbp
  0x0000000002b191e8: sub    $0x30,%rsp
  0x0000000002b191ec: movabs $0x1b772908,%r9    ;   {metadata(method data for {method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b191f6: mov    0xdc(%r9),%esi
  0x0000000002b191fd: add    $0x8,%esi
  0x0000000002b19200: mov    %esi,0xdc(%r9)
  0x0000000002b19207: movabs $0x1b594db8,%r9    ;   {metadata({method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b19211: and    $0x1ff8,%esi
  0x0000000002b19217: cmp    $0x0,%esi
  0x0000000002b1921a: je     0x0000000002b192c8  ;*aload_0
                                                ; - java.lang.String::indexOf@0

  0x0000000002b19220: mov    %rdx,%r9
  0x0000000002b19223: movabs $0x1b772908,%rsi   ;   {metadata(method data for {method} {0x000000001b594dc0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002b1922d: mov    0x8(%r9),%r9d
  0x0000000002b19231: shl    $0x3,%r9
  0x0000000002b19235: cmp    0x110(%rsi),%r9
  0x0000000002b1923c: jne    0x0000000002b1924b
  0x0000000002b1923e: addq   $0x1,0x118(%rsi)
  0x0000000002b19246: jmpq   0x0000000002b192b1
  0x0000000002b1924b: cmp    0x120(%rsi),%r9
  0x0000000002b19252: jne    0x0000000002b19261
  0x0000000002b19254: addq   $0x1,0x128(%rsi)
  0x0000000002b1925c: jmpq   0x0000000002b192b1
  0x0000000002b19261: cmpq   $0x0,0x110(%rsi)
  0x0000000002b1926c: jne    0x0000000002b19285
  0x0000000002b1926e: mov    %r9,0x110(%rsi)
  0x0000000002b19275: movq   $0x1,0x118(%rsi)
  0x0000000002b19280: jmpq   0x0000000002b192b1
  0x0000000002b19285: cmpq   $0x0,0x120(%rsi)
  0x0000000002b19290: jne    0x0000000002b192a9
  0x0000000002b19292: mov    %r9,0x120(%rsi)
  0x0000000002b19299: movq   $0x1,0x128(%rsi)
  0x0000000002b192a4: jmpq   0x0000000002b192b1
  0x0000000002b192a9: addq   $0x1,0x108(%rsi)
  0x0000000002b192b1: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3

  0x0000000002b192b7: callq  0x0000000002a461a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3
                                                ;   {optimized virtual_call}
  0x0000000002b192bc: add    $0x30,%rsp
  0x0000000002b192c0: pop    %rbp
  0x0000000002b192c1: test   %eax,-0x1f291c7(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b192c7: retq   
  0x0000000002b192c8: mov    %r9,0x8(%rsp)
  0x0000000002b192cd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b192d5: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1
                                                ;   {runtime_call}
  0x0000000002b192da: jmpq   0x0000000002b19220
  0x0000000002b192df: nop
  0x0000000002b192e0: nop
  0x0000000002b192e1: mov    0x2a8(%r15),%rax
  0x0000000002b192e8: movabs $0x0,%r10
  0x0000000002b192f2: mov    %r10,0x2a8(%r15)
  0x0000000002b192f9: movabs $0x0,%r10
  0x0000000002b19303: mov    %r10,0x2b0(%r15)
  0x0000000002b1930a: add    $0x30,%rsp
  0x0000000002b1930e: pop    %rbp
  0x0000000002b1930f: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b19314: hlt    
  0x0000000002b19315: hlt    
  0x0000000002b19316: hlt    
  0x0000000002b19317: hlt    
  0x0000000002b19318: hlt    
  0x0000000002b19319: hlt    
  0x0000000002b1931a: hlt    
  0x0000000002b1931b: hlt    
  0x0000000002b1931c: hlt    
  0x0000000002b1931d: hlt    
  0x0000000002b1931e: hlt    
  0x0000000002b1931f: hlt    
[Stub Code]
  0x0000000002b19320: nop                       ;   {no_reloc}
  0x0000000002b19321: nop
  0x0000000002b19322: nop
  0x0000000002b19323: nop
  0x0000000002b19324: nop
  0x0000000002b19325: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b1932f: jmpq   0x0000000002b1932f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b19334: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b19339: mov    %rsp,-0x28(%rsp)
  0x0000000002b1933e: sub    $0x80,%rsp
  0x0000000002b19345: mov    %rax,0x78(%rsp)
  0x0000000002b1934a: mov    %rcx,0x70(%rsp)
  0x0000000002b1934f: mov    %rdx,0x68(%rsp)
  0x0000000002b19354: mov    %rbx,0x60(%rsp)
  0x0000000002b19359: mov    %rbp,0x50(%rsp)
  0x0000000002b1935e: mov    %rsi,0x48(%rsp)
  0x0000000002b19363: mov    %rdi,0x40(%rsp)
  0x0000000002b19368: mov    %r8,0x38(%rsp)
  0x0000000002b1936d: mov    %r9,0x30(%rsp)
  0x0000000002b19372: mov    %r10,0x28(%rsp)
  0x0000000002b19377: mov    %r11,0x20(%rsp)
  0x0000000002b1937c: mov    %r12,0x18(%rsp)
  0x0000000002b19381: mov    %r13,0x10(%rsp)
  0x0000000002b19386: mov    %r14,0x8(%rsp)
  0x0000000002b1938b: mov    %r15,(%rsp)
  0x0000000002b1938f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b19399: movabs $0x2b19339,%rdx    ;   {internal_word}
  0x0000000002b193a3: mov    %rsp,%r8
  0x0000000002b193a6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b193aa: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b193af: hlt    
[Deopt Handler Code]
  0x0000000002b193b0: movabs $0x2b193b0,%r10    ;   {section_word}
  0x0000000002b193ba: push   %r10
  0x0000000002b193bc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b193c1: hlt    
  0x0000000002b193c2: hlt    
  0x0000000002b193c3: hlt    
  0x0000000002b193c4: hlt    
  0x0000000002b193c5: hlt    
  0x0000000002b193c6: hlt    
  0x0000000002b193c7: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002b191c0' size='1040' address='0x0000000002b19050' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='1708' iicount='1708' stamp='0.588'/>
<writer thread='53496'/>
<task_queued compile_id='34' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='256' iicount='256' level='3' stamp='0.588' comment='tiered' hot_count='256'/>
<writer thread='18132'/>
Decoding compiled method 0x0000000002b1b810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b600778} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002b1b960: mov    0x8(%rdx),%r10d
  0x0000000002b1b964: shl    $0x3,%r10
  0x0000000002b1b968: cmp    %r10,%rax
  0x0000000002b1b96b: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b1b971: data16 xchg %ax,%ax
  0x0000000002b1b974: nopl   0x0(%rax,%rax,1)
  0x0000000002b1b97c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b1b980: mov    %eax,-0x6000(%rsp)
  0x0000000002b1b987: push   %rbp
  0x0000000002b1b988: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1

  0x0000000002b1b98c: mov    %rdx,0x40(%rsp)
  0x0000000002b1b991: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2

  0x0000000002b1b995: mov    0xc(%r12,%r9,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; implicit exception: dispatches to 0x0000000002b1bbc0
  0x0000000002b1b99a: mov    %r8d,%r11d
  0x0000000002b1b99d: sub    %ebp,%r11d
  0x0000000002b1b9a0: test   %r11d,%r11d
  0x0000000002b1b9a3: jg     0x0000000002b1b9b6  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1

  0x0000000002b1b9a5: add    $0x60,%rsp
  0x0000000002b1b9a9: pop    %rbp
  0x0000000002b1b9aa: test   %eax,-0x1f2b9b0(%rip)        # 0x0000000000bf0000
                                                ;   {poll_return}
  0x0000000002b1b9b0: retq   
  0x0000000002b1b9b1: mov    %r8d,%edi
  0x0000000002b1b9b4: jmp    0x0000000002b1b9cc
  0x0000000002b1b9b6: mov    %ebp,%edi
  0x0000000002b1b9b8: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9ba: mov    %edi,%r11d
  0x0000000002b1b9bd: sub    %r8d,%r11d
  0x0000000002b1b9c0: add    $0x2,%r11d
  0x0000000002b1b9c4: test   %r11d,%r11d
  0x0000000002b1b9c7: jl     0x0000000002b1b9b1  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9c9: add    $0x2,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9cc: test   %edi,%edi
  0x0000000002b1b9ce: jle    0x0000000002b1b9db  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9d0: mov    $0x7ffffff7,%ecx
  0x0000000002b1b9d5: sub    %edi,%ecx
  0x0000000002b1b9d7: test   %ecx,%ecx
  0x0000000002b1b9d9: jge    0x0000000002b1b9ef  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9db: mov    %r9d,0x28(%rsp)
  0x0000000002b1b9e0: data16 xchg %ax,%ax
  0x0000000002b1b9e3: callq  0x0000000002a461a0  ; OopMap{[40]=NarrowOop [64]=Oop off=136}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17
                                                ;   {optimized virtual_call}
  0x0000000002b1b9e8: mov    %eax,%edi
  0x0000000002b1b9ea: mov    0x28(%rsp),%r9d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1b9ef: cmp    $0x80000,%edi
  0x0000000002b1b9f5: ja     0x0000000002b1bb76
  0x0000000002b1b9fb: movslq %edi,%r10
  0x0000000002b1b9fe: shl    %r10
  0x0000000002b1ba01: add    $0x17,%r10
  0x0000000002b1ba05: mov    %r10,%rax
  0x0000000002b1ba08: and    $0xfffffffffffffff8,%rax
  0x0000000002b1ba0c: cmp    $0x80000,%edi
  0x0000000002b1ba12: ja     0x0000000002b1bb26
  0x0000000002b1ba18: mov    0x60(%r15),%rbx
  0x0000000002b1ba1c: mov    %rbx,%r11
  0x0000000002b1ba1f: add    %rax,%r11
  0x0000000002b1ba22: cmp    0x70(%r15),%r11
  0x0000000002b1ba26: jae    0x0000000002b1bb26
  0x0000000002b1ba2c: mov    %r11,0x60(%r15)
  0x0000000002b1ba30: prefetchw 0xc0(%r11)
  0x0000000002b1ba38: movq   $0x1,(%rbx)
  0x0000000002b1ba3f: prefetchw 0x100(%r11)
  0x0000000002b1ba47: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002b1ba4e: mov    %edi,0xc(%rbx)
  0x0000000002b1ba51: prefetchw 0x140(%r11)
  0x0000000002b1ba59: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1ba61: cmp    %edi,%ebp
  0x0000000002b1ba63: mov    %edi,%esi
  0x0000000002b1ba65: cmovl  %ebp,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1ba68: mov    %rbx,%r13
  0x0000000002b1ba6b: add    $0x10,%r13         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1ba6f: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2

  0x0000000002b1ba73: shr    $0x3,%r10
  0x0000000002b1ba77: mov    %r10,%rcx
  0x0000000002b1ba7a: add    $0xfffffffffffffffe,%rcx
  0x0000000002b1ba7e: cmp    %esi,%ebp
  0x0000000002b1ba80: jb     0x0000000002b1bb7e
  0x0000000002b1ba86: cmp    %esi,%edi
  0x0000000002b1ba88: jb     0x0000000002b1bb7e
  0x0000000002b1ba8e: test   %esi,%esi
  0x0000000002b1ba90: jle    0x0000000002b1bbae
  0x0000000002b1ba96: lea    0x10(%r12,%r9,8),%r9
  0x0000000002b1ba9b: cmp    %edi,%esi
  0x0000000002b1ba9d: jl     0x0000000002b1bae3
  0x0000000002b1ba9f: add    $0xfffffffffffffff0,%rax
  0x0000000002b1baa3: shr    $0x3,%rax
  0x0000000002b1baa7: mov    %r9,%rcx
  0x0000000002b1baaa: mov    %r13,%rdx
  0x0000000002b1baad: mov    %rax,%r8
  0x0000000002b1bab0: movabs $0x2a52ca0,%r10
  0x0000000002b1baba: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1babd: mov    %rbx,%r10
  0x0000000002b1bac0: shr    $0x3,%r10
  0x0000000002b1bac4: mov    0x40(%rsp),%r11
  0x0000000002b1bac9: mov    %r10d,0x10(%r11)
  0x0000000002b1bacd: mov    %r11,%r10
  0x0000000002b1bad0: shr    $0x9,%r10
  0x0000000002b1bad4: mov    $0xe7a5000,%r11d
  0x0000000002b1bada: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23

  0x0000000002b1bade: jmpq   0x0000000002b1b9a5
  0x0000000002b1bae3: movslq %esi,%r8
  0x0000000002b1bae6: mov    %r8,%r11
  0x0000000002b1bae9: shl    %r11
  0x0000000002b1baec: add    $0x10,%r11
  0x0000000002b1baf0: mov    %r11,%rcx
  0x0000000002b1baf3: and    $0xfffffffffffffff9,%rcx
  0x0000000002b1baf7: mov    %rbx,%rdi
  0x0000000002b1bafa: add    %rcx,%rdi
  0x0000000002b1bafd: shr    $0x3,%r11
  0x0000000002b1bb01: sub    %r11,%r10
  0x0000000002b1bb04: mov    %r10,%rcx
  0x0000000002b1bb07: xor    %rax,%rax
  0x0000000002b1bb0a: shl    $0x3,%rcx
  0x0000000002b1bb0e: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b1bb11: mov    %r9,%rcx
  0x0000000002b1bb14: mov    %r13,%rdx
  0x0000000002b1bb17: movabs $0x2a52980,%r10
  0x0000000002b1bb21: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1bb24: jmp    0x0000000002b1babd
  0x0000000002b1bb26: mov    %r9d,0x2c(%rsp)
  0x0000000002b1bb2b: mov    %rax,0x38(%rsp)
  0x0000000002b1bb30: mov    %r10,0x30(%rsp)
  0x0000000002b1bb35: mov    %edi,0x28(%rsp)
  0x0000000002b1bb39: rex.W pushq 0x40(%rsp)
  0x0000000002b1bb3e: rex.W popq 0x20(%rsp)
  0x0000000002b1bb43: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002b1bb4d: mov    %edi,%r8d
  0x0000000002b1bb50: data16 xchg %ax,%ax
  0x0000000002b1bb53: callq  0x0000000002b04e60  ; OopMap{[32]=Oop [44]=NarrowOop [64]=Oop off=504}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ;   {runtime_call}
  0x0000000002b1bb58: mov    %rax,%r11
  0x0000000002b1bb5b: mov    0x28(%rsp),%edi
  0x0000000002b1bb5f: mov    0x30(%rsp),%r10
  0x0000000002b1bb64: mov    0x38(%rsp),%rax
  0x0000000002b1bb69: mov    0x2c(%rsp),%r9d
  0x0000000002b1bb6e: mov    %r11,%rbx
  0x0000000002b1bb71: jmpq   0x0000000002b1ba61
  0x0000000002b1bb76: movslq %edi,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1bb79: jmpq   0x0000000002b1b9fe
  0x0000000002b1bb7e: mov    %r13,%rdi
  0x0000000002b1bb81: xor    %rax,%rax
  0x0000000002b1bb84: shl    $0x3,%rcx
  0x0000000002b1bb88: rep rex.W stos %al,%es:(%rdi)
  0x0000000002b1bb8b: xor    %r8d,%r8d
  0x0000000002b1bb8e: mov    %rbx,%r9
  0x0000000002b1bb91: xor    %edi,%edi
  0x0000000002b1bb93: mov    0x40(%rsp),%rbp
  0x0000000002b1bb98: mov    %rbx,0x28(%rsp)
  0x0000000002b1bb9d: xchg   %ax,%ax
  0x0000000002b1bb9f: callq  0x0000000002b0e460  ; OopMap{rbp=Oop [40]=Oop [64]=Oop off=580}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20
                                                ;   {runtime_call}
  0x0000000002b1bba4: mov    0x28(%rsp),%rbx
  0x0000000002b1bba9: jmpq   0x0000000002b1babd
  0x0000000002b1bbae: mov    %r13,%rdi
  0x0000000002b1bbb1: xor    %rax,%rax
  0x0000000002b1bbb4: shl    $0x3,%rcx
  0x0000000002b1bbb8: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1bbbb: jmpq   0x0000000002b1babd
  0x0000000002b1bbc0: mov    $0xfffffff6,%edx
  0x0000000002b1bbc5: xchg   %ax,%ax
  0x0000000002b1bbc7: callq  0x0000000002a457a0  ; OopMap{off=620}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ;   {runtime_call}
  0x0000000002b1bbcc: int3   
  0x0000000002b1bbcd: jmp    0x0000000002b1bbcf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20

  0x0000000002b1bbcf: mov    %rax,%rdx
  0x0000000002b1bbd2: jmp    0x0000000002b1bbd7  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17

  0x0000000002b1bbd4: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1

  0x0000000002b1bbd7: add    $0x60,%rsp
  0x0000000002b1bbdb: pop    %rbp
  0x0000000002b1bbdc: jmpq   0x0000000002b0e5e0  ;   {runtime_call}
  0x0000000002b1bbe1: hlt    
  0x0000000002b1bbe2: hlt    
  0x0000000002b1bbe3: hlt    
  0x0000000002b1bbe4: hlt    
  0x0000000002b1bbe5: hlt    
  0x0000000002b1bbe6: hlt    
  0x0000000002b1bbe7: hlt    
  0x0000000002b1bbe8: hlt    
  0x0000000002b1bbe9: hlt    
  0x0000000002b1bbea: hlt    
  0x0000000002b1bbeb: hlt    
  0x0000000002b1bbec: hlt    
  0x0000000002b1bbed: hlt    
  0x0000000002b1bbee: hlt    
  0x0000000002b1bbef: hlt    
  0x0000000002b1bbf0: hlt    
  0x0000000002b1bbf1: hlt    
  0x0000000002b1bbf2: hlt    
  0x0000000002b1bbf3: hlt    
  0x0000000002b1bbf4: hlt    
  0x0000000002b1bbf5: hlt    
  0x0000000002b1bbf6: hlt    
  0x0000000002b1bbf7: hlt    
  0x0000000002b1bbf8: hlt    
  0x0000000002b1bbf9: hlt    
  0x0000000002b1bbfa: hlt    
  0x0000000002b1bbfb: hlt    
  0x0000000002b1bbfc: hlt    
  0x0000000002b1bbfd: hlt    
  0x0000000002b1bbfe: hlt    
  0x0000000002b1bbff: hlt    
[Stub Code]
  0x0000000002b1bc00: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002b1bc0a: jmpq   0x0000000002b1bc0a  ;   {runtime_call}
[Exception Handler]
  0x0000000002b1bc0f: jmpq   0x0000000002a6f2a0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002b1bc14: callq  0x0000000002b1bc19
  0x0000000002b1bc19: subq   $0x5,(%rsp)
  0x0000000002b1bc1e: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1bc23: hlt    
  0x0000000002b1bc24: hlt    
  0x0000000002b1bc25: hlt    
  0x0000000002b1bc26: hlt    
  0x0000000002b1bc27: hlt    
<nmethod compile_id='30' compiler='C2' level='4' entry='0x0000000002b1b960' size='1816' address='0x0000000002b1b810' relocation_offset='288' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1720' handler_table_offset='1728' nul_chk_table_offset='1800' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='34442' iicount='34442' stamp='0.597'/>
<writer thread='53496'/>
Decoding compiled method 0x0000000002b1b450:
Code:
[Entry Point]
  # {method} {0x000000001b60ba08} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000000002b1b5c0: mov    0x8(%rdx),%r10d
  0x0000000002b1b5c4: shl    $0x3,%r10
  0x0000000002b1b5c8: cmp    %r10,%rax
  0x0000000002b1b5cb: je     0x0000000002b1b5d8
  0x0000000002b1b5d1: jmpq   0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b1b5d6: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002b1b5d8: mov    %eax,-0x6000(%rsp)
  0x0000000002b1b5df: push   %rbp
  0x0000000002b1b5e0: mov    %rsp,%rbp
  0x0000000002b1b5e3: sub    $0x60,%rsp
  0x0000000002b1b5e7: mov    %r8,0x28(%rsp)
  0x0000000002b1b5ec: cmp    $0x0,%r8
  0x0000000002b1b5f0: lea    0x28(%rsp),%r8
  0x0000000002b1b5f5: cmove  0x28(%rsp),%r8
  0x0000000002b1b5fb: mov    %rdx,0x20(%rsp)
  0x0000000002b1b600: cmp    $0x0,%rdx
  0x0000000002b1b604: lea    0x20(%rsp),%rdx
  0x0000000002b1b609: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002b1b60f: movabs $0x2b1b60f,%r10    ;   {section_word}
  0x0000000002b1b619: mov    %r10,0x1e0(%r15)
  0x0000000002b1b620: mov    %rsp,0x1d8(%r15)
  0x0000000002b1b627: cmpb   $0x0,0x62e8b720(%rip)        # 0x00000000659a6d4e
                                                ;   {external_word}
  0x0000000002b1b62e: je     0x0000000002b1b676
  0x0000000002b1b634: push   %rdx
  0x0000000002b1b635: push   %r8
  0x0000000002b1b637: push   %r9
  0x0000000002b1b639: movabs $0x1b60ba00,%rdx   ;   {metadata({method} {0x000000001b60ba08} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002b1b643: mov    %r15,%rcx
  0x0000000002b1b646: sub    $0x20,%rsp
  0x0000000002b1b64a: test   $0xf,%esp
  0x0000000002b1b650: je     0x0000000002b1b668
  0x0000000002b1b656: sub    $0x8,%rsp
  0x0000000002b1b65a: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b1b65f: add    $0x8,%rsp
  0x0000000002b1b663: jmpq   0x0000000002b1b66d
  0x0000000002b1b668: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b1b66d: add    $0x20,%rsp
  0x0000000002b1b671: pop    %r9
  0x0000000002b1b673: pop    %r8
  0x0000000002b1b675: pop    %rdx
  0x0000000002b1b676: lea    0x1f8(%r15),%rcx
  0x0000000002b1b67d: movl   $0x4,0x270(%r15)
  0x0000000002b1b688: callq  0x000000006536f040  ;   {runtime_call}
  0x0000000002b1b68d: vzeroupper 
  0x0000000002b1b690: movl   $0x5,0x270(%r15)
  0x0000000002b1b69b: mov    %r15d,%ecx
  0x0000000002b1b69e: shr    $0x4,%ecx
  0x0000000002b1b6a1: and    $0xffc,%ecx
  0x0000000002b1b6a7: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002b1b6b1: mov    %ecx,(%r10,%rcx,1)
  0x0000000002b1b6b5: cmpl   $0x0,0x62e8c279(%rip)        # 0x00000000659a7938
                                                ;   {external_word}
  0x0000000002b1b6bf: jne    0x0000000002b1b6d3
  0x0000000002b1b6c5: cmpl   $0x0,0x30(%r15)
  0x0000000002b1b6cd: je     0x0000000002b1b6f4
  0x0000000002b1b6d3: mov    %rax,-0x8(%rbp)
  0x0000000002b1b6d7: mov    %r15,%rcx
  0x0000000002b1b6da: mov    %rsp,%r12
  0x0000000002b1b6dd: sub    $0x20,%rsp
  0x0000000002b1b6e1: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1b6e5: callq  0x00000000653d52a0  ;   {runtime_call}
  0x0000000002b1b6ea: mov    %r12,%rsp
  0x0000000002b1b6ed: xor    %r12,%r12
  0x0000000002b1b6f0: mov    -0x8(%rbp),%rax
  0x0000000002b1b6f4: movl   $0x8,0x270(%r15)
  0x0000000002b1b6ff: cmpl   $0x1,0x29c(%r15)
  0x0000000002b1b70a: je     0x0000000002b1b7ae
  0x0000000002b1b710: cmpb   $0x0,0x62e8b637(%rip)        # 0x00000000659a6d4e
                                                ;   {external_word}
  0x0000000002b1b717: je     0x0000000002b1b75d
  0x0000000002b1b71d: mov    %rax,-0x8(%rbp)
  0x0000000002b1b721: movabs $0x1b60ba00,%rdx   ;   {metadata({method} {0x000000001b60ba08} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002b1b72b: mov    %r15,%rcx
  0x0000000002b1b72e: sub    $0x20,%rsp
  0x0000000002b1b732: test   $0xf,%esp
  0x0000000002b1b738: je     0x0000000002b1b750
  0x0000000002b1b73e: sub    $0x8,%rsp
  0x0000000002b1b742: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b1b747: add    $0x8,%rsp
  0x0000000002b1b74b: jmpq   0x0000000002b1b755
  0x0000000002b1b750: callq  0x00000000653bdf50  ;   {runtime_call}
  0x0000000002b1b755: add    $0x20,%rsp
  0x0000000002b1b759: mov    -0x8(%rbp),%rax
  0x0000000002b1b75d: movabs $0x0,%r10
  0x0000000002b1b767: mov    %r10,0x1d8(%r15)
  0x0000000002b1b76e: movabs $0x0,%r10
  0x0000000002b1b778: mov    %r10,0x1e0(%r15)
  0x0000000002b1b77f: test   %rax,%rax
  0x0000000002b1b782: je     0x0000000002b1b78b
  0x0000000002b1b788: mov    (%rax),%rax
  0x0000000002b1b78b: mov    0x38(%r15),%rcx
  0x0000000002b1b78f: movl   $0x0,0x100(%rcx)
  0x0000000002b1b799: leaveq 
  0x0000000002b1b79a: cmpq   $0x0,0x8(%r15)
  0x0000000002b1b7a2: jne    0x0000000002b1b7a9
  0x0000000002b1b7a8: retq   
  0x0000000002b1b7a9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002b1b7ae: mov    %rax,-0x8(%rbp)
  0x0000000002b1b7b2: mov    %rsp,%r12
  0x0000000002b1b7b5: sub    $0x20,%rsp
  0x0000000002b1b7b9: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1b7bd: callq  0x00000000653bdf70  ;   {runtime_call}
  0x0000000002b1b7c2: mov    %r12,%rsp
  0x0000000002b1b7c5: xor    %r12,%r12
  0x0000000002b1b7c8: mov    -0x8(%rbp),%rax
  0x0000000002b1b7cc: jmpq   0x0000000002b1b710
  0x0000000002b1b7d1: hlt    
  0x0000000002b1b7d2: hlt    
  0x0000000002b1b7d3: hlt    
  0x0000000002b1b7d4: hlt    
  0x0000000002b1b7d5: hlt    
  0x0000000002b1b7d6: hlt    
  0x0000000002b1b7d7: hlt    
<nmethod compile_id='35' compile_kind='c2n' level='0' entry='0x0000000002b1b5c0' size='904' address='0x0000000002b1b450' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='256' iicount='256' stamp='0.600'/>
<writer thread='49028'/>
<task_queued compile_id='36' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='256' backedge_count='57' iicount='256' level='3' stamp='0.600' comment='tiered' hot_count='256'/>
<writer thread='53160'/>
Decoding compiled method 0x0000000002b1fc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002b1fda0: mov    0x8(%rdx),%r10d
  0x0000000002b1fda4: shl    $0x3,%r10
  0x0000000002b1fda8: cmp    %rax,%r10
  0x0000000002b1fdab: jne    0x0000000002a45f60  ;   {runtime_call}
  0x0000000002b1fdb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002b1fdbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002b1fdc0: mov    %eax,-0x6000(%rsp)
  0x0000000002b1fdc7: push   %rbp
  0x0000000002b1fdc8: sub    $0x60,%rsp
  0x0000000002b1fdcc: mov    %r8,0x28(%rsp)
  0x0000000002b1fdd1: lea    0x40(%rsp),%rsi
  0x0000000002b1fdd6: mov    %rdx,0x8(%rsi)
  0x0000000002b1fdda: mov    (%rdx),%rax
  0x0000000002b1fddd: mov    %rax,%rdi
  0x0000000002b1fde0: and    $0x7,%rdi
  0x0000000002b1fde4: cmp    $0x5,%rdi
  0x0000000002b1fde8: jne    0x0000000002b1fe6f
  0x0000000002b1fdee: mov    0x8(%rdx),%edi
  0x0000000002b1fdf1: shl    $0x3,%rdi
  0x0000000002b1fdf5: mov    0xa8(%rdi),%rdi
  0x0000000002b1fdfc: or     %r15,%rdi
  0x0000000002b1fdff: xor    %rax,%rdi
  0x0000000002b1fe02: and    $0xffffffffffffff87,%rdi
  0x0000000002b1fe06: je     0x0000000002b1fe97
  0x0000000002b1fe0c: test   $0x7,%rdi
  0x0000000002b1fe13: jne    0x0000000002b1fe5c
  0x0000000002b1fe15: test   $0x300,%rdi
  0x0000000002b1fe1c: jne    0x0000000002b1fe3b
  0x0000000002b1fe1e: and    $0x37f,%rax
  0x0000000002b1fe25: mov    %rax,%rdi
  0x0000000002b1fe28: or     %r15,%rdi
  0x0000000002b1fe2b: lock cmpxchg %rdi,(%rdx)
  0x0000000002b1fe30: jne    0x0000000002b2021d
  0x0000000002b1fe36: jmpq   0x0000000002b1fe97
  0x0000000002b1fe3b: mov    0x8(%rdx),%edi
  0x0000000002b1fe3e: shl    $0x3,%rdi
  0x0000000002b1fe42: mov    0xa8(%rdi),%rdi
  0x0000000002b1fe49: or     %r15,%rdi
  0x0000000002b1fe4c: lock cmpxchg %rdi,(%rdx)
  0x0000000002b1fe51: jne    0x0000000002b2021d
  0x0000000002b1fe57: jmpq   0x0000000002b1fe97
  0x0000000002b1fe5c: mov    0x8(%rdx),%edi
  0x0000000002b1fe5f: shl    $0x3,%rdi
  0x0000000002b1fe63: mov    0xa8(%rdi),%rdi
  0x0000000002b1fe6a: lock cmpxchg %rdi,(%rdx)
  0x0000000002b1fe6f: mov    (%rdx),%rax
  0x0000000002b1fe72: or     $0x1,%rax
  0x0000000002b1fe76: mov    %rax,(%rsi)
  0x0000000002b1fe79: lock cmpxchg %rsi,(%rdx)
  0x0000000002b1fe7e: je     0x0000000002b1fe97
  0x0000000002b1fe84: sub    %rsp,%rax
  0x0000000002b1fe87: and    $0xfffffffffffff007,%rax
  0x0000000002b1fe8e: mov    %rax,(%rsi)
  0x0000000002b1fe91: jne    0x0000000002b2021d
  0x0000000002b1fe97: movabs $0x1b844fc8,%rsi   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b1fea1: mov    0xdc(%rsi),%edi
  0x0000000002b1fea7: add    $0x8,%edi
  0x0000000002b1feaa: mov    %edi,0xdc(%rsi)
  0x0000000002b1feb0: movabs $0x1b5c6750,%rsi   ;   {metadata({method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b1feba: and    $0x1ff8,%edi
  0x0000000002b1fec0: cmp    $0x0,%edi
  0x0000000002b1fec3: je     0x0000000002b20230  ;*aload_0
                                                ; - java.util.Hashtable::get@0

  0x0000000002b1fec9: mov    0x1c(%rdx),%esi
  0x0000000002b1fecc: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::get@1

  0x0000000002b1fed0: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002b20247
  0x0000000002b1fed3: mov    %r8,%rdx
  0x0000000002b1fed6: movabs $0x1b844fc8,%rdi   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b1fee0: mov    0x8(%rdx),%edx
  0x0000000002b1fee3: shl    $0x3,%rdx
  0x0000000002b1fee7: cmp    0x110(%rdi),%rdx
  0x0000000002b1feee: jne    0x0000000002b1fefd
  0x0000000002b1fef0: addq   $0x1,0x118(%rdi)
  0x0000000002b1fef8: jmpq   0x0000000002b1ff63
  0x0000000002b1fefd: cmp    0x120(%rdi),%rdx
  0x0000000002b1ff04: jne    0x0000000002b1ff13
  0x0000000002b1ff06: addq   $0x1,0x128(%rdi)
  0x0000000002b1ff0e: jmpq   0x0000000002b1ff63
  0x0000000002b1ff13: cmpq   $0x0,0x110(%rdi)
  0x0000000002b1ff1e: jne    0x0000000002b1ff37
  0x0000000002b1ff20: mov    %rdx,0x110(%rdi)
  0x0000000002b1ff27: movq   $0x1,0x118(%rdi)
  0x0000000002b1ff32: jmpq   0x0000000002b1ff63
  0x0000000002b1ff37: cmpq   $0x0,0x120(%rdi)
  0x0000000002b1ff42: jne    0x0000000002b1ff5b
  0x0000000002b1ff44: mov    %rdx,0x120(%rdi)
  0x0000000002b1ff4b: movq   $0x1,0x128(%rdi)
  0x0000000002b1ff56: jmpq   0x0000000002b1ff63
  0x0000000002b1ff5b: addq   $0x1,0x108(%rdi)
  0x0000000002b1ff63: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6

  0x0000000002b1ff66: mov    %rsi,0x20(%rsp)
  0x0000000002b1ff6b: nop
  0x0000000002b1ff6c: nop
  0x0000000002b1ff6d: movabs $0xffffffffffffffff,%rax
  0x0000000002b1ff77: callq  0x0000000002a463e0  ; OopMap{[40]=Oop [32]=Oop [72]=Oop off=476}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6
                                                ;   {virtual_call}
  0x0000000002b1ff7c: mov    %eax,0x38(%rsp)
  0x0000000002b1ff80: mov    0x20(%rsp),%rsi
  0x0000000002b1ff85: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::get@15
                                                ; implicit exception: dispatches to 0x0000000002b2024c
  0x0000000002b1ff89: mov    %rax,%rdx
  0x0000000002b1ff8c: and    $0x7fffffff,%edx
  0x0000000002b1ff92: mov    %rax,%rdi
  0x0000000002b1ff95: mov    %rdx,%rax
  0x0000000002b1ff98: cmp    $0x80000000,%eax
  0x0000000002b1ff9e: jne    0x0000000002b1ffb0
  0x0000000002b1ffa4: xor    %edx,%edx
  0x0000000002b1ffa6: cmp    $0xffffffff,%r8d
  0x0000000002b1ffaa: je     0x0000000002b1ffb4
  0x0000000002b1ffb0: cltd   
  0x0000000002b1ffb1: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::get@16
                                                ; implicit exception: dispatches to 0x0000000002b20251
  0x0000000002b1ffb4: movslq %edx,%rdx
  0x0000000002b1ffb7: mov    0x10(%rsi,%rdx,4),%r8d
  0x0000000002b1ffbc: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::get@22

  0x0000000002b1ffc0: mov    0x28(%rsp),%rsi
  0x0000000002b1ffc5: cmp    $0x0,%r8
  0x0000000002b1ffc9: movabs $0x1b844fc8,%rdx   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b1ffd3: movabs $0x138,%rbx
  0x0000000002b1ffdd: je     0x0000000002b1ffed
  0x0000000002b1ffe3: movabs $0x148,%rbx
  0x0000000002b1ffed: mov    (%rdx,%rbx,1),%rax
  0x0000000002b1fff1: lea    0x1(%rax),%rax
  0x0000000002b1fff5: mov    %rax,(%rdx,%rbx,1)
  0x0000000002b1fff9: je     0x0000000002b201d6  ;*ifnull
                                                ; - java.util.Hashtable::get@27

  0x0000000002b1ffff: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.Hashtable::get@32
                                                ; implicit exception: dispatches to 0x0000000002b20256
  0x0000000002b20003: cmp    %edi,%edx
  0x0000000002b20005: movabs $0x1b844fc8,%rdx   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b2000f: movabs $0x158,%rbx
  0x0000000002b20019: jne    0x0000000002b20029
  0x0000000002b2001f: movabs $0x168,%rbx
  0x0000000002b20029: mov    (%rdx,%rbx,1),%rax
  0x0000000002b2002d: lea    0x1(%rax),%rax
  0x0000000002b20031: mov    %rax,(%rdx,%rbx,1)
  0x0000000002b20035: jne    0x0000000002b20132  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36

  0x0000000002b2003b: mov    0x10(%r8),%edx
  0x0000000002b2003f: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.Hashtable::get@41

  0x0000000002b20043: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002b2025b
  0x0000000002b20046: mov    %rdx,%rdi
  0x0000000002b20049: movabs $0x1b844fc8,%rbx   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b20053: mov    0x8(%rdi),%edi
  0x0000000002b20056: shl    $0x3,%rdi
  0x0000000002b2005a: cmp    0x180(%rbx),%rdi
  0x0000000002b20061: jne    0x0000000002b20070
  0x0000000002b20063: addq   $0x1,0x188(%rbx)
  0x0000000002b2006b: jmpq   0x0000000002b200d6
  0x0000000002b20070: cmp    0x190(%rbx),%rdi
  0x0000000002b20077: jne    0x0000000002b20086
  0x0000000002b20079: addq   $0x1,0x198(%rbx)
  0x0000000002b20081: jmpq   0x0000000002b200d6
  0x0000000002b20086: cmpq   $0x0,0x180(%rbx)
  0x0000000002b20091: jne    0x0000000002b200aa
  0x0000000002b20093: mov    %rdi,0x180(%rbx)
  0x0000000002b2009a: movq   $0x1,0x188(%rbx)
  0x0000000002b200a5: jmpq   0x0000000002b200d6
  0x0000000002b200aa: cmpq   $0x0,0x190(%rbx)
  0x0000000002b200b5: jne    0x0000000002b200ce
  0x0000000002b200b7: mov    %rdi,0x190(%rbx)
  0x0000000002b200be: movq   $0x1,0x198(%rbx)
  0x0000000002b200c9: jmpq   0x0000000002b200d6
  0x0000000002b200ce: addq   $0x1,0x178(%rbx)
  0x0000000002b200d6: mov    %r8,0x30(%rsp)
  0x0000000002b200db: mov    %rsi,%r8           ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45

  0x0000000002b200de: nop
  0x0000000002b200df: nop
  0x0000000002b200e0: nop
  0x0000000002b200e1: nop
  0x0000000002b200e2: nop
  0x0000000002b200e3: nop
  0x0000000002b200e4: nop
  0x0000000002b200e5: movabs $0xffffffffffffffff,%rax
  0x0000000002b200ef: callq  0x0000000002a463e0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=852}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45
                                                ;   {virtual_call}
  0x0000000002b200f4: cmp    $0x0,%eax
  0x0000000002b200f7: movabs $0x1b844fc8,%rax   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b20101: movabs $0x1a8,%rsi
  0x0000000002b2010b: je     0x0000000002b2011b
  0x0000000002b20111: movabs $0x1b8,%rsi
  0x0000000002b2011b: mov    (%rax,%rsi,1),%rdi
  0x0000000002b2011f: lea    0x1(%rdi),%rdi
  0x0000000002b20123: mov    %rdi,(%rax,%rsi,1)
  0x0000000002b20127: mov    0x30(%rsp),%r8
  0x0000000002b2012c: jne    0x0000000002b2018e  ;*ifeq
                                                ; - java.util.Hashtable::get@48

  0x0000000002b20132: mov    0x18(%r8),%eax
  0x0000000002b20136: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59

  0x0000000002b2013a: movabs $0x1b844fc8,%rsi   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b20144: mov    0xe0(%rsi),%edi
  0x0000000002b2014a: add    $0x8,%edi
  0x0000000002b2014d: mov    %edi,0xe0(%rsi)
  0x0000000002b20153: movabs $0x1b5c6750,%rsi   ;   {metadata({method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b2015d: and    $0xfff8,%edi
  0x0000000002b20163: cmp    $0x0,%edi
  0x0000000002b20166: je     0x0000000002b20260  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=972}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64

  0x0000000002b2016c: test   %eax,-0x1f30072(%rip)        # 0x0000000000bf0100
                                                ;   {poll}
  0x0000000002b20172: movabs $0x1b844fc8,%rsi   ;   {metadata(method data for {method} {0x000000001b5c6758} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002b2017c: incl   0x1c8(%rsi)
  0x0000000002b20182: mov    %rax,%r8
  0x0000000002b20185: mov    0x38(%rsp),%edi
  0x0000000002b20189: jmpq   0x0000000002b1ffc0  ;*goto
                                                ; - java.util.Hashtable::get@64

  0x0000000002b2018e: mov    0x14(%r8),%esi
  0x0000000002b20192: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53

  0x0000000002b20196: lea    0x40(%rsp),%rax
  0x0000000002b2019b: mov    0x8(%rax),%rbx
  0x0000000002b2019f: mov    (%rbx),%rdi
  0x0000000002b201a2: and    $0x7,%rdi
  0x0000000002b201a6: cmp    $0x5,%rdi
  0x0000000002b201aa: je     0x0000000002b201c7
  0x0000000002b201b0: mov    (%rax),%rdi
  0x0000000002b201b3: test   %rdi,%rdi
  0x0000000002b201b6: je     0x0000000002b201c7
  0x0000000002b201bc: lock cmpxchg %rdi,(%rbx)
  0x0000000002b201c1: jne    0x0000000002b20277
  0x0000000002b201c7: mov    %rsi,%rax
  0x0000000002b201ca: add    $0x60,%rsp
  0x0000000002b201ce: pop    %rbp
  0x0000000002b201cf: test   %eax,-0x1f300d5(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b201d5: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56

  0x0000000002b201d6: lea    0x40(%rsp),%rax
  0x0000000002b201db: mov    0x8(%rax),%rdi
  0x0000000002b201df: mov    (%rdi),%rsi
  0x0000000002b201e2: and    $0x7,%rsi
  0x0000000002b201e6: cmp    $0x5,%rsi
  0x0000000002b201ea: je     0x0000000002b20207
  0x0000000002b201f0: mov    (%rax),%rsi
  0x0000000002b201f3: test   %rsi,%rsi
  0x0000000002b201f6: je     0x0000000002b20207
  0x0000000002b201fc: lock cmpxchg %rsi,(%rdi)
  0x0000000002b20201: jne    0x0000000002b2028a  ;*areturn
                                                ; - java.util.Hashtable::get@68

  0x0000000002b20207: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002b20211: add    $0x60,%rsp
  0x0000000002b20215: pop    %rbp
  0x0000000002b20216: test   %eax,-0x1f3011c(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b2021c: retq   
  0x0000000002b2021d: mov    %rdx,0x8(%rsp)
  0x0000000002b20222: mov    %rsi,(%rsp)
  0x0000000002b20226: callq  0x0000000002aff060  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1163}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1
                                                ;   {runtime_call}
  0x0000000002b2022b: jmpq   0x0000000002b1fe97
  0x0000000002b20230: mov    %rsi,0x8(%rsp)
  0x0000000002b20235: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b2023d: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1186}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1
                                                ;   {runtime_call}
  0x0000000002b20242: jmpq   0x0000000002b1fec9
  0x0000000002b20247: callq  0x0000000002afc580  ; OopMap{r8=Oop [40]=Oop rsi=Oop [72]=Oop off=1196}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6
                                                ;   {runtime_call}
  0x0000000002b2024c: callq  0x0000000002afc580  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1201}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15
                                                ;   {runtime_call}
  0x0000000002b20251: callq  0x0000000002afc340  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1206}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16
                                                ;   {runtime_call}
  0x0000000002b20256: callq  0x0000000002afc580  ; OopMap{r8=Oop rsi=Oop [40]=Oop [72]=Oop off=1211}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32
                                                ;   {runtime_call}
  0x0000000002b2025b: callq  0x0000000002afc580  ; OopMap{r8=Oop rsi=Oop [40]=Oop rdx=Oop [72]=Oop off=1216}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45
                                                ;   {runtime_call}
  0x0000000002b20260: mov    %rsi,0x8(%rsp)
  0x0000000002b20265: movq   $0x40,(%rsp)
  0x0000000002b2026d: callq  0x0000000002b01ae0  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=1234}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64
                                                ;   {runtime_call}
  0x0000000002b20272: jmpq   0x0000000002b2016c
  0x0000000002b20277: lea    0x40(%rsp),%rax
  0x0000000002b2027c: mov    %rax,(%rsp)
  0x0000000002b20280: callq  0x0000000002aff6a0  ;   {runtime_call}
  0x0000000002b20285: jmpq   0x0000000002b201c7
  0x0000000002b2028a: lea    0x40(%rsp),%rax
  0x0000000002b2028f: mov    %rax,(%rsp)
  0x0000000002b20293: callq  0x0000000002aff6a0  ;   {runtime_call}
  0x0000000002b20298: jmpq   0x0000000002b20207
  0x0000000002b2029d: nop
  0x0000000002b2029e: nop
  0x0000000002b2029f: mov    0x2a8(%r15),%rax
  0x0000000002b202a6: movabs $0x0,%r10
  0x0000000002b202b0: mov    %r10,0x2a8(%r15)
  0x0000000002b202b7: movabs $0x0,%r10
  0x0000000002b202c1: mov    %r10,0x2b0(%r15)
  0x0000000002b202c8: mov    %rax,%rbx
  0x0000000002b202cb: lea    0x40(%rsp),%rax
  0x0000000002b202d0: mov    0x8(%rax),%rsi
  0x0000000002b202d4: mov    (%rsi),%rdi
  0x0000000002b202d7: and    $0x7,%rdi
  0x0000000002b202db: cmp    $0x5,%rdi
  0x0000000002b202df: je     0x0000000002b202fc
  0x0000000002b202e5: mov    (%rax),%rdi
  0x0000000002b202e8: test   %rdi,%rdi
  0x0000000002b202eb: je     0x0000000002b202fc
  0x0000000002b202f1: lock cmpxchg %rdi,(%rsi)
  0x0000000002b202f6: jne    0x0000000002b20309
  0x0000000002b202fc: mov    %rbx,%rax
  0x0000000002b202ff: add    $0x60,%rsp
  0x0000000002b20303: pop    %rbp
  0x0000000002b20304: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b20309: lea    0x40(%rsp),%rax
  0x0000000002b2030e: mov    %rax,(%rsp)
  0x0000000002b20312: callq  0x0000000002aff6a0  ;   {runtime_call}
  0x0000000002b20317: jmp    0x0000000002b202fc
  0x0000000002b20319: hlt    
  0x0000000002b2031a: hlt    
  0x0000000002b2031b: hlt    
  0x0000000002b2031c: hlt    
  0x0000000002b2031d: hlt    
  0x0000000002b2031e: hlt    
  0x0000000002b2031f: hlt    
[Stub Code]
  0x0000000002b20320: nop                       ;   {no_reloc}
  0x0000000002b20321: nop
  0x0000000002b20322: nop
  0x0000000002b20323: nop
  0x0000000002b20324: nop
  0x0000000002b20325: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2032f: jmpq   0x0000000002b2032f  ;   {runtime_call}
  0x0000000002b20334: nop
  0x0000000002b20335: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002b2033f: jmpq   0x0000000002b2033f  ;   {runtime_call}
[Exception Handler]
  0x0000000002b20344: callq  0x0000000002afe520  ;   {runtime_call}
  0x0000000002b20349: mov    %rsp,-0x28(%rsp)
  0x0000000002b2034e: sub    $0x80,%rsp
  0x0000000002b20355: mov    %rax,0x78(%rsp)
  0x0000000002b2035a: mov    %rcx,0x70(%rsp)
  0x0000000002b2035f: mov    %rdx,0x68(%rsp)
  0x0000000002b20364: mov    %rbx,0x60(%rsp)
  0x0000000002b20369: mov    %rbp,0x50(%rsp)
  0x0000000002b2036e: mov    %rsi,0x48(%rsp)
  0x0000000002b20373: mov    %rdi,0x40(%rsp)
  0x0000000002b20378: mov    %r8,0x38(%rsp)
  0x0000000002b2037d: mov    %r9,0x30(%rsp)
  0x0000000002b20382: mov    %r10,0x28(%rsp)
  0x0000000002b20387: mov    %r11,0x20(%rsp)
  0x0000000002b2038c: mov    %r12,0x18(%rsp)
  0x0000000002b20391: mov    %r13,0x10(%rsp)
  0x0000000002b20396: mov    %r14,0x8(%rsp)
  0x0000000002b2039b: mov    %r15,(%rsp)
  0x0000000002b2039f: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b203a9: movabs $0x2b20349,%rdx    ;   {internal_word}
  0x0000000002b203b3: mov    %rsp,%r8
  0x0000000002b203b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002b203ba: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b203bf: hlt    
[Deopt Handler Code]
  0x0000000002b203c0: movabs $0x2b203c0,%r10    ;   {section_word}
  0x0000000002b203ca: push   %r10
  0x0000000002b203cc: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b203d1: hlt    
  0x0000000002b203d2: hlt    
  0x0000000002b203d3: hlt    
  0x0000000002b203d4: hlt    
  0x0000000002b203d5: hlt    
  0x0000000002b203d6: hlt    
  0x0000000002b203d7: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x0000000002b1fda0' size='2784' address='0x0000000002b1fc10' relocation_offset='288' insts_offset='400' stub_offset='1808' scopes_data_offset='2000' scopes_pcs_offset='2248' dependencies_offset='2728' nul_chk_table_offset='2736' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='257' backedge_count='57' iicount='257' stamp='0.611'/>
Decoding compiled method 0x0000000002b1b010:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/Concur
<writer thread='36832'/>
<destroy_vm stamp='0.612'/>
<writer thread='53160'/>
rentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002b1b160: mov    %eax,-0x6000(%rsp)
  0x0000000002b1b167: push   %rbp
  0x0000000002b1b168: sub    $0x40,%rsp
  0x0000000002b1b16c: movabs $0x1b848980,%rcx   ;   {metadata(method data for {method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b1b176: mov    0xdc(%rcx),%eax
  0x0000000002b1b17c: add    $0x8,%eax
  0x0000000002b1b17f: mov    %eax,0xdc(%rcx)
  0x0000000002b1b185: movabs $0x1b740ad8,%rcx   ;   {metadata({method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b1b18f: and    $0x1ff8,%eax
  0x0000000002b1b195: cmp    $0x0,%eax
  0x0000000002b1b198: je     0x0000000002b1b2aa  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x0000000002b1b19e: movslq %r8d,%r8
  0x0000000002b1b1a1: mov    $0x2,%ecx
  0x0000000002b1b1a6: shl    %cl,%r8
  0x0000000002b1b1a9: movabs $0x10,%r10
  0x0000000002b1b1b3: add    %r10,%r8
  0x0000000002b1b1b6: mov    (%rdx,%r8,1),%eax
  0x0000000002b1b1ba: shl    $0x3,%rax
  0x0000000002b1b1be: cmp    $0x0,%rax
  0x0000000002b1b1c2: jne    0x0000000002b1b1dd
  0x0000000002b1b1c4: movabs $0x1b848980,%rdi   ;   {metadata(method data for {method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b1b1ce: orl    $0x100,0x130(%rdi)
  0x0000000002b1b1d8: jmpq   0x0000000002b1b29e
  0x0000000002b1b1dd: movabs $0x7c0037000,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000002b1b1e7: mov    0x8(%rax),%edi
  0x0000000002b1b1ea: shl    $0x3,%rdi
  0x0000000002b1b1ee: cmp    0x30(%rdi),%rbx
  0x0000000002b1b1f2: jne    0x0000000002b1b282
  0x0000000002b1b1f8: movabs $0x1b848980,%rdi   ;   {metadata(method data for {method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b1b202: mov    0x8(%rax),%ebx
  0x0000000002b1b205: shl    $0x3,%rbx
  0x0000000002b1b209: cmp    0x140(%rdi),%rbx
  0x0000000002b1b210: jne    0x0000000002b1b21f
  0x0000000002b1b212: addq   $0x1,0x148(%rdi)
  0x0000000002b1b21a: jmpq   0x0000000002b1b29e
  0x0000000002b1b21f: cmp    0x150(%rdi),%rbx
  0x0000000002b1b226: jne    0x0000000002b1b235
  0x0000000002b1b228: addq   $0x1,0x158(%rdi)
  0x0000000002b1b230: jmpq   0x0000000002b1b29e
  0x0000000002b1b235: cmpq   $0x0,0x140(%rdi)
  0x0000000002b1b240: jne    0x0000000002b1b259
  0x0000000002b1b242: mov    %rbx,0x140(%rdi)
  0x0000000002b1b249: movq   $0x1,0x148(%rdi)
  0x0000000002b1b254: jmpq   0x0000000002b1b29e
  0x0000000002b1b259: cmpq   $0x0,0x150(%rdi)
  0x0000000002b1b264: jne    0x0000000002b1b27d
  0x0000000002b1b266: mov    %rbx,0x150(%rdi)
  0x0000000002b1b26d: movq   $0x1,0x158(%rdi)
  0x0000000002b1b278: jmpq   0x0000000002b1b29e
  0x0000000002b1b27d: jmpq   0x0000000002b1b29e
  0x0000000002b1b282: movabs $0x1b848980,%rdi   ;   {metadata(method data for {method} {0x000000001b740ae0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002b1b28c: subq   $0x1,0x138(%rdi)
  0x0000000002b1b294: jmpq   0x0000000002b1b2c1
  0x0000000002b1b299: jmpq   0x0000000002b1b29e  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17

  0x0000000002b1b29e: add    $0x40,%rsp
  0x0000000002b1b2a2: pop    %rbp
  0x0000000002b1b2a3: test   %eax,-0x1f2b1a9(%rip)        # 0x0000000000bf0100
                                                ;   {poll_return}
  0x0000000002b1b2a9: retq   
  0x0000000002b1b2aa: mov    %rcx,0x8(%rsp)
  0x0000000002b1b2af: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002b1b2b7: callq  0x0000000002b01ae0  ; OopMap{rdx=Oop off=348}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call}
  0x0000000002b1b2bc: jmpq   0x0000000002b1b19e
  0x0000000002b1b2c1: mov    %rax,(%rsp)
  0x0000000002b1b2c5: callq  0x0000000002afe880  ; OopMap{off=362}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17
                                                ;   {runtime_call}
  0x0000000002b1b2ca: nop
  0x0000000002b1b2cb: nop
  0x0000000002b1b2cc: mov    0x2a8(%r15),%rax
  0x0000000002b1b2d3: movabs $0x0,%r10
  0x0000000002b1b2dd: mov    %r10,0x2a8(%r15)
  0x0000000002b1b2e4: movabs $0x0,%r10
  0x0000000002b1b2ee: mov    %r10,0x2b0(%r15)
  0x0000000002b1b2f5: add    $0x40,%rsp
  0x0000000002b1b2f9: pop    %rbp
  0x0000000002b1b2fa: jmpq   0x0000000002a6efa0  ;   {runtime_call}
  0x0000000002b1b2ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002b1b300: callq  0x0000000002afe520  ;   {no_reloc}
  0x0000000002b1b305: mov    %rsp,-0x28(%rsp)
  0x0000000002b1b30a: sub    $0x80,%rsp
  0x0000000002b1b311: mov    %rax,0x78(%rsp)
  0x0000000002b1b316: mov    %rcx,0x70(%rsp)
  0x0000000002b1b31b: mov    %rdx,0x68(%rsp)
  0x0000000002b1b320: mov    %rbx,0x60(%rsp)
  0x0000000002b1b325: mov    %rbp,0x50(%rsp)
  0x0000000002b1b32a: mov    %rsi,0x48(%rsp)
  0x0000000002b1b32f: mov    %rdi,0x40(%rsp)
  0x0000000002b1b334: mov    %r8,0x38(%rsp)
  0x0000000002b1b339: mov    %r9,0x30(%rsp)
  0x0000000002b1b33e: mov    %r10,0x28(%rsp)
  0x0000000002b1b343: mov    %r11,0x20(%rsp)
  0x0000000002b1b348: mov    %r12,0x18(%rsp)
  0x0000000002b1b34d: mov    %r13,0x10(%rsp)
  0x0000000002b1b352: mov    %r14,0x8(%rsp)
  0x0000000002b1b357: mov    %r15,(%rsp)
  0x0000000002b1b35b: movabs $0x657d0770,%rcx   ;   {external_word}
  0x0000000002b1b365: movabs $0x2b1b305,%rdx    ;   {internal_word}
  0x0000000002b1b36f: mov    %rsp,%r8
  0x0000000002b1b372: and    $0xfffffffffffffff0,%rsp
  0x0000000002b1b376: callq  0x0000000065486cc0  ;   {runtime_call}
  0x0000000002b1b37b: hlt    
[Deopt Handler Code]
  0x0000000002b1b37c: movabs $0x2b1b37c,%r10    ;   {section_word}
  0x0000000002b1b386: push   %r10
  0x0000000002b1b388: jmpq   0x0000000002a47600  ;   {runtime_call}
  0x0000000002b1b38d: hlt    
  0x0000000002b1b38e: hlt    
  0x0000000002b1b38f: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000000002b1b160' size='1048' address='0x0000000002b1b010' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' stamp='0.616'/>
<tty_done stamp='0.616'/>
</tty>
<compilation_log thread='53160'>
<start_compile_thread name='C1 CompilerThread2' thread='53160' process='23380' stamp='0.383'/>
<task compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='5378' iicount='5378' level='3' stamp='0.384'>
<phase name='buildIR' stamp='0.384'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='5378'/>
<parse method='845'  stamp='0.385'>
<parse_done stamp='0.385'/>
</parse>
<phase name='optimize_blocks' stamp='0.385'>
<phase_done name='optimize_blocks' stamp='0.385'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.385'>
<phase_done name='rangeCheckElimination' stamp='0.385'/>
</phase>
<phase name='optimize_null_checks' stamp='0.385'>
<phase_done name='optimize_null_checks' stamp='0.385'/>
</phase>
<phase_done name='buildIR' stamp='0.385'/>
</phase>
<phase name='emit_lir' stamp='0.385'>
<phase name='lirGeneration' stamp='0.385'>
<phase_done name='lirGeneration' stamp='0.385'/>
</phase>
<phase name='linearScan' stamp='0.385'>
<phase_done name='linearScan' stamp='0.385'/>
</phase>
<phase_done name='emit_lir' stamp='0.385'/>
</phase>
<phase name='codeemit' stamp='0.385'>
<phase_done name='codeemit' stamp='0.385'/>
</phase>
<phase name='codeinstall' stamp='0.385'>
<phase_done name='codeinstall' stamp='0.392'/>
</phase>
<code_cache total_blobs='228' nmethods='1' adapters='151' free_code_cache='250593216'/>
<task_done success='1' nmsize='400' count='5381' stamp='0.392'/>
</task>
<task compile_id='2' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1793' iicount='1793' level='3' stamp='0.392'>
<phase name='buildIR' stamp='0.392'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' iicount='1793'/>
<parse method='844'  stamp='0.392'>
<bc code='183' bci='5'/>
<method id='846' holder='805' name='appendNull' return='805' flags='2' bytes='56' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='733' name='int'/>
<method id='848' holder='741' name='length' return='733' flags='1' bytes='6' iicount='31149'/>
<call method='848' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.392'/>
</parse>
<bc code='183' bci='21'/>
<type id='735' name='void'/>
<method id='850' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='34266'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='17'/>
<method id='852' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='727'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='854' name='java/util/Arrays' flags='1'/>
<method id='855' holder='854' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='782'/>
<call method='855' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='5381'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.393'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='860' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' iicount='7224'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.393'/>
</parse>
<parse_done stamp='0.393'/>
</parse>
<bc code='182' bci='35'/>
<method id='862' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' iicount='1862'/>
<call method='862' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.393'/>
</parse>
<phase name='optimize_blocks' stamp='0.393'>
<phase_done name='optimize_blocks' stamp='0.393'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.393'>
<phase_done name='rangeCheckElimination' stamp='0.393'/>
</phase>
<phase name='optimize_null_checks' stamp='0.393'>
<phase_done name='optimize_null_checks' stamp='0.393'/>
</phase>
<phase_done name='buildIR' stamp='0.393'/>
</phase>
<phase name='emit_lir' stamp='0.393'>
<phase name='lirGeneration' stamp='0.393'>
<phase_done name='lirGeneration' stamp='0.393'/>
</phase>
<phase name='linearScan' stamp='0.393'>
<phase_done name='linearScan' stamp='0.393'/>
</phase>
<phase_done name='emit_lir' stamp='0.393'/>
</phase>
<phase name='codeemit' stamp='0.393'>
<phase_done name='codeemit' stamp='0.393'/>
</phase>
<phase name='codeinstall' stamp='0.393'>
<phase_done name='codeinstall' stamp='0.409'/>
</phase>
<code_cache total_blobs='237' nmethods='2' adapters='153' free_code_cache='250549504'/>
<task_done success='1' nmsize='1880' count='1809' inlined_bytes='63' stamp='0.409'/>
</task>
<task compile_id='3' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2211' backedge_count='3523' iicount='2211' level='3' stamp='0.409'>
<phase name='buildIR' stamp='0.409'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='2211'/>
<parse method='844'  stamp='0.409'>
<parse_done stamp='0.409'/>
</parse>
<phase name='optimize_blocks' stamp='0.409'>
<phase_done name='optimize_blocks' stamp='0.409'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.409'>
<phase_done name='rangeCheckElimination' stamp='0.409'/>
</phase>
<phase name='optimize_null_checks' stamp='0.409'>
<phase_done name='optimize_null_checks' stamp='0.409'/>
</phase>
<phase_done name='buildIR' stamp='0.409'/>
</phase>
<phase name='emit_lir' stamp='0.409'>
<phase name='lirGeneration' stamp='0.409'>
<phase_done name='lirGeneration' stamp='0.409'/>
</phase>
<phase name='linearScan' stamp='0.409'>
<phase_done name='linearScan' stamp='0.409'/>
</phase>
<phase_done name='emit_lir' stamp='0.409'/>
</phase>
<phase name='codeemit' stamp='0.409'>
<phase_done name='codeemit' stamp='0.409'/>
</phase>
<phase name='codeinstall' stamp='0.409'>
<phase_done name='codeinstall' stamp='0.419'/>
</phase>
<code_cache total_blobs='240' nmethods='3' adapters='153' free_code_cache='250546560'/>
<task_done success='1' nmsize='1360' count='2211' backedge_count='3523' stamp='0.419'/>
</task>
<task compile_id='9' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='128' iicount='128' level='1' stamp='0.423'>
<phase name='buildIR' stamp='0.423'>
<klass id='846' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='844' name='sun/instrument/TransformerManager' flags='1'/>
<method id='847' holder='844' name='getSnapshotTransformerList' return='846' flags='2' bytes='5' iicount='128'/>
<parse method='847'  stamp='0.423'>
<parse_done stamp='0.423'/>
</parse>
<phase name='optimize_blocks' stamp='0.423'>
<phase_done name='optimize_blocks' stamp='0.423'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.423'>
<phase_done name='rangeCheckElimination' stamp='0.423'/>
</phase>
<phase name='optimize_null_checks' stamp='0.423'>
<phase_done name='optimize_null_checks' stamp='0.423'/>
</phase>
<phase_done name='buildIR' stamp='0.423'/>
</phase>
<phase name='emit_lir' stamp='0.423'>
<phase name='lirGeneration' stamp='0.423'>
<phase_done name='lirGeneration' stamp='0.423'/>
</phase>
<phase name='linearScan' stamp='0.423'>
<phase_done name='linearScan' stamp='0.423'/>
</phase>
<phase_done name='emit_lir' stamp='0.423'/>
</phase>
<phase name='codeemit' stamp='0.423'>
<phase_done name='codeemit' stamp='0.423'/>
</phase>
<phase name='codeinstall' stamp='0.423'>
<phase_done name='codeinstall' stamp='0.426'/>
</phase>
<code_cache total_blobs='250' nmethods='5' adapters='155' free_code_cache='250531392'/>
<task_done success='1' nmsize='272' count='128' stamp='0.426'/>
</task>
<task compile_id='11' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='643' backedge_count='22592' iicount='643' level='3' stamp='0.432'>
<phase name='buildIR' stamp='0.432'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='normalize' return='741' arguments='741' flags='1' bytes='143' iicount='643'/>
<parse method='845'  stamp='0.432'>
<bc code='182' bci='1'/>
<type id='733' name='int'/>
<method id='847' holder='741' name='length' return='733' flags='1' bytes='6' iicount='31202'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='0.432'/>
</parse>
<bc code='182' bci='31'/>
<type id='728' name='char'/>
<method id='849' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='159029'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='18'/>
<type id='735' name='void'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.432'/>
</parse>
<bc code='183' bci='61'/>
<method id='853' holder='844' name='normalize' return='741' arguments='741 733 733' flags='2' bytes='231' iicount='363'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='90'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='111'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='137'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.432'/>
</parse>
<phase name='optimize_blocks' stamp='0.432'>
<phase_done name='optimize_blocks' stamp='0.432'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.433'>
<phase_done name='rangeCheckElimination' stamp='0.433'/>
</phase>
<phase name='optimize_null_checks' stamp='0.433'>
<phase_done name='optimize_null_checks' stamp='0.433'/>
</phase>
<phase_done name='buildIR' stamp='0.433'/>
</phase>
<phase name='emit_lir' stamp='0.433'>
<phase name='lirGeneration' stamp='0.433'>
<phase_done name='lirGeneration' stamp='0.433'/>
</phase>
<phase name='linearScan' stamp='0.433'>
<phase_done name='linearScan' stamp='0.433'/>
</phase>
<phase_done name='emit_lir' stamp='0.433'/>
</phase>
<phase name='codeemit' stamp='0.433'>
<phase_done name='codeemit' stamp='0.433'/>
</phase>
<phase name='codeinstall' stamp='0.433'>
<dependency type='leaf_type' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.453'/>
</phase>
<code_cache total_blobs='255' nmethods='10' adapters='157' free_code_cache='250534400'/>
<task_done success='1' nmsize='2088' count='644' backedge_count='22612' inlined_bytes='35' stamp='0.453'/>
</task>
<task compile_id='15' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='1408' iicount='1408' level='3' stamp='0.456'>
<phase name='buildIR' stamp='0.457'>
<klass id='807' name='java/lang/StringBuilder' flags='17'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='807' name='append' return='807' arguments='741' flags='1' bytes='8' iicount='1413'/>
<parse method='844'  stamp='0.457'>
<bc code='183' bci='2'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='741' flags='1' bytes='50' compile_id='2' compiler='C1' level='3' iicount='1830'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.457'/>
</parse>
<phase name='optimize_blocks' stamp='0.457'>
<phase_done name='optimize_blocks' stamp='0.457'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.457'>
<phase_done name='rangeCheckElimination' stamp='0.457'/>
</phase>
<phase name='optimize_null_checks' stamp='0.457'>
<phase_done name='optimize_null_checks' stamp='0.457'/>
</phase>
<phase_done name='buildIR' stamp='0.457'/>
</phase>
<phase name='emit_lir' stamp='0.457'>
<phase name='lirGeneration' stamp='0.457'>
<phase_done name='lirGeneration' stamp='0.457'/>
</phase>
<phase name='linearScan' stamp='0.457'>
<phase_done name='linearScan' stamp='0.457'/>
</phase>
<phase_done name='emit_lir' stamp='0.457'/>
</phase>
<phase name='codeemit' stamp='0.457'>
<phase_done name='codeemit' stamp='0.457'/>
</phase>
<phase name='codeinstall' stamp='0.457'>
<phase_done name='codeinstall' stamp='0.460'/>
</phase>
<code_cache total_blobs='257' nmethods='12' adapters='157' free_code_cache='250532544'/>
<task_done success='1' nmsize='392' count='1418' stamp='0.460'/>
</task>
<task compile_id='17' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='514' iicount='514' level='1' stamp='0.462'>
<phase name='buildIR' stamp='0.462'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='844' holder='766' name='get' return='740' flags='1' bytes='5' iicount='514'/>
<parse method='844'  stamp='0.462'>
<parse_done stamp='0.462'/>
</parse>
<phase name='optimize_blocks' stamp='0.462'>
<phase_done name='optimize_blocks' stamp='0.462'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.462'>
<phase_done name='rangeCheckElimination' stamp='0.462'/>
</phase>
<phase name='optimize_null_checks' stamp='0.462'>
<phase_done name='optimize_null_checks' stamp='0.462'/>
</phase>
<phase_done name='buildIR' stamp='0.462'/>
</phase>
<phase name='emit_lir' stamp='0.462'>
<phase name='lirGeneration' stamp='0.462'>
<phase_done name='lirGeneration' stamp='0.462'/>
</phase>
<phase name='linearScan' stamp='0.462'>
<phase_done name='linearScan' stamp='0.462'/>
</phase>
<phase_done name='emit_lir' stamp='0.462'/>
</phase>
<phase name='codeemit' stamp='0.462'>
<phase_done name='codeemit' stamp='0.462'/>
</phase>
<phase name='codeinstall' stamp='0.462'>
<phase_done name='codeinstall' stamp='0.464'/>
</phase>
<code_cache total_blobs='258' nmethods='14' adapters='158' free_code_cache='250542080'/>
<task_done success='1' nmsize='272' count='514' stamp='0.464'/>
</task>
<task compile_id='13' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='513' iicount='513' level='3' stamp='0.464'>
<phase name='buildIR' stamp='0.464'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/LinkedHashMap' flags='1'/>
<method id='845' holder='844' name='get' return='740' arguments='740' flags='1' bytes='33' iicount='513'/>
<parse method='845'  stamp='0.464'>
<bc code='184' bci='2'/>
<type id='733' name='int'/>
<klass id='847' name='java/util/HashMap' flags='1'/>
<method id='848' holder='847' name='hash' return='733' arguments='740' flags='24' bytes='20' iicount='1609'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='182' bci='9'/>
<method id='850' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='365'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.464'/>
</parse>
<bc code='182' bci='6'/>
<klass id='851' name='java/util/HashMap$Node' flags='8'/>
<method id='852' holder='847' name='getNode' return='851' arguments='733 740' flags='16' bytes='148' iicount='1079'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='25'/>
<type id='735' name='void'/>
<method id='854' holder='844' name='afterNodeAccess' return='735' arguments='851' flags='0' bytes='116' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='844' x='854'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.464'/>
</parse>
<phase name='optimize_blocks' stamp='0.464'>
<phase_done name='optimize_blocks' stamp='0.464'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.464'>
<phase_done name='rangeCheckElimination' stamp='0.464'/>
</phase>
<phase name='optimize_null_checks' stamp='0.464'>
<phase_done name='optimize_null_checks' stamp='0.464'/>
</phase>
<phase_done name='buildIR' stamp='0.464'/>
</phase>
<phase name='emit_lir' stamp='0.464'>
<phase name='lirGeneration' stamp='0.464'>
<phase_done name='lirGeneration' stamp='0.464'/>
</phase>
<phase name='linearScan' stamp='0.464'>
<phase_done name='linearScan' stamp='0.465'/>
</phase>
<phase_done name='emit_lir' stamp='0.465'/>
</phase>
<phase name='codeemit' stamp='0.465'>
<phase_done name='codeemit' stamp='0.465'/>
</phase>
<phase name='codeinstall' stamp='0.465'>
<dependency type='unique_concrete_method' ctxk='844' x='854'/>
<phase_done name='codeinstall' stamp='0.474'/>
</phase>
<code_cache total_blobs='261' nmethods='15' adapters='160' free_code_cache='250538752'/>
<task_done success='1' nmsize='1288' count='513' inlined_bytes='20' stamp='0.474'/>
</task>
<task compile_id='19' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1578' backedge_count='1058' iicount='1578' level='3' stamp='0.474'>
<phase name='buildIR' stamp='0.474'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='1578'/>
<parse method='844'  stamp='0.474'>
<parse_done stamp='0.474'/>
</parse>
<phase name='optimize_blocks' stamp='0.474'>
<phase_done name='optimize_blocks' stamp='0.474'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.474'>
<phase_done name='rangeCheckElimination' stamp='0.474'/>
</phase>
<phase name='optimize_null_checks' stamp='0.474'>
<phase_done name='optimize_null_checks' stamp='0.474'/>
</phase>
<phase_done name='buildIR' stamp='0.474'/>
</phase>
<phase name='emit_lir' stamp='0.474'>
<phase name='lirGeneration' stamp='0.474'>
<phase_done name='lirGeneration' stamp='0.474'/>
</phase>
<phase name='linearScan' stamp='0.474'>
<phase_done name='linearScan' stamp='0.474'/>
</phase>
<phase_done name='emit_lir' stamp='0.474'/>
</phase>
<phase name='codeemit' stamp='0.474'>
<phase_done name='codeemit' stamp='0.474'/>
</phase>
<phase name='codeinstall' stamp='0.474'>
<phase_done name='codeinstall' stamp='0.481'/>
</phase>
<code_cache total_blobs='264' nmethods='16' adapters='161' free_code_cache='250531008'/>
<task_done success='1' nmsize='816' count='1579' backedge_count='1058' stamp='0.481'/>
</task>
<task compile_id='18' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='721' iicount='721' level='3' stamp='0.481'>
<phase name='buildIR' stamp='0.481'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='startsWith' return='727' arguments='741' flags='1' bytes='7' iicount='721'/>
<parse method='844'  stamp='0.481'>
<bc code='182' bci='3'/>
<type id='733' name='int'/>
<method id='846' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' compile_id='19' compiler='C1' level='3' iicount='1579'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.481'/>
</parse>
<phase name='optimize_blocks' stamp='0.481'>
<phase_done name='optimize_blocks' stamp='0.481'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.481'>
<phase_done name='rangeCheckElimination' stamp='0.481'/>
</phase>
<phase name='optimize_null_checks' stamp='0.481'>
<phase_done name='optimize_null_checks' stamp='0.481'/>
</phase>
<phase_done name='buildIR' stamp='0.481'/>
</phase>
<phase name='emit_lir' stamp='0.481'>
<phase name='lirGeneration' stamp='0.481'>
<phase_done name='lirGeneration' stamp='0.481'/>
</phase>
<phase name='linearScan' stamp='0.481'>
<phase_done name='linearScan' stamp='0.481'/>
</phase>
<phase_done name='emit_lir' stamp='0.481'/>
</phase>
<phase name='codeemit' stamp='0.481'>
<phase_done name='codeemit' stamp='0.481'/>
</phase>
<phase name='codeinstall' stamp='0.482'>
<phase_done name='codeinstall' stamp='0.491'/>
</phase>
<code_cache total_blobs='266' nmethods='18' adapters='162' free_code_cache='250533184'/>
<task_done success='1' nmsize='520' count='721' stamp='0.491'/>
</task>
<task compile_id='21' method='java/io/File isInvalid ()Z' bytes='47' count='771' iicount='771' level='3' stamp='0.491'>
<phase name='buildIR' stamp='0.491'>
<type id='727' name='boolean'/>
<klass id='811' name='java/io/File' flags='1'/>
<method id='844' holder='811' name='isInvalid' return='727' flags='16' bytes='47' iicount='771'/>
<parse method='844'  stamp='0.491'>
<bc code='182' bci='13'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='847' holder='741' name='indexOf' return='733' arguments='733' flags='1' bytes='7' iicount='1587'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='182' bci='3'/>
<method id='849' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1609'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.491'/>
</parse>
<parse_done stamp='0.491'/>
</parse>
<phase name='optimize_blocks' stamp='0.491'>
<phase_done name='optimize_blocks' stamp='0.491'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.491'>
<phase_done name='rangeCheckElimination' stamp='0.491'/>
</phase>
<phase name='optimize_null_checks' stamp='0.491'>
<phase_done name='optimize_null_checks' stamp='0.491'/>
</phase>
<phase_done name='buildIR' stamp='0.491'/>
</phase>
<phase name='emit_lir' stamp='0.491'>
<phase name='lirGeneration' stamp='0.491'>
<phase_done name='lirGeneration' stamp='0.491'/>
</phase>
<phase name='linearScan' stamp='0.491'>
<phase_done name='linearScan' stamp='0.491'/>
</phase>
<phase_done name='emit_lir' stamp='0.491'/>
</phase>
<phase name='codeemit' stamp='0.491'>
<phase_done name='codeemit' stamp='0.491'/>
</phase>
<phase name='codeinstall' stamp='0.491'>
<phase_done name='codeinstall' stamp='0.499'/>
</phase>
<code_cache total_blobs='270' nmethods='20' adapters='164' free_code_cache='250529472'/>
<task_done success='1' nmsize='1096' count='772' inlined_bytes='7' stamp='0.499'/>
</task>
<task compile_id='25' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='512' iicount='512' level='3' stamp='0.499'>
<phase name='buildIR' stamp='0.499'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='844' name='java/util/HashMap$Node' flags='8'/>
<method id='845' holder='844' name='&lt;init&gt;' return='735' arguments='733 740 740 844' flags='0' bytes='26' iicount='512'/>
<parse method='845'  stamp='0.499'>
<bc code='183' bci='1'/>
<method id='847' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='7' compiler='C2' level='4' iicount='10793'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<parse_done stamp='0.499'/>
</parse>
<parse_done stamp='0.499'/>
</parse>
<phase name='optimize_blocks' stamp='0.499'>
<phase_done name='optimize_blocks' stamp='0.499'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.499'>
<phase_done name='rangeCheckElimination' stamp='0.499'/>
</phase>
<phase name='optimize_null_checks' stamp='0.499'>
<phase_done name='optimize_null_checks' stamp='0.499'/>
</phase>
<phase_done name='buildIR' stamp='0.499'/>
</phase>
<phase name='emit_lir' stamp='0.499'>
<phase name='lirGeneration' stamp='0.499'>
<phase_done name='lirGeneration' stamp='0.499'/>
</phase>
<phase name='linearScan' stamp='0.499'>
<phase_done name='linearScan' stamp='0.499'/>
</phase>
<phase_done name='emit_lir' stamp='0.499'/>
</phase>
<phase name='codeemit' stamp='0.499'>
<phase_done name='codeemit' stamp='0.499'/>
</phase>
<phase name='codeinstall' stamp='0.499'>
<dependency type='no_finalizable_subclasses' ctxk='844'/>
<phase_done name='codeinstall' stamp='0.504'/>
</phase>
<code_cache total_blobs='272' nmethods='21' adapters='164' free_code_cache='250522944'/>
<task_done success='1' nmsize='528' count='513' inlined_bytes='1' stamp='0.504'/>
</task>
<task compile_id='26' method='java/lang/String getChars (II[CI)V' bytes='62' count='1920' iicount='1920' level='3' stamp='0.504'>
<phase name='buildIR' stamp='0.504'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='getChars' return='735' arguments='733 733 833 733' flags='1' bytes='62' iicount='1920'/>
<parse method='844'  stamp='0.504'>
<bc code='183' bci='9'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='848' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='14' compile_kind='c2n' level='0' iicount='7296'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.504'/>
</parse>
<phase name='optimize_blocks' stamp='0.504'>
<phase_done name='optimize_blocks' stamp='0.504'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.504'>
<phase_done name='rangeCheckElimination' stamp='0.504'/>
</phase>
<phase name='optimize_null_checks' stamp='0.504'>
<phase_done name='optimize_null_checks' stamp='0.504'/>
</phase>
<phase_done name='buildIR' stamp='0.504'/>
</phase>
<phase name='emit_lir' stamp='0.504'>
<phase name='lirGeneration' stamp='0.504'>
<phase_done name='lirGeneration' stamp='0.504'/>
</phase>
<phase name='linearScan' stamp='0.504'>
<phase_done name='linearScan' stamp='0.504'/>
</phase>
<phase_done name='emit_lir' stamp='0.504'/>
</phase>
<phase name='codeemit' stamp='0.504'>
<phase_done name='codeemit' stamp='0.504'/>
</phase>
<phase name='codeinstall' stamp='0.504'>
<phase_done name='codeinstall' stamp='0.521'/>
</phase>
<code_cache total_blobs='273' nmethods='23' adapters='164' free_code_cache='250523648'/>
<task_done success='1' nmsize='1080' count='1920' stamp='0.521'/>
</task>
<task compile_id='12' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='516' iicount='516' level='3' stamp='0.521'>
<phase name='buildIR' stamp='0.521'>
<klass id='845' name='java/io/ExpiringCache$Entry' flags='8'/>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='844' name='java/io/ExpiringCache' flags='0'/>
<method id='846' holder='844' name='entryFor' return='845' arguments='741' flags='2' bytes='57' iicount='516'/>
<parse method='846'  stamp='0.521'>
<bc code='185' bci='5'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='849' name='java/util/Map' flags='1537'/>
<method id='850' holder='849' name='get' return='740' arguments='740' flags='1025' bytes='0' iicount='1'/>
<call method='850' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<bc code='192' bci='10'/>
<dependency type='leaf_type' ctxk='845'/>
<bc code='184' bci='18'/>
<type id='734' name='long'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='851' holder='746' name='currentTimeMillis' return='734' flags='265' bytes='0' iicount='277'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='22'/>
<method id='853' holder='845' name='timestamp' return='734' flags='0' bytes='5' iicount='39'/>
<call method='853' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='845'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='845'/>
<parse method='853'>
<parse_done stamp='0.521'/>
</parse>
<bc code='185' bci='47'/>
<method id='855' holder='849' name='remove' return='740' arguments='740' flags='1025' bytes='0' iicount='1'/>
<call method='855' instr='invokeinterface'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.521'/>
</parse>
<phase name='optimize_blocks' stamp='0.521'>
<phase_done name='optimize_blocks' stamp='0.521'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.521'>
<phase_done name='rangeCheckElimination' stamp='0.521'/>
</phase>
<phase name='optimize_null_checks' stamp='0.521'>
<phase_done name='optimize_null_checks' stamp='0.521'/>
</phase>
<phase_done name='buildIR' stamp='0.521'/>
</phase>
<phase name='emit_lir' stamp='0.521'>
<phase name='lirGeneration' stamp='0.521'>
<phase_done name='lirGeneration' stamp='0.521'/>
</phase>
<phase name='linearScan' stamp='0.521'>
<phase_done name='linearScan' stamp='0.521'/>
</phase>
<phase_done name='emit_lir' stamp='0.521'/>
</phase>
<phase name='codeemit' stamp='0.521'>
<phase_done name='codeemit' stamp='0.521'/>
</phase>
<phase name='codeinstall' stamp='0.521'>
<dependency type='leaf_type' ctxk='845'/>
<phase_done name='codeinstall' stamp='0.531'/>
</phase>
<code_cache total_blobs='275' nmethods='24' adapters='164' free_code_cache='250515776'/>
<task_done success='1' nmsize='1368' count='519' inlined_bytes='5' stamp='0.531'/>
</task>
<task compile_id='10' method='java/io/File exists ()Z' bytes='43' count='260' iicount='260' level='3' stamp='0.531'>
<phase name='buildIR' stamp='0.531'>
<type id='727' name='boolean'/>
<klass id='811' name='java/io/File' flags='1'/>
<method id='844' holder='811' name='exists' return='727' flags='1' bytes='43' iicount='260'/>
<parse method='844'  stamp='0.531'>
<bc code='184' bci='0'/>
<klass id='752' name='java/lang/SecurityManager' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='846' holder='746' name='getSecurityManager' return='752' flags='9' bytes='4' iicount='1244'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.531'/>
</parse>
<bc code='182' bci='13'/>
<type id='735' name='void'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='849' holder='752' name='checkRead' return='735' arguments='741' flags='1' bytes='15' iicount='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='17'/>
<method id='850' holder='811' name='isInvalid' return='727' flags='16' bytes='47' compile_id='21' compiler='C1' level='3' iicount='773'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='29'/>
<type id='733' name='int'/>
<klass id='852' name='java/io/FileSystem' flags='1024'/>
<method id='856' holder='852' name='getBooleanAttributes' return='733' arguments='811' flags='1025' bytes='0' iicount='1'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='native method'/>
<klass id='853' name='java/io/WinNTFileSystem' flags='0'/>
<dependency type='leaf_type' ctxk='853'/>
<parse_done stamp='0.531'/>
</parse>
<phase name='optimize_blocks' stamp='0.531'>
<phase_done name='optimize_blocks' stamp='0.531'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.531'>
<phase_done name='rangeCheckElimination' stamp='0.531'/>
</phase>
<phase name='optimize_null_checks' stamp='0.531'>
<phase_done name='optimize_null_checks' stamp='0.531'/>
</phase>
<phase_done name='buildIR' stamp='0.531'/>
</phase>
<phase name='emit_lir' stamp='0.531'>
<phase name='lirGeneration' stamp='0.531'>
<phase_done name='lirGeneration' stamp='0.531'/>
</phase>
<phase name='linearScan' stamp='0.531'>
<phase_done name='linearScan' stamp='0.531'/>
</phase>
<phase_done name='emit_lir' stamp='0.531'/>
</phase>
<phase name='codeemit' stamp='0.531'>
<phase_done name='codeemit' stamp='0.531'/>
</phase>
<phase name='codeinstall' stamp='0.531'>
<dependency type='leaf_type' ctxk='853'/>
<phase_done name='codeinstall' stamp='0.555'/>
</phase>
<code_cache total_blobs='276' nmethods='26' adapters='164' free_code_cache='250515968'/>
<task_done success='1' nmsize='1160' count='260' inlined_bytes='4' stamp='0.555'/>
</task>
<task compile_id='28' method='cs/JitTest add (II)I' bytes='4' count='1319' iicount='1325' level='3' stamp='0.556'>
<phase name='buildIR' stamp='0.556'>
<type id='733' name='int'/>
<klass id='844' name='cs/JitTest' flags='1'/>
<method id='845' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='4' iicount='1461'/>
<parse method='845'  stamp='0.556'>
<parse_done stamp='0.556'/>
</parse>
<phase name='optimize_blocks' stamp='0.556'>
<phase_done name='optimize_blocks' stamp='0.556'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.556'>
<phase_done name='rangeCheckElimination' stamp='0.556'/>
</phase>
<phase name='optimize_null_checks' stamp='0.556'>
<phase_done name='optimize_null_checks' stamp='0.556'/>
</phase>
<phase_done name='buildIR' stamp='0.556'/>
</phase>
<phase name='emit_lir' stamp='0.556'>
<phase name='lirGeneration' stamp='0.556'>
<phase_done name='lirGeneration' stamp='0.556'/>
</phase>
<phase name='linearScan' stamp='0.556'>
<phase_done name='linearScan' stamp='0.556'/>
</phase>
<phase_done name='emit_lir' stamp='0.556'/>
</phase>
<phase name='codeemit' stamp='0.556'>
<phase_done name='codeemit' stamp='0.556'/>
</phase>
<phase name='codeinstall' stamp='0.556'>
<phase_done name='codeinstall' stamp='0.558'/>
</phase>
<code_cache total_blobs='277' nmethods='27' adapters='164' free_code_cache='250515136'/>
<task_done success='1' nmsize='336' count='29184' stamp='0.558'/>
</task>
<task compile_id='29' method='cs/JitTest add (II)I' bytes='4' count='29975' iicount='29975' level='1' stamp='0.558'>
<phase name='buildIR' stamp='0.558'>
<type id='733' name='int'/>
<klass id='844' name='cs/JitTest' flags='1'/>
<method id='845' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='4' compile_id='28' compiler='C1' level='3' iicount='29975'/>
<parse method='845'  stamp='0.558'>
<parse_done stamp='0.558'/>
</parse>
<phase name='optimize_blocks' stamp='0.558'>
<phase_done name='optimize_blocks' stamp='0.559'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.559'>
<phase_done name='rangeCheckElimination' stamp='0.559'/>
</phase>
<phase name='optimize_null_checks' stamp='0.559'>
<phase_done name='optimize_null_checks' stamp='0.559'/>
</phase>
<phase_done name='buildIR' stamp='0.559'/>
</phase>
<phase name='emit_lir' stamp='0.559'>
<phase name='lirGeneration' stamp='0.559'>
<phase_done name='lirGeneration' stamp='0.559'/>
</phase>
<phase name='linearScan' stamp='0.559'>
<phase_done name='linearScan' stamp='0.559'/>
</phase>
<phase_done name='emit_lir' stamp='0.559'/>
</phase>
<phase name='codeemit' stamp='0.559'>
<phase_done name='codeemit' stamp='0.559'/>
</phase>
<phase name='codeinstall' stamp='0.559'>
<phase_done name='codeinstall' stamp='0.561'/>
</phase>
<code_cache total_blobs='278' nmethods='28' adapters='164' free_code_cache='250514432'/>
<task_done success='1' nmsize='272' count='72704' stamp='0.561'/>
</task>
<task compile_id='27' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='1152' iicount='1152' level='3' stamp='0.561'>
<phase name='buildIR' stamp='0.561'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='isLetter' return='727' arguments='728' flags='2' bytes='30' iicount='1152'/>
<parse method='845'  stamp='0.561'>
<parse_done stamp='0.561'/>
</parse>
<phase name='optimize_blocks' stamp='0.561'>
<phase_done name='optimize_blocks' stamp='0.561'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.561'>
<phase_done name='rangeCheckElimination' stamp='0.561'/>
</phase>
<phase name='optimize_null_checks' stamp='0.561'>
<phase_done name='optimize_null_checks' stamp='0.561'/>
</phase>
<phase_done name='buildIR' stamp='0.561'/>
</phase>
<phase name='emit_lir' stamp='0.561'>
<phase name='lirGeneration' stamp='0.561'>
<phase_done name='lirGeneration' stamp='0.561'/>
</phase>
<phase name='linearScan' stamp='0.561'>
<phase_done name='linearScan' stamp='0.561'/>
</phase>
<phase_done name='emit_lir' stamp='0.561'/>
</phase>
<phase name='codeemit' stamp='0.561'>
<phase_done name='codeemit' stamp='0.561'/>
</phase>
<phase name='codeinstall' stamp='0.561'>
<phase_done name='codeinstall' stamp='0.564'/>
</phase>
<code_cache total_blobs='282' nmethods='29' adapters='167' free_code_cache='250511424'/>
<task_done success='1' nmsize='592' count='1152' stamp='0.564'/>
</task>
<task compile_id='33' compile_kind='osr' method='cs/JitTest &lt;init&gt; ()V' bytes='54' count='1' backedge_count='72704' iicount='1' osr_bci='8' level='3' stamp='0.565'>
<phase name='buildIR' stamp='0.565'>
<type id='735' name='void'/>
<klass id='844' name='cs/JitTest' flags='1'/>
<method id='845' holder='844' name='&lt;init&gt;' return='735' flags='1' bytes='54' iicount='1'/>
<parse method='845'  stamp='0.565'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='847' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='7' compiler='C2' level='4' iicount='10795'/>
<call method='847' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='844'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='177' bci='0'/>
<dependency type='leaf_type' ctxk='844'/>
<parse_done stamp='0.565'/>
</parse>
<bc code='182' bci='18'/>
<type id='733' name='int'/>
<method id='849' holder='844' name='add' return='733' arguments='733 733' flags='1' bytes='4' compile_id='29' compiler='C1' level='1' iicount='72704'/>
<call method='849' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='844' x='849'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='849'>
<parse_done stamp='0.565'/>
</parse>
<bc code='183' bci='35'/>
<klass id='853' name='java/lang/StringBuilder' unloaded='1'/>
<method id='854' holder='853' name='&lt;init&gt;' return='735' unloaded='1'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='40'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='856' holder='853' name='append' return='853' arguments='741' unloaded='1'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='44'/>
<method id='857' holder='853' name='append' return='853' arguments='733' unloaded='1'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='47'/>
<method id='858' holder='853' name='toString' return='741' unloaded='1'/>
<call method='858' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='50'/>
<klass id='851' name='java/io/PrintStream' unloaded='1'/>
<method id='859' holder='851' name='println' return='735' arguments='741' unloaded='1'/>
<call method='859' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.565'/>
</parse>
<phase name='optimize_blocks' stamp='0.565'>
<phase_done name='optimize_blocks' stamp='0.565'/>
</phase>
<phase name='optimize_null_checks' stamp='0.565'>
<phase_done name='optimize_null_checks' stamp='0.565'/>
</phase>
<phase_done name='buildIR' stamp='0.565'/>
</phase>
<phase name='emit_lir' stamp='0.565'>
<phase name='lirGeneration' stamp='0.565'>
<phase_done name='lirGeneration' stamp='0.565'/>
</phase>
<phase name='linearScan' stamp='0.565'>
<phase_done name='linearScan' stamp='0.565'/>
</phase>
<phase_done name='emit_lir' stamp='0.565'/>
</phase>
<phase name='codeemit' stamp='0.565'>
<phase_done name='codeemit' stamp='0.565'/>
</phase>
<phase name='codeinstall' stamp='0.565'>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='unique_concrete_method' ctxk='844' x='849'/>
<phase_done name='codeinstall' stamp='0.578'/>
</phase>
<code_cache total_blobs='288' nmethods='30' adapters='170' free_code_cache='250495872'/>
<task_done success='1' nmsize='1864' count='1' backedge_count='100000' inlined_bytes='5' stamp='0.578'/>
</task>
<task compile_id='32' method='java/lang/String indexOf (I)I' bytes='7' count='1708' iicount='1708' level='3' stamp='0.579'>
<phase name='buildIR' stamp='0.579'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733' flags='1' bytes='7' iicount='1708'/>
<parse method='844'  stamp='0.579'>
<bc code='182' bci='3'/>
<method id='846' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1730'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.579'/>
</parse>
<phase name='optimize_blocks' stamp='0.579'>
<phase_done name='optimize_blocks' stamp='0.579'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.579'>
<phase_done name='rangeCheckElimination' stamp='0.579'/>
</phase>
<phase name='optimize_null_checks' stamp='0.579'>
<phase_done name='optimize_null_checks' stamp='0.579'/>
</phase>
<phase_done name='buildIR' stamp='0.579'/>
</phase>
<phase name='emit_lir' stamp='0.579'>
<phase name='lirGeneration' stamp='0.579'>
<phase_done name='lirGeneration' stamp='0.579'/>
</phase>
<phase name='linearScan' stamp='0.579'>
<phase_done name='linearScan' stamp='0.579'/>
</phase>
<phase_done name='emit_lir' stamp='0.579'/>
</phase>
<phase name='codeemit' stamp='0.579'>
<phase_done name='codeemit' stamp='0.579'/>
</phase>
<phase name='codeinstall' stamp='0.579'>
<phase_done name='codeinstall' stamp='0.588'/>
</phase>
<code_cache total_blobs='290' nmethods='32' adapters='170' free_code_cache='250491776'/>
<task_done success='1' nmsize='520' count='1708' stamp='0.588'/>
</task>
<task compile_id='36' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='256' backedge_count='57' iicount='256' level='3' stamp='0.600'>
<phase name='buildIR' stamp='0.600'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='777' name='java/util/Hashtable' flags='1'/>
<method id='844' holder='777' name='get' return='740' arguments='740' flags='33' bytes='69' iicount='256'/>
<parse method='844'  stamp='0.600'>
<bc code='182' bci='6'/>
<type id='733' name='int'/>
<method id='848' holder='740' name='hashCode' return='733' flags='257' bytes='0' iicount='375'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='45'/>
<type id='727' name='boolean'/>
<method id='849' holder='740' name='equals' return='727' arguments='740' flags='1' bytes='11' iicount='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.600'/>
</parse>
<phase name='optimize_blocks' stamp='0.600'>
<phase_done name='optimize_blocks' stamp='0.600'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.600'>
<phase_done name='rangeCheckElimination' stamp='0.600'/>
</phase>
<phase name='optimize_null_checks' stamp='0.600'>
<phase_done name='optimize_null_checks' stamp='0.600'/>
</phase>
<phase_done name='buildIR' stamp='0.600'/>
</phase>
<phase name='emit_lir' stamp='0.600'>
<phase name='lirGeneration' stamp='0.600'>
<phase_done name='lirGeneration' stamp='0.600'/>
</phase>
<phase name='linearScan' stamp='0.600'>
<phase_done name='linearScan' stamp='0.601'/>
</phase>
<phase_done name='emit_lir' stamp='0.601'/>
</phase>
<phase name='codeemit' stamp='0.601'>
<phase_done name='codeemit' stamp='0.601'/>
</phase>
<phase name='codeinstall' stamp='0.601'>
<phase_done name='codeinstall' stamp='0.611'/>
</phase>
<code_cache total_blobs='291' nmethods='35' adapters='170' free_code_cache='250498112'/>
<task_done success='1' nmsize='1592' count='257' backedge_count='57' stamp='0.611'/>
</task>
<fragment>
<![CDATA[
<task compile_id='34' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='384' iicount='384' level='3' stamp='0.611'>
<phase name='buildIR' stamp='0.611'>
<klass id='845' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='846' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='733' name='int'/>
<klass id='844' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='847' holder='844' name='tabAt' return='845' arguments='846 733' flags='24' bytes='21' iicount='384'/>
<parse method='847'  stamp='0.611'>
<bc code='182' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<type id='734' name='long'/>
<klass id='808' name='sun/misc/Unsafe' flags='17'/>
<method id='851' holder='808' name='getObjectVolatile' return='740' arguments='740 734' flags='257' bytes='0' compile_id='35' compile_kind='c2n' level='0' iicount='256'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.611'/>
</parse>
<phase name='optimize_blocks' stamp='0.611'>
<phase_done name='optimize_blocks' stamp='0.611'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.611'>
<phase_done name='rangeCheckElimination' stamp='0.611'/>
</phase>
<phase name='optimize_null_checks' stamp='0.611'>
<phase_done name='optimize_null_checks' stamp='0.611'/>
</phase>
<phase_done name='buildIR' stamp='0.611'/>
</phase>
<phase name='emit_lir' stamp='0.611'>
<phase name='lirGeneration' stamp='0.611'>
<phase_done name='lirGeneration' stamp='0.611'/>
</phase>
<phase name='linearScan' stamp='0.611'>
<phase_done name='linearScan' stamp='0.611'/>
</phase>
<phase_done name='emit_lir' stamp='0.611'/>
</phase>
<phase name='codeemit' stamp='0.611'>
<phase_done name='codeemit' stamp='0.612'/>
</phase>
<phase name='codeinstall' stamp='0.612'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='26752'>
<start_compile_thread name='C2 CompilerThread1' thread='26752' process='23380' stamp='0.383'/>
<task compile_id='6' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='16020' iicount='16020' stamp='0.420'>
<phase name='parse' nodes='3' live='3' stamp='0.420'>
<type id='733' name='int'/>
<klass id='844' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='845' holder='844' name='getProperties' return='733' arguments='733' flags='0' bytes='11' iicount='16020'/>
<parse method='845' uses='16020' stamp='0.420'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='54' live='52' memory='27488' stamp='0.420'/>
</parse>
<phase_done name='parse' nodes='55' live='31' stamp='0.420'/>
</phase>
<phase name='optimizer' nodes='55' live='31' stamp='0.420'>
<phase name='ccp' nodes='55' live='31' stamp='0.420'>
<phase_done name='ccp' nodes='55' live='31' stamp='0.420'/>
</phase>
<phase name='idealLoop' nodes='55' live='31' stamp='0.420'>
<phase_done name='idealLoop' nodes='55' live='31' stamp='0.421'/>
</phase>
<phase_done name='optimizer' nodes='55' live='30' stamp='0.421'/>
</phase>
<phase name='matcher' nodes='55' live='30' stamp='0.421'>
<phase_done name='matcher' nodes='25' live='25' stamp='0.421'/>
</phase>
<phase name='regalloc' nodes='30' live='30' stamp='0.421'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='31' live='31' stamp='0.421'/>
</phase>
<phase name='output' nodes='31' live='31' stamp='0.421'>
<phase_done name='output' nodes='40' live='39' stamp='0.421'/>
</phase>
<code_cache total_blobs='246' nmethods='4' adapters='155' free_code_cache='250549824'/>
<task_done success='1' nmsize='152' count='16053' stamp='0.423'/>
</task>
<task compile_id='5' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='16053' iicount='16053' stamp='0.423'>
<phase name='parse' nodes='3' live='3' stamp='0.423'>
<klass id='844' name='java/lang/CharacterData' flags='1024'/>
<klass id='847' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='844' x='847'/>
<type id='733' name='int'/>
<method id='845' holder='844' name='of' return='844' arguments='733' flags='24' bytes='120' iicount='16053'/>
<klass id='848' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='845' bci='96' reason='unloaded' action='reinterpret' index='43' klass='848'/>
<klass id='849' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='845' bci='100' reason='unloaded' action='reinterpret' index='44' klass='849'/>
<klass id='850' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='845' bci='104' reason='unloaded' action='reinterpret' index='45' klass='850'/>
<klass id='851' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='845' bci='108' reason='unloaded' action='reinterpret' index='46' klass='851'/>
<klass id='852' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='845' bci='112' reason='unloaded' action='reinterpret' index='48' klass='852'/>
<klass id='853' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='845' bci='116' reason='unloaded' action='reinterpret' index='49' klass='853'/>
<parse method='845' uses='16053' stamp='0.423'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='16053' cnt='16053' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='41' live='39' memory='25784' stamp='0.423'/>
</parse>
<phase_done name='parse' nodes='42' live='23' stamp='0.423'/>
</phase>
<phase name='optimizer' nodes='42' live='23' stamp='0.423'>
<phase name='ccp' nodes='42' live='23' stamp='0.423'>
<phase_done name='ccp' nodes='42' live='23' stamp='0.423'/>
</phase>
<phase name='idealLoop' nodes='42' live='23' stamp='0.423'>
<phase_done name='idealLoop' nodes='42' live='23' stamp='0.423'/>
</phase>
<phase_done name='optimizer' nodes='42' live='23' stamp='0.423'/>
</phase>
<phase name='matcher' nodes='42' live='23' stamp='0.423'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.424'/>
</phase>
<phase name='regalloc' nodes='29' live='29' stamp='0.424'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='32' stamp='0.424'/>
</phase>
<phase name='output' nodes='33' live='32' stamp='0.424'>
<phase_done name='output' nodes='40' live='38' stamp='0.426'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='844' x='847'/>
<code_cache total_blobs='250' nmethods='6' adapters='155' free_code_cache='250536768'/>
<task_done success='1' nmsize='120' count='16053' stamp='0.428'/>
</task>
<task compile_id='4' method='java/lang/String charAt (I)C' bytes='29' count='159029' iicount='159029' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='159029'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='844' bci='13' reason='unloaded' action='reinterpret' index='243' klass='846'/>
<parse method='844' uses='159029' stamp='0.432'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='159029' cnt='159029' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='159029' not_taken='0' cnt='159029' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35048' stamp='0.432'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.432'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.432'>
<phase name='ccp' nodes='103' live='63' stamp='0.432'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.432'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.432'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.432'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.432'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.433'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.433'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.433'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.433'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.433'>
<phase_done name='output' nodes='93' live='85' stamp='0.453'/>
</phase>
<code_cache total_blobs='255' nmethods='11' adapters='157' free_code_cache='250539520'/>
<task_done success='1' nmsize='216' count='159068' stamp='0.456'/>
</task>
<task compile_id='20' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1605' backedge_count='104448' iicount='1605' osr_bci='37' stamp='0.465'>
<phase name='parse' nodes='3' live='3' stamp='0.465'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1605'/>
<parse method='844' uses='1605' osr_bci='37' stamp='0.474'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1154' not_taken='99332' cnt='100486' prob='0.0114842'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='99327' not_taken='5' cnt='99332' prob='0.99995'/>
<parse_done nodes='169' live='162' memory='48088' stamp='0.474'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.474'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.474'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.474'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.474'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.474'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.475'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.475'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='379' live='205' stamp='0.475'/>
</phase>
<phase name='ccp' nodes='379' live='205' stamp='0.475'>
<phase_done name='ccp' nodes='379' live='205' stamp='0.475'/>
</phase>
<phase name='idealLoop' nodes='381' live='200' stamp='0.475'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='385' live='195' stamp='0.475'/>
</phase>
<phase name='idealLoop' nodes='385' live='195' stamp='0.475'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='409' inner_loop='1' main_loop='409' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='431' live='231' stamp='0.476'/>
</phase>
<phase name='idealLoop' nodes='431' live='231' stamp='0.476'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='293' stamp='0.476'/>
</phase>
<phase name='idealLoop' nodes='507' live='293' stamp='0.476'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='474' inner_loop='1' main_loop='474' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='507' live='286' stamp='0.476'/>
</phase>
<phase_done name='optimizer' nodes='567' live='273' stamp='0.476'/>
</phase>
<phase name='matcher' nodes='567' live='273' stamp='0.476'>
<phase_done name='matcher' nodes='219' live='219' stamp='0.477'/>
</phase>
<phase name='regalloc' nodes='302' live='302' stamp='0.477'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='321' live='318' stamp='0.478'/>
</phase>
<phase name='output' nodes='321' live='318' stamp='0.478'>
<phase_done name='output' nodes='356' live='330' stamp='0.481'/>
</phase>
<code_cache total_blobs='266' nmethods='17' adapters='162' free_code_cache='250528896'/>
<task_done success='1' nmsize='504' count='1608' backedge_count='104571' stamp='0.487'/>
</task>
<task compile_id='23' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='35456' iicount='35456' stamp='0.491'>
<phase name='parse' nodes='3' live='3' stamp='0.491'>
<type id='727' name='boolean'/>
<type id='728' name='char'/>
<klass id='844' name='java/io/WinNTFileSystem' flags='0'/>
<method id='845' holder='844' name='isSlash' return='727' arguments='728' flags='2' bytes='18' iicount='35456'/>
<parse method='845' uses='35456' stamp='0.491'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='2327' not_taken='33128' cnt='35455' prob='0.0656325'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='31903' not_taken='1226' cnt='33129' prob='0.962993'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.491'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.491'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.491'>
<phase name='ccp' nodes='48' live='27' stamp='0.491'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.491'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.491'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.491'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.491'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.491'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.491'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.491'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.491'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.491'>
<phase_done name='output' nodes='46' live='43' stamp='0.491'/>
</phase>
<code_cache total_blobs='269' nmethods='19' adapters='163' free_code_cache='250526656'/>
<task_done success='1' nmsize='120' count='35457' stamp='0.493'/>
</task>
<task compile_id='24' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='32264' iicount='32264' stamp='0.499'>
<phase name='parse' nodes='3' live='3' stamp='0.499'>
<klass id='806' name='java/lang/StringBuffer' flags='17'/>
<type id='728' name='char'/>
<method id='844' holder='806' name='append' return='806' arguments='728' flags='33' bytes='13' iicount='32264'/>
<parse method='844' uses='32264' stamp='0.499'>
<bc code='183' bci='7'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='846' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='32573'/>
<call method='846' count='31752' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='32264' stamp='0.499'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='847' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='34420'/>
<call method='847' count='32061' prof_factor='0.990514' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='32264' stamp='0.499'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='33910' not_taken='510' cnt='34420' prob='0.985183'/>
<bc code='183' bci='17'/>
<method id='849' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='752'/>
<call method='849' count='502' prof_factor='0.937362' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='478' stamp='0.504'>
<bc code='183' bci='31'/>
<method id='853' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='853' count='-1' prof_factor='0.635638' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='853' bci='7' reason='unloaded' action='reinterpret' index='143' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='174' live='172' memory='50160' stamp='0.504'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='815'/>
<call method='851' count='502' prof_factor='0.937362' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='478' stamp='0.521'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='5499'/>
<call method='856' count='-1' prof_factor='0.586503' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='857' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='14' compile_kind='c2n' level='0' iicount='7296'/>
<call method='857' count='-1' prof_factor='0.586503' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='366' live='362' memory='88816' stamp='0.521'/>
</parse>
<parse_done nodes='396' live='391' memory='95848' stamp='0.521'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='446' live='438' memory='105080' stamp='0.521'/>
</parse>
<parse_done nodes='467' live='458' memory='108304' stamp='0.521'/>
</parse>
<phase_done name='parse' nodes='469' live='292' stamp='0.521'/>
</phase>
<phase name='optimizer' nodes='469' live='292' stamp='0.521'>
<phase name='escapeAnalysis' nodes='473' live='288' stamp='0.521'>
<phase name='connectionGraph' nodes='473' live='288' stamp='0.521'>
<phase_done name='connectionGraph' nodes='473' live='288' stamp='0.521'/>
</phase>
<phase_done name='escapeAnalysis' nodes='473' live='288' stamp='0.521'/>
</phase>
<phase name='ccp' nodes='473' live='288' stamp='0.522'>
<phase_done name='ccp' nodes='473' live='288' stamp='0.522'/>
</phase>
<phase name='idealLoop' nodes='473' live='287' stamp='0.522'>
<phase_done name='idealLoop' nodes='491' live='278' stamp='0.522'/>
</phase>
<phase name='idealLoop' nodes='491' live='278' stamp='0.522'>
<phase_done name='idealLoop' nodes='497' live='278' stamp='0.522'/>
</phase>
<phase_done name='optimizer' nodes='661' live='408' stamp='0.522'/>
</phase>
<phase name='matcher' nodes='661' live='408' stamp='0.522'>
<phase_done name='matcher' nodes='401' live='401' stamp='0.523'/>
</phase>
<phase name='regalloc' nodes='509' live='508' stamp='0.523'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='666' live='599' stamp='0.526'/>
</phase>
<phase name='output' nodes='668' live='601' stamp='0.526'>
<phase_done name='output' nodes='692' live='614' stamp='0.531'/>
</phase>
<code_cache total_blobs='276' nmethods='25' adapters='164' free_code_cache='250512704'/>
<task_done success='1' nmsize='1448' count='32264' inlined_bytes='125' stamp='0.547'/>
</task>
<task compile_id='31' method='java/lang/String indexOf (II)I' bytes='70' count='1717' backedge_count='104866' iicount='1717' stamp='0.565'>
<phase name='parse' nodes='3' live='3' stamp='0.565'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='1717'/>
<parse method='844' uses='1717' stamp='0.565'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='1511' not_taken='0' cnt='1511' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='1242' not_taken='269' cnt='1511' prob='0.821972'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='1242' cnt='1242' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1236' not_taken='99751' cnt='100987' prob='0.0122392'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='99745' not_taken='6' cnt='99751' prob='0.99994'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1236' not_taken='99751' cnt='99745' prob='0.0122392'/>
<parse_done nodes='184' live='174' memory='50272' stamp='0.565'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.565'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.565'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.565'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.565'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.565'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.566'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.566'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.566'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.566'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.566'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.566'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.566'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.566'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='288' stamp='0.567'/>
</phase>
<phase name='idealLoop' nodes='418' live='288' stamp='0.567'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='271' stamp='0.567'/>
</phase>
<phase name='idealLoop' nodes='418' live='271' stamp='0.567'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='268' stamp='0.567'/>
</phase>
<phase_done name='optimizer' nodes='481' live='258' stamp='0.567'/>
</phase>
<phase name='matcher' nodes='481' live='258' stamp='0.567'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.567'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.568'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.568'/>
</phase>
<phase name='output' nodes='296' live='293' stamp='0.568'>
<phase_done name='output' nodes='329' live='306' stamp='0.579'/>
</phase>
<code_cache total_blobs='290' nmethods='31' adapters='170' free_code_cache='250487488'/>
<task_done success='1' nmsize='504' count='1730' backedge_count='104940' stamp='0.584'/>
</task>
</compilation_log>
<compilation_log thread='18132'>
<start_compile_thread name='C2 CompilerThread0' thread='18132' process='23380' stamp='0.383'/>
<task compile_id='8' method='java/lang/String hashCode ()I' bytes='55' count='2120' backedge_count='53249' iicount='2120' stamp='0.420'>
<phase name='parse' nodes='3' live='3' stamp='0.420'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='2120'/>
<parse method='844' uses='2120' stamp='0.420'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='975' not_taken='767' cnt='1742' prob='0.559702'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='766' cnt='767' prob='0.00130378'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='766' not_taken='49153' cnt='49919' prob='0.0153449'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='766' not_taken='49153' cnt='49153' prob='0.0153449'/>
<parse_done nodes='190' live='184' memory='50048' stamp='0.421'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.421'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.421'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.421'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.421'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.421'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.421'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.421'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.421'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.421'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.421'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.421'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.422'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.422'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.422'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.422'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.422'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='0.422'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='0.422'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.423'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.423'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.423'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.423'>
<phase_done name='output' nodes='209' live='200' stamp='0.423'/>
</phase>
<code_cache total_blobs='250' nmethods='7' adapters='156' free_code_cache='250546624'/>
<task_done success='1' nmsize='376' count='2127' backedge_count='53350' stamp='0.432'/>
</task>
<task compile_id='7' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='10788' iicount='10788' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='844' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='10788'/>
<parse method='844' uses='10788' stamp='0.432'>
<parse_done nodes='54' live='53' memory='27160' stamp='0.432'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.432'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.432'>
<phase name='ccp' nodes='56' live='38' stamp='0.432'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.432'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.432'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.432'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.432'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.432'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.433'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.433'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.433'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.433'>
<phase_done name='output' nodes='55' live='53' stamp='0.433'/>
</phase>
<code_cache total_blobs='254' nmethods='9' adapters='157' free_code_cache='250539136'/>
<task_done success='1' nmsize='152' count='10793' stamp='0.438'/>
</task>
<task compile_id='16' method='java/lang/String length ()I' bytes='6' count='31233' iicount='31233' stamp='0.457'>
<phase name='parse' nodes='3' live='3' stamp='0.457'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='844' holder='741' name='length' return='733' flags='1' bytes='6' iicount='31233'/>
<parse method='844' uses='31233' stamp='0.457'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25944' stamp='0.457'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.457'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.457'>
<phase name='ccp' nodes='45' live='27' stamp='0.457'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.457'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.457'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.457'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.457'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.457'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.457'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.457'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.457'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.457'>
<phase_done name='output' nodes='38' live='37' stamp='0.460'/>
</phase>
<code_cache total_blobs='258' nmethods='13' adapters='158' free_code_cache='250537408'/>
<task_done success='1' nmsize='120' count='31244' stamp='0.462'/>
</task>
<task compile_id='22' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='32512' iicount='32512' stamp='0.487'>
<phase name='parse' nodes='3' live='3' stamp='0.491'>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='728' name='char'/>
<method id='844' holder='805' name='append' return='805' arguments='728' flags='1' bytes='29' iicount='32556'/>
<parse method='844' uses='32556' stamp='0.491'>
<bc code='183' bci='7'/>
<type id='735' name='void'/>
<type id='733' name='int'/>
<method id='846' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='34401'/>
<call method='846' count='32044' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='32556' stamp='0.491'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='33893' not_taken='508' cnt='34401' prob='0.985233'/>
<bc code='183' bci='17'/>
<method id='847' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='750'/>
<call method='847' count='500' prof_factor='0.946368' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='480' stamp='0.491'>
<bc code='183' bci='31'/>
<method id='851' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='851' count='-1' prof_factor='0.64' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='851' bci='7' reason='unloaded' action='reinterpret' index='143' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44880' stamp='0.491'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='813'/>
<call method='849' count='500' prof_factor='0.946368' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='480' stamp='0.493'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='5485'/>
<call method='854' count='-1' prof_factor='0.590406' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='855' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='14' compile_kind='c2n' level='0' iicount='7296'/>
<call method='855' count='-1' prof_factor='0.590406' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='0.494'/>
</parse>
<parse_done nodes='365' live='360' memory='89736' stamp='0.499'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98440' stamp='0.499'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='0.499'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='0.499'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='0.499'>
<phase name='connectionGraph' nodes='421' live='256' stamp='0.499'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='0.499'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='0.499'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='0.500'>
<phase_done name='ccp' nodes='421' live='256' stamp='0.500'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='0.500'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='0.500'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='0.500'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='0.500'/>
</phase>
<phase_done name='optimizer' nodes='504' live='285' stamp='0.500'/>
</phase>
<phase name='matcher' nodes='504' live='285' stamp='0.500'>
<phase_done name='matcher' nodes='284' live='284' stamp='0.501'/>
</phase>
<phase name='regalloc' nodes='353' live='352' stamp='0.501'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='463' live='427' stamp='0.504'/>
</phase>
<phase name='output' nodes='463' live='427' stamp='0.504'>
<phase_done name='output' nodes='483' live='440' stamp='0.504'/>
</phase>
<code_cache total_blobs='273' nmethods='22' adapters='164' free_code_cache='250520576'/>
<task_done success='1' nmsize='872' count='32573' inlined_bytes='96' stamp='0.514'/>
</task>
<task compile_id='30' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='34433' iicount='34433' stamp='0.558'>
<phase name='parse' nodes='3' live='3' stamp='0.558'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='805' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='805' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='34433'/>
<parse method='844' uses='34433' stamp='0.559'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='33919' not_taken='514' cnt='34433' prob='0.985072'/>
<bc code='183' bci='17'/>
<method id='846' holder='805' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='756'/>
<call method='846' count='506' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='514' stamp='0.561'>
<bc code='183' bci='31'/>
<method id='849' holder='805' name='hugeCapacity' return='733' arguments='733' flags='2' bytes='28' iicount='1'/>
<call method='849' count='-1' prof_factor='0.679894' inline='1'/>
<klass id='763' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='849' bci='7' reason='unloaded' action='reinterpret' index='143' klass='763'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.561'/>
</parse>
<bc code='184' bci='20'/>
<klass id='833' name='[C' flags='1041'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOf' return='833' arguments='833 733' flags='9' bytes='19' iicount='821'/>
<call method='848' count='506' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='514' stamp='0.564'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='5530'/>
<call method='852' count='-1' prof_factor='0.626066' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='853' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='14' compile_kind='c2n' level='0' iicount='7296'/>
<call method='853' count='-1' prof_factor='0.626066' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='320' live='316' memory='77672' stamp='0.565'/>
</parse>
<parse_done nodes='347' live='342' memory='83016' stamp='0.565'/>
</parse>
<phase_done name='parse' nodes='349' live='221' stamp='0.565'/>
</phase>
<phase name='optimizer' nodes='349' live='221' stamp='0.565'>
<phase name='escapeAnalysis' nodes='353' live='218' stamp='0.565'>
<phase name='connectionGraph' nodes='354' live='219' stamp='0.565'>
<phase_done name='connectionGraph' nodes='354' live='219' stamp='0.565'/>
</phase>
<phase_done name='escapeAnalysis' nodes='354' live='219' stamp='0.565'/>
</phase>
<phase name='ccp' nodes='354' live='219' stamp='0.565'>
<phase_done name='ccp' nodes='354' live='219' stamp='0.565'/>
</phase>
<phase name='idealLoop' nodes='354' live='218' stamp='0.565'>
<phase_done name='idealLoop' nodes='360' live='208' stamp='0.565'/>
</phase>
<phase name='idealLoop' nodes='360' live='208' stamp='0.565'>
<phase_done name='idealLoop' nodes='366' live='208' stamp='0.565'/>
</phase>
<phase_done name='optimizer' nodes='424' live='246' stamp='0.566'/>
</phase>
<phase name='matcher' nodes='424' live='246' stamp='0.566'>
<phase_done name='matcher' nodes='246' live='246' stamp='0.566'/>
</phase>
<phase name='regalloc' nodes='309' live='308' stamp='0.566'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='385' live='360' stamp='0.568'/>
</phase>
<phase name='output' nodes='385' live='360' stamp='0.568'>
<phase_done name='output' nodes='406' live='372' stamp='0.579'/>
</phase>
<code_cache total_blobs='291' nmethods='34' adapters='170' free_code_cache='250495552'/>
<task_done success='1' nmsize='712' count='34442' inlined_bytes='69' stamp='0.600'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.619'/>
</hotspot_log>
